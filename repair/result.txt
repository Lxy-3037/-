476 Vulnerabilities found in row 131:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
ZeroMemory ( & credssp -> authInfo , sizeof ( SecBuffer ) ) ;

variable_name: authInfo
first_occurrence: <S2SV_StartBug> ZeroMemory ( & credssp -> authInfo , sizeof ( SecBuffer ) ) ;
pointer_declarations {'credssp'}

variable_name: ZeroMemory
first_occurrence: ZeroMemory ( credssp , sizeof ( rdpCredssp ) ) ;
pointer_declarations set()

variable_name: SecBuffer
first_occurrence: ZeroMemory ( & credssp -> negoToken , sizeof ( SecBuffer ) ) ;
pointer_declarations {'credssp'}

Fixed code 1:
if (credssp == NULL) return;
ZeroMemory ( & credssp -> authInfo , sizeof ( SecBuffer ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 132:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 133:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
return FALSE ;

variable_name: FALSE
first_occurrence: if ( tls_accept ( transport -> TlsIn , transport -> settings -> CertificateFile , transport -> settings -> PrivateKeyFile ) != TRUE ) return FALSE ;
pointer_declarations {'settings', 'transport'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 134:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
return FALSE ;

variable_name: FALSE
first_occurrence: if ( ! transport_connect_tls ( transport ) ) return FALSE ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 135:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
if ( ! handle )

variable_name: handle
first_occurrence: CWE-476 void * sspi_SecureHandleGetLowerPointer ( SecHandle * handle )
pointer_declarations {'handle', 'sspi_SecureHandleGetLowerPointer'}

Fixed code 1:
if (handle == NULL) return;
if ( ! handle )

------------------------------------------------------------
476 Vulnerabilities found in row 136:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
if ( ! handle )

variable_name: handle
first_occurrence: CWE-476 void * sspi_SecureHandleGetUpperPointer ( SecHandle * handle )
pointer_declarations {'handle', 'sspi_SecureHandleGetUpperPointer'}

Fixed code 1:
if (handle == NULL) return;
if ( ! handle )

------------------------------------------------------------
476 Vulnerabilities found in row 166:

link: https://github.com/torvalds/linux/commit/0a1d52994d440e21def1c2174932410b4f2a98a1:

Vulnerability 1:
int error ;

variable_name: error
first_occurrence: <S2SV_StartBug> int error ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
error = security_mmap_addr ( address ) ;

variable_name: error
first_occurrence: <S2SV_StartBug> int error ;
pointer_declarations set()

variable_name: security_mmap_addr
first_occurrence: <S2SV_StartBug> error = security_mmap_addr ( address ) ;
pointer_declarations set()

variable_name: address
first_occurrence: CWE-476 int expand_downwards ( struct vm_area_struct * vma , unsigned long address )
pointer_declarations {'vma'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 168:

link: https://github.com/FFmpeg/FFmpeg/commit/0a709e2a10b8288a0cc383547924ecfe285cef89:

Vulnerability 1:
if ( cid <= 0 )

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;

variable_name: avpriv_dnxhd_get_frame_size
first_occurrence: <S2SV_StartBug> dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;
pointer_declarations {'dctx'}

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 2:
if (dctx == NULL) return;
dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;

------------------------------------------------------------
Vulnerability 3:
if ( dctx -> remaining <= 0 ) {

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 3:
if (dctx == NULL) return;
if ( dctx -> remaining <= 0 ) {

------------------------------------------------------------
Vulnerability 4:
dctx -> remaining = dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;

variable_name: w
first_occurrence: dctx -> w = ( state >> 32 ) & 0xFFFF ;
pointer_declarations {'dctx'}

variable_name: h
first_occurrence: dctx -> h = ( state >> 32 ) & 0xFFFF ;
pointer_declarations {'dctx'}

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

variable_name: dnxhd_get_hr_frame_size
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> dctx -> remaining = dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;
pointer_declarations {'dctx'}

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 4:
if (dctx == NULL) return;
dctx -> remaining = dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;

------------------------------------------------------------
Vulnerability 5:
if ( dctx -> remaining <= 0 )

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 5:
if (dctx == NULL) return;
if ( dctx -> remaining <= 0 )

------------------------------------------------------------
Vulnerability 6:
return dctx -> remaining ;

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 6:
if (dctx == NULL) return;
return dctx -> remaining ;

------------------------------------------------------------
476 Vulnerabilities found in row 174:

link: https://github.com/torvalds/linux/commit/0ad646c81b2182f7fa67ec0c8c825e0ee165696d:

Vulnerability 1:
dev_net_set ( dev , net ) ;

variable_name: dev
first_occurrence: struct net_device * dev ;
pointer_declarations {'dev'}

variable_name: dev_net_set
first_occurrence: <S2SV_StartBug> dev_net_set ( dev , net ) ;
pointer_declarations set()

variable_name: net
first_occurrence: CWE-476 static int tun_set_iff ( struct net * net , struct file * file , struct ifreq * ifr )
pointer_declarations {'file', 'net', 'ifr'}

Fixed code 1:
if (dev == NULL) return;
if (net == NULL) return;
dev_net_set ( dev , net ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 175:

link: https://github.com/torvalds/linux/commit/0ad646c81b2182f7fa67ec0c8c825e0ee165696d:

Vulnerability 1:
static int dev_get_valid_name ( struct net * net ,

variable_name: net
first_occurrence: CWE-476 <S2SV_StartBug> static int dev_get_valid_name ( struct net * net , <S2SV_EndBug> struct net_device * dev , const char * name )
pointer_declarations {'dev', 'name', 'net'}

variable_name: dev_get_valid_name
first_occurrence: CWE-476 <S2SV_StartBug> static int dev_get_valid_name ( struct net * net , <S2SV_EndBug> struct net_device * dev , const char * name )
pointer_declarations {'dev', 'name', 'net'}

Fixed code 1:
if (net == NULL) return;
static int dev_get_valid_name ( struct net * net ,

------------------------------------------------------------
476 Vulnerabilities found in row 379:

link: https://github.com/heimdal/heimdal/commit/1a6a6e462dc2ac6111f9e02c6852ddec4849b887:

Vulnerability 1:
& r -> client_princ -> name ,

variable_name: name
first_occurrence: kdc_log ( context , config , 5 ,  , pat [ n ] . name , r -> client_name ) ;
pointer_declarations {'r'}

Fixed code 1:
if (r == NULL) return;
if (client_princ == NULL) return;
& r -> client_princ -> name ,

------------------------------------------------------------
Vulnerability 2:
& r -> client_princ -> realm ,

variable_name: realm
first_occurrence: ret = _krb5_principalname2krb5_principal ( context , & r -> server_princ , * ( b -> sname ) , b -> realm ) ;
pointer_declarations {'r', 'b'}

Fixed code 2:
if (r == NULL) return;
if (client_princ == NULL) return;
& r -> client_princ -> realm ,

------------------------------------------------------------
476 Vulnerabilities found in row 448:

link: https://github.com/dinhviethoa/libetpan/commit/1fe8fbc032ccda1db9af66d93016b49c16c1f22d:

Vulnerability 1:
cur_token = * indx ;

variable_name: cur_token
first_occurrence: size_t cur_token ;
pointer_declarations set()

variable_name: indx
first_occurrence: CWE-476 static int mailimf_group_parse ( const char * message , size_t length , size_t * indx , struct mailimf_group * * result )
pointer_declarations {'result', 'message', 'indx'}

Fixed code 1:
if (indx == NULL) return;
cur_token = * indx ;

------------------------------------------------------------
Vulnerability 2:
res = r ;

variable_name: r
first_occurrence: int r ;
pointer_declarations set()

variable_name: res
first_occurrence: int res ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 505:

link: https://github.com/torvalds/linux/commit/23fcb3340d033d9f081e21e6c12c2db7eaa541d3:

Vulnerability 1:
switch ( dip -> di_format ) {

variable_name: di_format
first_occurrence: case S_IFIFO : case S_IFCHR : case S_IFBLK : case S_IFSOCK : if ( dip -> di_format != XFS_DINODE_FMT_DEV ) return __this_address ;
pointer_declarations {'dip'}

Fixed code 1:
if (dip == NULL) return;
switch ( dip -> di_format ) {

------------------------------------------------------------
476 Vulnerabilities found in row 524:

link: https://github.com/radare/radare2/commit/252afb1cff9676f3ae1f341a28448bf2c8b6e308:

Vulnerability 1:
ut8 opcode = * ( p4 ++ ) & 0xff ;

variable_name: p4
first_occurrence: const ut8 * p4 = r_buf_get_at ( binfile -> buf , debug_info_off , NULL ) ;
pointer_declarations {'p4', 'binfile'}

variable_name: ut8
first_occurrence: const ut8 * p4 = r_buf_get_at ( binfile -> buf , debug_info_off , NULL ) ;
pointer_declarations {'p4', 'binfile'}

variable_name: opcode
first_occurrence: <S2SV_StartBug> ut8 opcode = * ( p4 ++ ) & 0xff ;
pointer_declarations set()

Fixed code 1:
if (p4 == NULL) return;
ut8 opcode = * ( p4 ++ ) & 0xff ;

------------------------------------------------------------
476 Vulnerabilities found in row 572:

link: https://github.com/torvalds/linux/commit/297a6961ffb8ff4dc66c9fbf53b924bd1dda05d5:

Vulnerability 1:
priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;

variable_name: dev
first_occurrence: struct unimac_mdio_pdata * pdata = pdev -> dev . platform_data ;
pointer_declarations {'pdata', 'pdev'}

variable_name: base
first_occurrence: <S2SV_StartBug> priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;
pointer_declarations {'r', 'priv', 'pdev'}

variable_name: resource_size
first_occurrence: <S2SV_StartBug> priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;
pointer_declarations {'r', 'priv', 'pdev'}

variable_name: start
first_occurrence: <S2SV_StartBug> priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;
pointer_declarations {'r', 'priv', 'pdev'}

variable_name: devm_ioremap
first_occurrence: <S2SV_StartBug> priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;
pointer_declarations {'r', 'priv', 'pdev'}

Fixed code 1:
if (r == NULL) return;
if (priv == NULL) return;
if (pdev == NULL) return;
priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 597:

link: https://github.com/FFmpeg/FFmpeg/commit/2aa9047486dbff12d9e040f917e5f799ed2fd78b:

Vulnerability 1:
mpeg4_decode_profile_level ( s , gb ) ;

variable_name: s
first_occurrence: MpegEncContext * s = & ctx -> m ;
pointer_declarations {'s', 'ctx'}

variable_name: mpeg4_decode_profile_level
first_occurrence: <S2SV_StartBug> mpeg4_decode_profile_level ( s , gb ) ;
pointer_declarations set()

variable_name: gb
first_occurrence: CWE-476 int ff_mpeg4_decode_picture_header ( Mpeg4DecContext * ctx , GetBitContext * gb )
pointer_declarations {'gb', 'ctx'}

Fixed code 1:
if (s == NULL) return;
if (gb == NULL) return;
mpeg4_decode_profile_level ( s , gb ) ;

------------------------------------------------------------
Vulnerability 2:
( s -> avctx -> level > 0 && s -> avctx -> level < 9 ) ) {

variable_name: level
first_occurrence: <S2SV_EndBug> if ( s -> avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO && <S2SV_StartBug> ( s -> avctx -> level > 0 && s -> avctx -> level < 9 ) )
pointer_declarations {'avctx', 's'}

Fixed code 2:
if (avctx == NULL) return;
if (s == NULL) return;
( s -> avctx -> level > 0 && s -> avctx -> level < 9 ) ) {

------------------------------------------------------------
Vulnerability 3:
}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
if ( ! s -> avctx -> bits_per_raw_sample ) {

variable_name: bits_per_raw_sample
first_occurrence: if ( ! s -> studio_profile && s -> avctx -> bits_per_raw_sample != 8 ) s -> avctx -> bits_per_raw_sample = 0 ;
pointer_declarations {'avctx', 's'}

Fixed code 4:
if (avctx == NULL) return;
if (s == NULL) return;
if ( ! s -> avctx -> bits_per_raw_sample ) {

------------------------------------------------------------
476 Vulnerabilities found in row 598:

link: https://github.com/FFmpeg/FFmpeg/commit/2aa9047486dbff12d9e040f917e5f799ed2fd78b:

Vulnerability 1:
static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb )

variable_name: MpegEncContext
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

variable_name: mpeg4_decode_profile_level
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

variable_name: gb
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

variable_name: s
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

variable_name: GetBitContext
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

Fixed code 1:
if (s == NULL) return;
if (gb == NULL) return;
static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb )

------------------------------------------------------------
Vulnerability 2:
s -> avctx -> level = get_bits ( gb , 4 ) ;

variable_name: level
first_occurrence: <S2SV_StartBug> s -> avctx -> level = get_bits ( gb , 4 ) ;
pointer_declarations {'avctx', 's'}

variable_name: gb
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

variable_name: get_bits
first_occurrence: s -> avctx -> profile = get_bits ( gb , 4 ) ;
pointer_declarations {'avctx', 's'}

Fixed code 2:
if (avctx == NULL) return;
if (s == NULL) return;
if (gb == NULL) return;
s -> avctx -> level = get_bits ( gb , 4 ) ;

------------------------------------------------------------
Vulnerability 3:
if ( s -> avctx -> profile == 0 && s -> avctx -> level == 8 ) {

variable_name: profile
first_occurrence: s -> avctx -> profile = get_bits ( gb , 4 ) ;
pointer_declarations {'avctx', 's'}

variable_name: level
first_occurrence: <S2SV_StartBug> s -> avctx -> level = get_bits ( gb , 4 ) ;
pointer_declarations {'avctx', 's'}

Fixed code 3:
if (avctx == NULL) return;
if (s == NULL) return;
if ( s -> avctx -> profile == 0 && s -> avctx -> level == 8 ) {

------------------------------------------------------------
Vulnerability 4:
s -> avctx -> level = 0 ;

variable_name: level
first_occurrence: <S2SV_StartBug> s -> avctx -> level = get_bits ( gb , 4 ) ;
pointer_declarations {'avctx', 's'}

Fixed code 4:
if (avctx == NULL) return;
if (s == NULL) return;
s -> avctx -> level = 0 ;

------------------------------------------------------------
476 Vulnerabilities found in row 625:

link: https://github.com/wireshark/wireshark/commit/2cb5985bf47bdc8bea78d28483ed224abdd33dc6:

Vulnerability 1:
usb_conv_info -> class_data = u3v_conv_info ;

variable_name: class_data
first_occurrence: u3v_conv_info = ( u3v_conv_info_t * ) usb_conv_info -> class_data ;
pointer_declarations {'usb_conv_info'}

variable_name: u3v_conv_info
first_occurrence: u3v_conv_info_t * u3v_conv_info = NULL ;
pointer_declarations {'u3v_conv_info'}

Fixed code 1:
if (u3v_conv_info == NULL) return;
if (usb_conv_info == NULL) return;
usb_conv_info -> class_data = u3v_conv_info ;

------------------------------------------------------------
476 Vulnerabilities found in row 626:

link: https://github.com/wireshark/wireshark/commit/2cb5985bf47bdc8bea78d28483ed224abdd33dc6:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 627:

link: https://github.com/wireshark/wireshark/commit/2cb5985bf47bdc8bea78d28483ed224abdd33dc6:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 628:

link: https://github.com/wireshark/wireshark/commit/2cb5985bf47bdc8bea78d28483ed224abdd33dc6:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 647:

link: https://github.com/mdadams/jasper/commit/2e82fa00466ae525339754bb3ab0a0474a31d4bd:

Vulnerability 1:
if ( roishift == 0 && bgshift == 0 ) {

variable_name: bgshift
first_occurrence: CWE-476 static void jpc_undo_roi ( jas_matrix_t * x , int roishift , int bgshift , int numbps )
pointer_declarations {'x'}

variable_name: roishift
first_occurrence: CWE-476 static void jpc_undo_roi ( jas_matrix_t * x , int roishift , int bgshift , int numbps )
pointer_declarations {'x'}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
mask = ( 1 << numbps ) - 1 ;

variable_name: mask
first_occurrence: uint_fast32_t mask ;
pointer_declarations set()

variable_name: numbps
first_occurrence: CWE-476 static void jpc_undo_roi ( jas_matrix_t * x , int roishift , int bgshift , int numbps )
pointer_declarations {'x'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 648:

link: https://github.com/mdadams/jasper/commit/2e82fa00466ae525339754bb3ab0a0474a31d4bd:

Vulnerability 1:
return ( tsfb -> numlvls > 0 ) ? jpc_tsfb_synthesize2 ( tsfb ,

variable_name: jpc_tsfb_synthesize2
first_occurrence: <S2SV_StartBug> return ( tsfb -> numlvls > 0 ) ? jpc_tsfb_synthesize2 ( tsfb , <S2SV_EndBug> jas_seq2d_getref ( a , jas_seq2d_xstart ( a ) , jas_seq2d_ystart ( a ) ) , jas_seq2d_xstart ( a ) , jas_seq2d_ystart ( a ) , jas_seq2d_width ( a ) , jas_seq2d_height ( a ) , jas_seq2d_rowstep ( a ) , tsfb -> numlvls - 1 ) : 0 ;
pointer_declarations {'tsfb'}

variable_name: numlvls
first_occurrence: <S2SV_StartBug> return ( tsfb -> numlvls > 0 ) ? jpc_tsfb_synthesize2 ( tsfb , <S2SV_EndBug> jas_seq2d_getref ( a , jas_seq2d_xstart ( a ) , jas_seq2d_ystart ( a ) ) , jas_seq2d_xstart ( a ) , jas_seq2d_ystart ( a ) , jas_seq2d_width ( a ) , jas_seq2d_height ( a ) , jas_seq2d_rowstep ( a ) , tsfb -> numlvls - 1 ) : 0 ;
pointer_declarations {'tsfb'}

Fixed code 1:
if (tsfb == NULL) return;
return ( tsfb -> numlvls > 0 ) ? jpc_tsfb_synthesize2 ( tsfb ,

------------------------------------------------------------
476 Vulnerabilities found in row 665:

link: https://github.com/torvalds/linux/commit/2fae9e5a7babada041e2e161699ade2447a01989:

Vulnerability 1:
usb_set_intfdata ( interface , dev ) ;

variable_name: dev
first_occurrence: struct device * idev = & interface -> dev ;
pointer_declarations {'interface', 'idev'}

variable_name: interface
first_occurrence: CWE-476 static int tower_probe ( struct usb_interface * interface , const struct usb_device_id * id )
pointer_declarations {'interface', 'id'}

variable_name: usb_set_intfdata
first_occurrence: <S2SV_StartBug> usb_set_intfdata ( interface , dev ) ;
pointer_declarations set()

Fixed code 1:
if (interface == NULL) return;
usb_set_intfdata ( interface , dev ) ;

------------------------------------------------------------
Vulnerability 2:
exit :

variable_name: exit
first_occurrence: if ( ! dev ) goto exit ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 668:

link: https://github.com/libgit2/libgit2/commit/2fdef641fd0dd2828bd948234ae86de75221a11a:

Vulnerability 1:
* head = NULL ;

variable_name: head
first_occurrence: CWE-476 int git_pkt_parse_line ( git_pkt * * head , const char * line , const char * * out , size_t bufflen )
pointer_declarations {'line', 'head', 'out'}

Fixed code 1:
if (head == NULL) return;
* head = NULL ;

------------------------------------------------------------
476 Vulnerabilities found in row 669:

link: https://github.com/libgit2/libgit2/commit/2fdef641fd0dd2828bd948234ae86de75221a11a:

Vulnerability 1:
if ( pkt == NULL )

variable_name: pkt
first_occurrence: git_pkt * pkt ;
pointer_declarations {'pkt'}

Fixed code 1:
if (pkt == NULL) return;
if ( pkt == NULL )

------------------------------------------------------------
476 Vulnerabilities found in row 670:

link: https://github.com/libgit2/libgit2/commit/2fdef641fd0dd2828bd948234ae86de75221a11a:

Vulnerability 1:
error = 0 ;

variable_name: error
first_occurrence: int error , recvd ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 681:

link: https://github.com/bitlbee/bitlbee/commit/30d598ce7cd3f136ee9d7097f39fa9818a272441:

Vulnerability 1:
px -> ft -> data = px ;

variable_name: data
first_occurrence: CWE-476 static gboolean prplcb_xfer_new_send_cb ( gpointer data , gint fd , b_input_condition cond )
pointer_declarations set()

Fixed code 1:
if (ft == NULL) return;
if (px == NULL) return;
px -> ft -> data = px ;

------------------------------------------------------------
476 Vulnerabilities found in row 683:

link: https://github.com/VirusTotal/yara/commit/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4:

Vulnerability 1:
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

variable_name: yyerror
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

variable_name: yyscanner
first_occurrence: struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;
pointer_declarations {'yyscanner', 'yyg'}

variable_name: lex_env
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

Fixed code 1:
if (yyscanner == NULL) return;
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

------------------------------------------------------------
Vulnerability 2:
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

variable_name: yyerror
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

variable_name: yyscanner
first_occurrence: struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;
pointer_declarations {'yyscanner', 'yyg'}

variable_name: lex_env
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

Fixed code 2:
if (yyscanner == NULL) return;
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

------------------------------------------------------------
Vulnerability 3:
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

variable_name: yyerror
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

variable_name: yyscanner
first_occurrence: struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;
pointer_declarations {'yyscanner', 'yyg'}

variable_name: lex_env
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

Fixed code 3:
if (yyscanner == NULL) return;
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 684:

link: https://github.com/VirusTotal/yara/commit/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4:

Vulnerability 1:
if ( text [ 1 ] == EOF )

variable_name: text
first_occurrence: char text [ 4 ] =
pointer_declarations set()

variable_name: EOF
first_occurrence: <S2SV_StartBug> if ( text [ 1 ] == EOF ) <S2SV_EndBug> return 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( text [ 2 ] == EOF )

variable_name: text
first_occurrence: char text [ 4 ] =
pointer_declarations set()

variable_name: EOF
first_occurrence: <S2SV_StartBug> if ( text [ 1 ] == EOF ) <S2SV_EndBug> return 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( text [ 3 ] == EOF )

variable_name: text
first_occurrence: char text [ 4 ] =
pointer_declarations set()

variable_name: EOF
first_occurrence: <S2SV_StartBug> if ( text [ 1 ] == EOF ) <S2SV_EndBug> return 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 685:

link: https://github.com/VirusTotal/yara/commit/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 706:

link: https://github.com/FFmpeg/FFmpeg/commit/31c1c0b46a7021802c3d1d18039fca30dba5a14e:

Vulnerability 1:
if ( cid <= 0 )

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;

variable_name: avpriv_dnxhd_get_frame_size
first_occurrence: <S2SV_StartBug> dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;
pointer_declarations {'dctx'}

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 2:
if (dctx == NULL) return;
dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;

------------------------------------------------------------
Vulnerability 3:
if ( dctx -> remaining <= 0 ) {

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 3:
if (dctx == NULL) return;
if ( dctx -> remaining <= 0 ) {

------------------------------------------------------------
Vulnerability 4:
dctx -> remaining = dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;

variable_name: w
first_occurrence: dctx -> w = ( state >> 32 ) & 0xFFFF ;
pointer_declarations {'dctx'}

variable_name: h
first_occurrence: dctx -> h = ( state >> 32 ) & 0xFFFF ;
pointer_declarations {'dctx'}

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

variable_name: dnxhd_get_hr_frame_size
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> dctx -> remaining = dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;
pointer_declarations {'dctx'}

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 4:
if (dctx == NULL) return;
dctx -> remaining = dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;

------------------------------------------------------------
Vulnerability 5:
if ( dctx -> remaining <= 0 )

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 5:
if (dctx == NULL) return;
if ( dctx -> remaining <= 0 )

------------------------------------------------------------
Vulnerability 6:
return dctx -> remaining ;

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 6:
if (dctx == NULL) return;
return dctx -> remaining ;

------------------------------------------------------------
476 Vulnerabilities found in row 724:

link: https://github.com/torvalds/linux/commit/340d394a789518018f834ff70f7534fc463d3226:

Vulnerability 1:
if ( likely ( port -> exists && ! filtered ) )

variable_name: filtered
first_occurrence: bool filtered ;
pointer_declarations set()

variable_name: exists
first_occurrence: serio = port -> exists ? port -> serio : NULL ;
pointer_declarations {'port'}

variable_name: likely
first_occurrence: <S2SV_StartBug> if ( likely ( port -> exists && ! filtered ) ) <S2SV_EndBug> serio_interrupt ( serio , data , dfl ) ;
pointer_declarations {'port'}

Fixed code 1:
if (port == NULL) return;
if ( likely ( port -> exists && ! filtered ) )

------------------------------------------------------------
476 Vulnerabilities found in row 725:

link: https://github.com/torvalds/linux/commit/340d394a789518018f834ff70f7534fc463d3226:

Vulnerability 1:
port -> exists = true ;

variable_name: exists
first_occurrence: <S2SV_StartBug> port -> exists = true ;
pointer_declarations {'port'}

Fixed code 1:
if (port == NULL) return;
port -> exists = true ;

------------------------------------------------------------
Vulnerability 2:
mb ( ) ;

variable_name: mb
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> mb ( ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 726:

link: https://github.com/torvalds/linux/commit/340d394a789518018f834ff70f7534fc463d3226:

Vulnerability 1:
port -> exists = false ;

variable_name: exists
first_occurrence: <S2SV_StartBug> port -> exists = false ;
pointer_declarations {'port'}

Fixed code 1:
if (port == NULL) return;
port -> exists = false ;

------------------------------------------------------------
Vulnerability 2:
port -> serio = NULL ;

variable_name: serio
first_occurrence: CWE-476 static void i8042_stop ( struct serio * serio )
pointer_declarations {'serio'}

Fixed code 2:
if (port == NULL) return;
if (serio == NULL) return;
port -> serio = NULL ;

------------------------------------------------------------
476 Vulnerabilities found in row 729:

link: https://github.com/torvalds/linux/commit/34b2cef20f19c87999fff3da4071e66937db9644:

Vulnerability 1:
skb_dst_drop ( skb ) ;

variable_name: skb_dst_drop
first_occurrence: <S2SV_StartBug> skb_dst_drop ( skb ) ;
pointer_declarations set()

variable_name: skb
first_occurrence: CWE-476 void ipv4_pktinfo_prepare ( const struct sock * sk , struct sk_buff * skb )
pointer_declarations {'sk', 'skb'}

Fixed code 1:
if (skb == NULL) return;
skb_dst_drop ( skb ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 785:

link: https://github.com/torvalds/linux/commit/37863c43b2c6464f252862bf2e9768264e961678:

Vulnerability 1:
ret = key_permission ( key_ref , KEY_NEED_READ ) ;

variable_name: key_ref
first_occurrence: key_ref_t key_ref ;
pointer_declarations set()

variable_name: ret
first_occurrence: long ret ;
pointer_declarations set()

variable_name: key_permission
first_occurrence: <S2SV_StartBug> ret = key_permission ( key_ref , KEY_NEED_READ ) ;
pointer_declarations set()

variable_name: KEY_NEED_READ
first_occurrence: <S2SV_StartBug> ret = key_permission ( key_ref , KEY_NEED_READ ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 799:

link: https://github.com/torvalds/linux/commit/385097a3675749cbc9e97c085c0e5dfe4269ca51:

Vulnerability 1:
if ( ! info -> attrs [ NFC_ATTR_DEVICE_INDEX ] )

variable_name: NFC_ATTR_DEVICE_INDEX
first_occurrence: <S2SV_StartBug> if ( ! info -> attrs [ NFC_ATTR_DEVICE_INDEX ] ) <S2SV_EndBug> return - EINVAL ;
pointer_declarations {'info'}

variable_name: attrs
first_occurrence: <S2SV_StartBug> if ( ! info -> attrs [ NFC_ATTR_DEVICE_INDEX ] ) <S2SV_EndBug> return - EINVAL ;
pointer_declarations {'info'}

Fixed code 1:
if (info == NULL) return;
if ( ! info -> attrs [ NFC_ATTR_DEVICE_INDEX ] )

------------------------------------------------------------
476 Vulnerabilities found in row 803:

link: https://github.com/xkbcommon/libxkbcommon/commit/38e1766bc6e20108948aec8a0b222a4bad0254e9:

Vulnerability 1:
return true ;

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 810:

link: https://github.com/FFmpeg/FFmpeg/commit/3a2d21bc5f97aa0161db3ae731fc2732be6108b8:

Vulnerability 1:
if ( trk -> vos_len == 0 && par -> extradata_size > 0 &&

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 839:

link: https://github.com/vadz/libtiff/commit/3c5eb8b1be544e41d2c336191bc4936300ad7543:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 840:

link: https://github.com/vadz/libtiff/commit/3c5eb8b1be544e41d2c336191bc4936300ad7543:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 841:

link: https://github.com/vadz/libtiff/commit/3c5eb8b1be544e41d2c336191bc4936300ad7543:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 921:

link: https://github.com/torvalds/linux/commit/42cb14b110a5698ccf26ce59c4441722605a3743:

Vulnerability 1:
if ( PageDirty ( page ) ) {

variable_name: PageDirty
first_occurrence: <S2SV_StartBug> if ( PageDirty ( page ) )
pointer_declarations set()

variable_name: page
first_occurrence: CWE-476 void migrate_page_copy ( struct page * newpage , struct page * page )
pointer_declarations {'page', 'newpage'}

Fixed code 1:
if (page == NULL) return;
if ( PageDirty ( page ) ) {

------------------------------------------------------------
Vulnerability 2:
else

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 922:

link: https://github.com/torvalds/linux/commit/42cb14b110a5698ccf26ce59c4441722605a3743:

Vulnerability 1:
int expected_count = 1 + extra_count ;

variable_name: expected_count
first_occurrence: <S2SV_StartBug> int expected_count = 1 + extra_count ;
pointer_declarations set()

variable_name: extra_count
first_occurrence: CWE-476 int migrate_page_move_mapping ( struct address_space * mapping , struct page * newpage , struct page * page , struct buffer_head * head , enum migrate_mode mode , int extra_count )
pointer_declarations {'mapping', 'page', 'head', 'newpage'}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
radix_tree_replace_slot ( pslot , newpage ) ;

variable_name: pslot
first_occurrence: <S2SV_EndBug> void * * pslot ;
pointer_declarations {'pslot'}

variable_name: radix_tree_replace_slot
first_occurrence: <S2SV_StartBug> radix_tree_replace_slot ( pslot , newpage ) ;
pointer_declarations set()

variable_name: newpage
first_occurrence: CWE-476 int migrate_page_move_mapping ( struct address_space * mapping , struct page * newpage , struct page * page , struct buffer_head * head , enum migrate_mode mode , int extra_count )
pointer_declarations {'mapping', 'page', 'head', 'newpage'}

Fixed code 3:
if (pslot == NULL) return;
if (newpage == NULL) return;
radix_tree_replace_slot ( pslot , newpage ) ;

------------------------------------------------------------
Vulnerability 4:
__dec_zone_page_state ( page , NR_FILE_PAGES ) ;

variable_name: NR_FILE_PAGES
first_occurrence: <S2SV_StartBug> __dec_zone_page_state ( page , NR_FILE_PAGES ) ;
pointer_declarations set()

variable_name: page
first_occurrence: CWE-476 int migrate_page_move_mapping ( struct address_space * mapping , struct page * newpage , struct page * page , struct buffer_head * head , enum migrate_mode mode , int extra_count )
pointer_declarations {'mapping', 'page', 'head', 'newpage'}

variable_name: __dec_zone_page_state
first_occurrence: <S2SV_StartBug> __dec_zone_page_state ( page , NR_FILE_PAGES ) ;
pointer_declarations set()

Fixed code 4:
if (page == NULL) return;
__dec_zone_page_state ( page , NR_FILE_PAGES ) ;

------------------------------------------------------------
Vulnerability 5:
__inc_zone_page_state ( newpage , NR_FILE_PAGES ) ;

variable_name: NR_FILE_PAGES
first_occurrence: <S2SV_StartBug> __dec_zone_page_state ( page , NR_FILE_PAGES ) ;
pointer_declarations set()

variable_name: __inc_zone_page_state
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> __inc_zone_page_state ( newpage , NR_FILE_PAGES ) ;
pointer_declarations set()

variable_name: newpage
first_occurrence: CWE-476 int migrate_page_move_mapping ( struct address_space * mapping , struct page * newpage , struct page * page , struct buffer_head * head , enum migrate_mode mode , int extra_count )
pointer_declarations {'mapping', 'page', 'head', 'newpage'}

Fixed code 5:
if (newpage == NULL) return;
__inc_zone_page_state ( newpage , NR_FILE_PAGES ) ;

------------------------------------------------------------
Vulnerability 6:
if ( ! PageSwapCache ( page ) && PageSwapBacked ( page ) ) {

variable_name: page
first_occurrence: CWE-476 int migrate_page_move_mapping ( struct address_space * mapping , struct page * newpage , struct page * page , struct buffer_head * head , enum migrate_mode mode , int extra_count )
pointer_declarations {'mapping', 'page', 'head', 'newpage'}

variable_name: PageSwapCache
first_occurrence: if ( PageSwapCache ( page ) )
pointer_declarations set()

variable_name: PageSwapBacked
first_occurrence: if ( PageSwapBacked ( page ) ) SetPageSwapBacked ( newpage ) ;
pointer_declarations set()

Fixed code 6:
if (page == NULL) return;
if ( ! PageSwapCache ( page ) && PageSwapBacked ( page ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 936:

link: https://github.com/the-tcpdump-group/libpcap/commit/437b273761adedcbd880f714bfa44afeec186a31:

Vulnerability 1:
# endif

variable_name: endif
first_occurrence: <S2SV_StartBug> # endif <S2SV_EndBug> if ( ( user = getpwnam ( username ) ) == NULL )
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( strcmp ( user_password , ( char * ) crypt ( password , user_password ) ) != 0 )

variable_name: crypt
first_occurrence: # endif <S2SV_StartBug> if ( strcmp ( user_password , ( char * ) crypt ( password , user_password ) ) != 0 ) <S2SV_EndBug>
pointer_declarations {'crypt'}

variable_name: user_password
first_occurrence: char * user_password ;
pointer_declarations {'user_password'}

variable_name: strcmp
first_occurrence: # endif <S2SV_StartBug> if ( strcmp ( user_password , ( char * ) crypt ( password , user_password ) ) != 0 ) <S2SV_EndBug>
pointer_declarations {'crypt'}

variable_name: password
first_occurrence: CWE-476 static int daemon_AuthUserPwd ( char * username , char * password , char * errbuf )
pointer_declarations {'errbuf', 'password', 'username'}

Fixed code 2:
if (crypt == NULL) return;
if (user_password == NULL) return;
if (password == NULL) return;
if ( strcmp ( user_password , ( char * ) crypt ( password , user_password ) ) != 0 )

------------------------------------------------------------
369 Vulnerabilities found in row 937 Validated:

link: https://github.com/vadz/libtiff/commit/438274f938e046d33cb0e1230b41da32ffe223e1:

Vulnerability 1:
stripsperplane = ( ( td -> td_imagelength + rowsperstrip - 1 ) / rowsperstrip ) ;

divisor: rowsperstrip 
Fixed code 1:
if (rowsperstrip  == 0) {fprintf(stderr, "Error: Division by zero in operation\n"); return -1;}
stripsperplane = ( ( td -> td_imagelength + rowsperstrip - 1 ) / rowsperstrip ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 1075:

link: https://github.com/torvalds/linux/commit/48a992727d82cb7db076fa15d372178743b1f4cd:

Vulnerability 1:
static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type ,

variable_name: type
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: rtattr
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: mcryptd_check_internal
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: u32
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: tb
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

Fixed code 1:
if (type == NULL) return;
if (tb == NULL) return;
static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type ,

------------------------------------------------------------
Vulnerability 2:
return ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( ( algt -> type & CRYPTO_ALG_INTERNAL ) )

variable_name: type
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: CRYPTO_ALG_INTERNAL
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> if ( ( algt -> type & CRYPTO_ALG_INTERNAL ) ) <S2SV_EndBug> * type |= CRYPTO_ALG_INTERNAL ;
pointer_declarations {'type', 'algt'}

Fixed code 3:
if (type == NULL) return;
if (algt == NULL) return;
if ( ( algt -> type & CRYPTO_ALG_INTERNAL ) )

------------------------------------------------------------
Vulnerability 4:
if ( ( algt -> mask & CRYPTO_ALG_INTERNAL ) )

variable_name: mask
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: CRYPTO_ALG_INTERNAL
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> if ( ( algt -> type & CRYPTO_ALG_INTERNAL ) ) <S2SV_EndBug> * type |= CRYPTO_ALG_INTERNAL ;
pointer_declarations {'type', 'algt'}

Fixed code 4:
if (mask == NULL) return;
if (algt == NULL) return;
if ( ( algt -> mask & CRYPTO_ALG_INTERNAL ) )

------------------------------------------------------------
476 Vulnerabilities found in row 1076:

link: https://github.com/torvalds/linux/commit/48a992727d82cb7db076fa15d372178743b1f4cd:

Vulnerability 1:
mcryptd_check_internal ( tb , & type , & mask ) ;

variable_name: type
first_occurrence: u32 type = 0 ;
pointer_declarations set()

variable_name: mask
first_occurrence: u32 mask = 0 ;
pointer_declarations set()

variable_name: mcryptd_check_internal
first_occurrence: <S2SV_StartBug> mcryptd_check_internal ( tb , & type , & mask ) ;
pointer_declarations set()

variable_name: tb
first_occurrence: CWE-476 static int mcryptd_create_hash ( struct crypto_template * tmpl , struct rtattr * * tb , struct mcryptd_queue * queue )
pointer_declarations {'queue', 'tmpl', 'tb'}

Fixed code 1:
if (tb == NULL) return;
mcryptd_check_internal ( tb , & type , & mask ) ;

------------------------------------------------------------
369 Vulnerabilities found in row 1087:

link: https://github.com/torvalds/linux/commit/499350a5a6e7512d9ed369ed63a4244b6536f4f8:

Vulnerability 1:
tcp_init_send_head ( sk ) ;

No fix needed for this vulnerability.
------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 1135:

link: https://github.com/torvalds/linux/commit/4afa5f9617927453ac04b24b584f6c718dfb4f45:

Vulnerability 1:
int err ;

variable_name: err
first_occurrence: <S2SV_StartBug> int err ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
err = crypto_ahash_export ( req , state ) ;

variable_name: req
first_occurrence: struct ahash_request * req = & ctx -> req ;
pointer_declarations {'req', 'ctx'}

variable_name: err
first_occurrence: <S2SV_StartBug> int err ;
pointer_declarations set()

variable_name: crypto_ahash_export
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> err = crypto_ahash_export ( req , state ) ;
pointer_declarations set()

variable_name: state
first_occurrence: char state [ crypto_ahash_statesize ( crypto_ahash_reqtfm ( req ) ) ] ;
pointer_declarations set()

Fixed code 2:
if (req == NULL) return;
err = crypto_ahash_export ( req , state ) ;

------------------------------------------------------------
Vulnerability 3:
ctx2 -> more = 1 ;

variable_name: more
first_occurrence: <S2SV_StartBug> ctx2 -> more = 1 ;
pointer_declarations {'ctx2'}

Fixed code 3:
if (ctx2 == NULL) return;
ctx2 -> more = 1 ;

------------------------------------------------------------
369 Vulnerabilities found in row 1141:

link: https://github.com/dbry/WavPack/commit/4c0faba32fddbd0745cbfaf1e1aeb3da5d35b9fc:

Vulnerability 1:
uint16_t numChannels , chansSpecified , chanMask = 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( numChannels < chansSpecified || numChannels < 1 ) {

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
total_samples = dff_chunk_header . ckDataSize / config -> num_channels ;

divisor: config -> num_channels
Fixed code 3:
if (config -> num_channels == 0) {fprintf(stderr, "Error: Division by zero in operation\n"); return -1;}
total_samples = dff_chunk_header . ckDataSize / config -> num_channels ;

------------------------------------------------------------
476 Vulnerabilities found in row 1170:

link: https://github.com/xkbcommon/libxkbcommon/commit/4e2ee9c3f6050d773f8bbe05bc0edb17f1ff8371:

Vulnerability 1:
if ( istreq ( str , "all" ) ) {

variable_name: str
first_occurrence: const char * str ;
pointer_declarations {'str'}

variable_name: istreq
first_occurrence: <S2SV_StartBug> if ( istreq ( str ,  ) )
pointer_declarations set()

Fixed code 1:
if (str == NULL) return;
if ( istreq ( str , "all" ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 1196:

link: https://github.com/torvalds/linux/commit/51093254bf879bc9ce96590400a87897c7498463:

Vulnerability 1:
uint32_t tag = 0 ;

variable_name: tag
first_occurrence: <S2SV_StartBug> uint32_t tag = 0 ;
pointer_declarations set()

variable_name: uint32_t
first_occurrence: <S2SV_StartBug> uint32_t tag = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( tcm_tmr < 0 ) {

variable_name: tcm_tmr
first_occurrence: <S2SV_EndBug> int tcm_tmr ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
rc = srpt_rx_mgmt_fn_tag ( send_ioctx , srp_tsk -> task_tag ) ;

variable_name: task_tag
first_occurrence: pr_debug (   , srp_tsk -> tsk_mgmt_func , srp_tsk -> task_tag , srp_tsk -> tag , ch -> cm_id , ch -> sess ) ;
pointer_declarations {'ch', 'srp_tsk'}

variable_name: srpt_rx_mgmt_fn_tag
first_occurrence: <S2SV_StartBug> rc = srpt_rx_mgmt_fn_tag ( send_ioctx , srp_tsk -> task_tag ) ;
pointer_declarations {'srp_tsk'}

variable_name: send_ioctx
first_occurrence: CWE-476 static void srpt_handle_tsk_mgmt ( struct srpt_rdma_ch * ch , struct srpt_recv_ioctx * recv_ioctx , struct srpt_send_ioctx * send_ioctx )
pointer_declarations {'recv_ioctx', 'send_ioctx', 'ch'}

variable_name: rc
first_occurrence: int rc ;
pointer_declarations set()

Fixed code 3:
if (send_ioctx == NULL) return;
if (srp_tsk == NULL) return;
rc = srpt_rx_mgmt_fn_tag ( send_ioctx , srp_tsk -> task_tag ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 1226:

link: https://github.com/krb5/krb5/commit/524688ce87a15fc75f87efc8c039ba4c7d5c197b:

Vulnerability 1:
if ( REMAIN > INT_MAX )

variable_name: REMAIN
first_occurrence: # define REMAIN ( buf -> length - ( ptr - bufstart ) ) <S2SV_StartBug> if ( REMAIN > INT_MAX ) <S2SV_EndBug> return GSS_S_DEFECTIVE_TOKEN ;
pointer_declarations {'buf'}

variable_name: INT_MAX
first_occurrence: # define REMAIN ( buf -> length - ( ptr - bufstart ) ) <S2SV_StartBug> if ( REMAIN > INT_MAX ) <S2SV_EndBug> return GSS_S_DEFECTIVE_TOKEN ;
pointer_declarations {'buf'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 1238:

link: https://github.com/FFmpeg/FFmpeg/commit/54655623a82632e7624714d7b2a3e039dc5faa7e:

Vulnerability 1:
return ret ;

variable_name: ret
first_occurrence: int ctb_addr_ts , ret ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( s -> ref ) {

variable_name: ref
first_occurrence: <S2SV_StartBug> if ( s -> ref )
pointer_declarations {'s'}

Fixed code 2:
if (s == NULL) return;
if ( s -> ref ) {

------------------------------------------------------------
476 Vulnerabilities found in row 1239:

link: https://github.com/FFmpeg/FFmpeg/commit/54655623a82632e7624714d7b2a3e039dc5faa7e:

Vulnerability 1:
sh -> first_slice_in_pic_flag = get_bits1 ( gb ) ;

variable_name: first_slice_in_pic_flag
first_occurrence: <S2SV_StartBug> sh -> first_slice_in_pic_flag = get_bits1 ( gb ) ;
pointer_declarations {'sh'}

variable_name: gb
first_occurrence: GetBitContext * gb = & s -> HEVClc -> gb ;
pointer_declarations {'s', 'gb', 'HEVClc'}

variable_name: get_bits1
first_occurrence: <S2SV_StartBug> sh -> first_slice_in_pic_flag = get_bits1 ( gb ) ;
pointer_declarations {'sh'}

Fixed code 1:
if (gb == NULL) return;
if (sh == NULL) return;
sh -> first_slice_in_pic_flag = get_bits1 ( gb ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 1280:

link: https://github.com/torvalds/linux/commit/5649645d725c73df4302428ee4e02c869248b4c5:

Vulnerability 1:
if ( _payload ) {

variable_name: _payload
first_occurrence: CWE-476 SYSCALL_DEFINE5 ( add_key , const char __user * , _type , const char __user * , _description , const void __user * , _payload , size_t , plen , key_serial_t , ringid )
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 1281:

link: https://github.com/torvalds/linux/commit/5649645d725c73df4302428ee4e02c869248b4c5:

Vulnerability 1:
if ( _payload ) {

variable_name: _payload
first_occurrence: CWE-476 long keyctl_update_key ( key_serial_t id , const void __user * _payload , size_t plen )
pointer_declarations {'_payload'}

Fixed code 1:
if (_payload == NULL) return;
if ( _payload ) {

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 1292:

link: https://github.com/torvalds/linux/commit/57ebd808a97d7c5b1e1afb937c2db22beba3c1f8:

Vulnerability 1:
jumpstack [ stackidx ++ ] = e ;

variable_name: stackidx
first_occurrence: unsigned int cpu , stackidx = 0 ;
pointer_declarations set()

variable_name: jumpstack
first_occurrence: struct arpt_entry * e , * * jumpstack ;
pointer_declarations {'jumpstack', 'e'}

variable_name: e
first_occurrence: struct arpt_entry * e , * * jumpstack ;
pointer_declarations {'jumpstack', 'e'}

Fixed code 1:
if (jumpstack == NULL) return;
if (e == NULL) return;
jumpstack [ stackidx ++ ] = e ;

------------------------------------------------------------
476 Vulnerabilities found in row 1293:

link: https://github.com/torvalds/linux/commit/57ebd808a97d7c5b1e1afb937c2db22beba3c1f8:

Vulnerability 1:
! ( e -> ip . flags & IPT_F_GOTO ) )

variable_name: flags
first_occurrence: if ( table_base + v != ipt_next_entry ( e ) && <S2SV_StartBug> ! ( e -> ip . flags & IPT_F_GOTO ) ) <S2SV_EndBug> jumpstack [ stackidx ++ ] = e ;
pointer_declarations {'e'}

variable_name: ip
first_occurrence: const struct iphdr * ip ;
pointer_declarations {'ip'}

variable_name: IPT_F_GOTO
first_occurrence: if ( table_base + v != ipt_next_entry ( e ) && <S2SV_StartBug> ! ( e -> ip . flags & IPT_F_GOTO ) ) <S2SV_EndBug> jumpstack [ stackidx ++ ] = e ;
pointer_declarations {'e'}

Fixed code 1:
if (ip == NULL) return;
if (e == NULL) return;
! ( e -> ip . flags & IPT_F_GOTO ) )

------------------------------------------------------------
Vulnerability 2:
e = get_entry ( table_base , v ) ;

variable_name: v
first_occurrence: int v ;
pointer_declarations set()

variable_name: table_base
first_occurrence: const void * table_base ;
pointer_declarations {'table_base'}

variable_name: get_entry
first_occurrence: e = get_entry ( table_base , private -> hook_entry [ hook ] ) ;
pointer_declarations {'private'}

variable_name: e
first_occurrence: struct ipt_entry * e , * * jumpstack ;
pointer_declarations {'jumpstack', 'e'}

Fixed code 2:
if (table_base == NULL) return;
if (e == NULL) return;
e = get_entry ( table_base , v ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 1294:

link: https://github.com/torvalds/linux/commit/57ebd808a97d7c5b1e1afb937c2db22beba3c1f8:

Vulnerability 1:
jumpstack [ stackidx ++ ] = e ;

variable_name: stackidx
first_occurrence: unsigned int stackidx , cpu ;
pointer_declarations set()

variable_name: jumpstack
first_occurrence: struct ip6t_entry * e , * * jumpstack ;
pointer_declarations {'jumpstack', 'e'}

variable_name: e
first_occurrence: struct ip6t_entry * e , * * jumpstack ;
pointer_declarations {'jumpstack', 'e'}

Fixed code 1:
if (jumpstack == NULL) return;
if (e == NULL) return;
jumpstack [ stackidx ++ ] = e ;

------------------------------------------------------------
476 Vulnerabilities found in row 1301:

link: https://github.com/torvalds/linux/commit/58bdd544e2933a21a51eecf17c3f5f94038261b5:

Vulnerability 1:
size += miux_tlv_length ;

variable_name: miux_tlv_length
first_occurrence: u8 * miux_tlv = NULL , miux_tlv_length ;
pointer_declarations {'miux_tlv'}

variable_name: size
first_occurrence: u16 size = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
size += rw_tlv_length ;

variable_name: rw_tlv_length
first_occurrence: u8 * rw_tlv = NULL , rw_tlv_length , rw ;
pointer_declarations {'rw_tlv'}

variable_name: size
first_occurrence: u16 size = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 1302:

link: https://github.com/torvalds/linux/commit/58bdd544e2933a21a51eecf17c3f5f94038261b5:

Vulnerability 1:
size += service_name_tlv_length ;

variable_name: service_name_tlv_length
first_occurrence: u8 * service_name_tlv = NULL , service_name_tlv_length ;
pointer_declarations {'service_name_tlv'}

variable_name: size
first_occurrence: u16 size = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
size += miux_tlv_length ;

variable_name: miux_tlv_length
first_occurrence: u8 * miux_tlv = NULL , miux_tlv_length ;
pointer_declarations {'miux_tlv'}

variable_name: size
first_occurrence: u16 size = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
size += rw_tlv_length ;

variable_name: rw_tlv_length
first_occurrence: u8 * rw_tlv = NULL , rw_tlv_length , rw ;
pointer_declarations {'rw_tlv'}

variable_name: size
first_occurrence: u16 size = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 1303:

link: https://github.com/torvalds/linux/commit/58bdd544e2933a21a51eecf17c3f5f94038261b5:

Vulnerability 1:
u8 * gb_cur , * version_tlv , version , version_length ;

variable_name: gb_cur
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

variable_name: version
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

variable_name: version_tlv
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

variable_name: u8
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

variable_name: version_length
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

Fixed code 1:
if (gb_cur == NULL) return;
if (version_tlv == NULL) return;
u8 * gb_cur , * version_tlv , version , version_length ;

------------------------------------------------------------
Vulnerability 2:
gb_len += version_length ;

variable_name: gb_len
first_occurrence: u8 gb_len = 0 ;
pointer_declarations set()

variable_name: version_length
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
gb_len += lto_length ;

variable_name: lto_length
first_occurrence: <S2SV_EndBug> u8 * lto_tlv , lto_length ;
pointer_declarations {'lto_tlv'}

variable_name: gb_len
first_occurrence: u8 gb_len = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
gb_len += wks_length ;

variable_name: wks_length
first_occurrence: u8 * wks_tlv , wks_length ;
pointer_declarations {'wks_tlv'}

variable_name: gb_len
first_occurrence: u8 gb_len = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 5:
& miux_length ) ;

variable_name: miux_length
first_occurrence: u8 * miux_tlv , miux_length ;
pointer_declarations {'miux_tlv'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2067:

link: https://github.com/torvalds/linux/commit/5c25f65fd1e42685f7ccd80e0621829c105785d9:

Vulnerability 1:
if ( err )

variable_name: err
first_occurrence: int err ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2085:

link: https://github.com/mdadams/jasper/commit/5d66894d2313e3f3469f19066e149e08ff076698:

Vulnerability 1:
if ( ! ( matrix = jas_malloc ( sizeof ( jas_matrix_t ) ) ) ) {

variable_name: matrix
first_occurrence: jas_matrix_t * matrix ;
pointer_declarations {'matrix'}

variable_name: jas_malloc
first_occurrence: <S2SV_StartBug> if ( ! ( matrix = jas_malloc ( sizeof ( jas_matrix_t ) ) ) )
pointer_declarations set()

variable_name: jas_matrix_t
first_occurrence: CWE-476 jas_matrix_t * jas_matrix_create ( int numrows , int numcols )
pointer_declarations {'jas_matrix_create'}

Fixed code 1:
if (matrix == NULL) return;
if ( ! ( matrix = jas_malloc ( sizeof ( jas_matrix_t ) ) ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 2086:

link: https://github.com/mdadams/jasper/commit/5d66894d2313e3f3469f19066e149e08ff076698:

Vulnerability 1:
if ( optstr ) {

variable_name: optstr
first_occurrence: CWE-476 jas_image_t * bmp_decode ( jas_stream_t * in , char * optstr )
pointer_declarations {'in', 'bmp_decode', 'optstr'}

Fixed code 1:
if (optstr == NULL) return;
if ( optstr ) {

------------------------------------------------------------
Vulnerability 2:
return 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
return 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
( "BMP<S2SV_blank>information:<S2SV_blank>len<S2SV_blank>%d;<S2SV_blank>width<S2SV_blank>%d;<S2SV_blank>height<S2SV_blank>%d;<S2SV_blank>numplanes<S2SV_blank>%d;<S2SV_blank>"

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 5:
"mincolors<S2SV_blank>%d\\n" , info -> len , info -> width , info -> height , info -> numplanes ,

variable_name: len
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: width
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: height
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: numplanes
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

Fixed code 5:
if (info == NULL) return;
"mincolors<S2SV_blank>%d\\n" , info -> len , info -> width , info -> height , info -> numplanes ,

------------------------------------------------------------
Vulnerability 6:
info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres ,

variable_name: hres
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: siz
first_occurrence: JAS_DBGLOG ( 1 , (  , hdr . magic , hdr . siz , hdr . reserved1 , hdr . reserved2 , hdr . off ) ) ;
pointer_declarations set()

variable_name: depth
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: vres
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: enctype
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

Fixed code 6:
if (info == NULL) return;
info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres ,

------------------------------------------------------------
Vulnerability 7:
info -> numcolors , info -> mincolors ) ) ;

variable_name: mincolors
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: numcolors
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

Fixed code 7:
if (info == NULL) return;
info -> numcolors , info -> mincolors ) ) ;

------------------------------------------------------------
Vulnerability 8:
bmp_info_destroy ( info ) ;

variable_name: bmp_info_destroy
first_occurrence: <S2SV_StartBug> bmp_info_destroy ( info ) ;
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 8:
if (info == NULL) return;
bmp_info_destroy ( info ) ;

------------------------------------------------------------
Vulnerability 9:
return 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 10:
bmp_info_destroy ( info ) ;

variable_name: bmp_info_destroy
first_occurrence: <S2SV_StartBug> bmp_info_destroy ( info ) ;
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 10:
if (info == NULL) return;
bmp_info_destroy ( info ) ;

------------------------------------------------------------
Vulnerability 11:
bmp_info_destroy ( info ) ;

variable_name: bmp_info_destroy
first_occurrence: <S2SV_StartBug> bmp_info_destroy ( info ) ;
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 11:
if (info == NULL) return;
bmp_info_destroy ( info ) ;

------------------------------------------------------------
Vulnerability 12:
bmp_info_destroy ( info ) ;

variable_name: bmp_info_destroy
first_occurrence: <S2SV_StartBug> bmp_info_destroy ( info ) ;
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 12:
if (info == NULL) return;
bmp_info_destroy ( info ) ;

------------------------------------------------------------
Vulnerability 13:
jas_image_destroy ( image ) ;

variable_name: image
first_occurrence: jas_image_t * image ;
pointer_declarations {'image'}

variable_name: jas_image_destroy
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> jas_image_destroy ( image ) ;
pointer_declarations set()

Fixed code 13:
if (image == NULL) return;
jas_image_destroy ( image ) ;

------------------------------------------------------------
Vulnerability 14:
return 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 15:
bmp_info_destroy ( info ) ;

variable_name: bmp_info_destroy
first_occurrence: <S2SV_StartBug> bmp_info_destroy ( info ) ;
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 15:
if (info == NULL) return;
bmp_info_destroy ( info ) ;

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 2113:

link: https://github.com/php/php-src/commit/6045de69c7dedcba3eadf7c4bba424b19c81d00d:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2127:

link: https://github.com/FFmpeg/FFmpeg/commit/611b35627488a8d0763e75c25ee0875c5b7987dd:

Vulnerability 1:
if ( cid <= 0 )

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;

variable_name: avpriv_dnxhd_get_frame_size
first_occurrence: <S2SV_StartBug> dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;
pointer_declarations {'dctx'}

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 2:
if (dctx == NULL) return;
dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;

------------------------------------------------------------
Vulnerability 3:
if ( dctx -> remaining <= 0 ) {

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 3:
if (dctx == NULL) return;
if ( dctx -> remaining <= 0 ) {

------------------------------------------------------------
Vulnerability 4:
dctx -> remaining = ff_dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;

variable_name: w
first_occurrence: dctx -> w = ( state >> 32 ) & 0xFFFF ;
pointer_declarations {'dctx'}

variable_name: ff_dnxhd_get_hr_frame_size
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> dctx -> remaining = ff_dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;
pointer_declarations {'dctx'}

variable_name: h
first_occurrence: dctx -> h = ( state >> 32 ) & 0xFFFF ;
pointer_declarations {'dctx'}

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 4:
if (dctx == NULL) return;
dctx -> remaining = ff_dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;

------------------------------------------------------------
Vulnerability 5:
if ( dctx -> remaining <= 0 )

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 5:
if (dctx == NULL) return;
if ( dctx -> remaining <= 0 )

------------------------------------------------------------
Vulnerability 6:
return dctx -> remaining ;

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 6:
if (dctx == NULL) return;
return dctx -> remaining ;

------------------------------------------------------------
476 Vulnerabilities found in row 2145:

link: https://github.com/radare/radare2/commit/62e39f34b2705131a2d08aff0c2e542c6a52cf0e:

Vulnerability 1:
for ( cnt = 0 , i = 0 ; i >= 0 && cnt < shdr -> sh_info && ( ( char * ) defs + i < end ) ; ++ cnt ) {

variable_name: cnt
first_occurrence: int cnt , i ;
pointer_declarations set()

variable_name: i
first_occurrence: int cnt , i ;
pointer_declarations set()

variable_name: defs
first_occurrence: Elf_ ( Verdef ) * defs = calloc ( shdr -> sh_size , sizeof ( char ) ) ;
pointer_declarations {'shdr', 'defs'}

variable_name: sh_info
first_occurrence: sdb_num_set ( sdb ,  , shdr -> sh_info , 0 ) ;
pointer_declarations {'shdr'}

variable_name: end
first_occurrence: char * end = NULL ;
pointer_declarations {'end'}

Fixed code 1:
if (shdr == NULL) return;
if (end == NULL) return;
if (defs == NULL) return;
for ( cnt = 0 , i = 0 ; i >= 0 && cnt < shdr -> sh_info && ( ( char * ) defs + i < end ) ; ++ cnt ) {

------------------------------------------------------------
Vulnerability 2:
if ( vdaux < 1 ) {

variable_name: vdaux
first_occurrence: verdef -> vd_version = READ16 ( dfs , j ) verdef -> vd_flags = READ16 ( dfs , j ) verdef -> vd_ndx = READ16 ( dfs , j ) verdef -> vd_cnt = READ16 ( dfs , j ) verdef -> vd_hash = READ32 ( dfs , j ) verdef -> vd_aux = READ32 ( dfs , j ) verdef -> vd_next = READ32 ( dfs , j ) int vdaux = verdef -> vd_aux ;
pointer_declarations {'verdef'}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

variable_name: Elf_
first_occurrence: CWE-476 static Sdb * store_versioninfo_gnu_verdef ( ELFOBJ * bin , Elf_ ( Shdr ) * shdr , int sz )
pointer_declarations {'bin', 'shdr', 'store_versioninfo_gnu_verdef'}

variable_name: Verdaux
first_occurrence: Elf_ ( Verdaux ) aux =
pointer_declarations set()

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: end
first_occurrence: char * end = NULL ;
pointer_declarations {'end'}

Fixed code 3:
if (vstart == NULL) return;
if (end == NULL) return;
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

------------------------------------------------------------
Vulnerability 4:
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

variable_name: Elf_
first_occurrence: CWE-476 static Sdb * store_versioninfo_gnu_verdef ( ELFOBJ * bin , Elf_ ( Shdr ) * shdr , int sz )
pointer_declarations {'bin', 'shdr', 'store_versioninfo_gnu_verdef'}

variable_name: Verdaux
first_occurrence: Elf_ ( Verdaux ) aux =
pointer_declarations set()

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: end
first_occurrence: char * end = NULL ;
pointer_declarations {'end'}

Fixed code 4:
if (vstart == NULL) return;
if (end == NULL) return;
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

------------------------------------------------------------
369 Vulnerabilities found in row 2246:

link: https://github.com/torvalds/linux/commit/6aeb75e6adfaed16e58780309613a578fe1ee90b:

Vulnerability 1:
} else

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
tty_encode_baud_rate ( tty , baud , baud ) ;

No fix needed for this vulnerability.
------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 2282:

link: https://github.com/illumos/illumos-gate/commit/6d1c73b5858fefc6161c7d686345f0dc887ea799:

Vulnerability 1:
smb_ofile_t * of = NULL ;

variable_name: smb_ofile_t
first_occurrence: <S2SV_StartBug> smb_ofile_t * of = NULL ;
pointer_declarations {'of'}

variable_name: of
first_occurrence: <S2SV_StartBug> smb_ofile_t * of = NULL ;
pointer_declarations {'of'}

Fixed code 1:
if (of == NULL) return;
smb_ofile_t * of = NULL ;

------------------------------------------------------------
Vulnerability 2:
of = sr -> fid_ofile ;

variable_name: fid_ofile
first_occurrence: <S2SV_StartBug> of = sr -> fid_ofile ;
pointer_declarations {'sr'}

variable_name: of
first_occurrence: <S2SV_StartBug> smb_ofile_t * of = NULL ;
pointer_declarations {'of'}

Fixed code 2:
if (sr == NULL) return;
if (of == NULL) return;
of = sr -> fid_ofile ;

------------------------------------------------------------
476 Vulnerabilities found in row 2283:

link: https://github.com/illumos/illumos-gate/commit/6d1c73b5858fefc6161c7d686345f0dc887ea799:

Vulnerability 1:
smb_flush_file ( sr , sr -> fid_ofile ) ;

variable_name: smb_flush_file
first_occurrence: <S2SV_StartBug> smb_flush_file ( sr , sr -> fid_ofile ) ;
pointer_declarations {'sr'}

variable_name: fid_ofile
first_occurrence: if ( sr -> fid_ofile == NULL )
pointer_declarations {'sr'}

Fixed code 1:
if (sr == NULL) return;
smb_flush_file ( sr , sr -> fid_ofile ) ;

------------------------------------------------------------
Vulnerability 2:
smb_flush_file ( sr , file ) ;

variable_name: smb_flush_file
first_occurrence: <S2SV_StartBug> smb_flush_file ( sr , sr -> fid_ofile ) ;
pointer_declarations {'sr'}

variable_name: sr
first_occurrence: CWE-476 smb_sdrc_t smb_com_flush ( smb_request_t * sr )
pointer_declarations {'sr'}

variable_name: file
first_occurrence: smb_ofile_t * file ;
pointer_declarations {'file'}

Fixed code 2:
if (file == NULL) return;
if (sr == NULL) return;
smb_flush_file ( sr , file ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 2329:

link: https://github.com/bitlbee/bitlbee/commit/701ab8129ba9ea64f569daedca9a8603abad740f:

Vulnerability 1:
if ( bee -> ui -> ft_in_start ) {

variable_name: ft_in_start
first_occurrence: <S2SV_StartBug> if ( bee -> ui -> ft_in_start )
pointer_declarations {'ui', 'bee'}

Fixed code 1:
if (ui == NULL) return;
if (bee == NULL) return;
if ( bee -> ui -> ft_in_start ) {

------------------------------------------------------------
476 Vulnerabilities found in row 2390:

link: https://github.com/pgbouncer/pgbouncer/commit/74d6e5f7de5ec736f71204b7b422af7380c19ac5:

Vulnerability 1:
if ( cf_auth_type <= AUTH_TRUST ) {

variable_name: cf_auth_type
first_occurrence: if ( cf_auth_type <= AUTH_TRUST || client -> own_user )
pointer_declarations {'client'}

variable_name: AUTH_TRUST
first_occurrence: if ( cf_auth_type <= AUTH_TRUST || client -> own_user )
pointer_declarations {'client'}

No fix needed for this vulnerability.
------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 2463:

link: https://github.com/radare/radare2/commit/7ab66cca5bbdf6cb2d69339ef4f513d95e532dbf:

Vulnerability 1:
if ( ! object || object -> list . length != 2 || ! object -> list . objects [ 0 ] || object -> list . objects [ 1 ] -> list . length != 1 ) {

variable_name: objects
first_occurrence: <S2SV_StartBug> if ( ! object || object -> list . length != 2 || ! object -> list . objects [ 0 ] || object -> list . objects [ 1 ] -> list . length != 1 )
pointer_declarations {'object'}

variable_name: length
first_occurrence: CWE-476 RCMS * r_pkcs7_parse_cms ( const ut8 * buffer , ut32 length )
pointer_declarations {'buffer', 'r_pkcs7_parse_cms'}

variable_name: list
first_occurrence: <S2SV_StartBug> if ( ! object || object -> list . length != 2 || ! object -> list . objects [ 0 ] || object -> list . objects [ 1 ] -> list . length != 1 )
pointer_declarations {'object'}

Fixed code 1:
if (object == NULL) return;
if ( ! object || object -> list . length != 2 || ! object -> list . objects [ 0 ] || object -> list . objects [ 1 ] -> list . length != 1 ) {

------------------------------------------------------------
476 Vulnerabilities found in row 2477:

link: https://github.com/torvalds/linux/commit/7c80f9e4a588f1925b07134bb2e3689335f6c6d8:

Vulnerability 1:
if ( in ) {

variable_name: in
first_occurrence: struct usb_host_endpoint * in , * out ;
pointer_declarations {'in', 'out'}

Fixed code 1:
if (in == NULL) return;
if ( in ) {

------------------------------------------------------------
Vulnerability 2:
dev -> out_pipe = usb_sndbulkpipe ( udev ,

variable_name: out_pipe
first_occurrence: <S2SV_StartBug> dev -> out_pipe = usb_sndbulkpipe ( udev , <S2SV_EndBug> out -> desc . bEndpointAddress & USB_ENDPOINT_NUMBER_MASK ) ;
pointer_declarations {'dev', 'out'}

variable_name: usb_sndbulkpipe
first_occurrence: <S2SV_StartBug> dev -> out_pipe = usb_sndbulkpipe ( udev , <S2SV_EndBug> out -> desc . bEndpointAddress & USB_ENDPOINT_NUMBER_MASK ) ;
pointer_declarations {'dev', 'out'}

variable_name: udev
first_occurrence: struct usb_device * udev ;
pointer_declarations {'udev'}

Fixed code 2:
if (dev == NULL) return;
if (udev == NULL) return;
dev -> out_pipe = usb_sndbulkpipe ( udev ,

------------------------------------------------------------
Vulnerability 3:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2486:

link: https://github.com/torvalds/linux/commit/7d11f77f84b27cef452cee332f4e469503084737:

Vulnerability 1:
kfree ( rm -> atomic . op_notifier ) ;

variable_name: kfree
first_occurrence: <S2SV_StartBug> kfree ( rm -> atomic . op_notifier ) ;
pointer_declarations {'rm'}

variable_name: atomic
first_occurrence: if ( cmsg -> cmsg_len < CMSG_LEN ( sizeof ( struct rds_atomic_args ) ) || rm -> atomic . op_active ) return - EINVAL ;
pointer_declarations {'rm', 'cmsg'}

variable_name: op_notifier
first_occurrence: rm -> atomic . op_notifier = kmalloc ( sizeof ( * rm -> atomic . op_notifier ) , GFP_KERNEL ) ;
pointer_declarations {'rm'}

Fixed code 1:
if (rm == NULL) return;
kfree ( rm -> atomic . op_notifier ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 2499:

link: https://github.com/FreeRDP/FreeRDP/commit/7d58aac24fe20ffaad7bd9b40c9ddf457c1b06e7:

Vulnerability 1:
security_decrypt ( s -> p , length , rdp ) ;

variable_name: rdp
first_occurrence: CWE-476 BOOL rdp_decrypt ( rdpRdp * rdp , STREAM * s , int length , UINT16 securityFlags )
pointer_declarations {'rdp', 's'}

variable_name: security_decrypt
first_occurrence: <S2SV_StartBug> security_decrypt ( s -> p , length , rdp ) ;
pointer_declarations {'s'}

variable_name: length
first_occurrence: CWE-476 BOOL rdp_decrypt ( rdpRdp * rdp , STREAM * s , int length , UINT16 securityFlags )
pointer_declarations {'rdp', 's'}

variable_name: p
first_occurrence: sig = s -> p ;
pointer_declarations {'s'}

Fixed code 1:
if (rdp == NULL) return;
if (s == NULL) return;
security_decrypt ( s -> p , length , rdp ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 2500:

link: https://github.com/FreeRDP/FreeRDP/commit/7d58aac24fe20ffaad7bd9b40c9ddf457c1b06e7:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2514:

link: https://github.com/ImageMagick/ImageMagick/commit/7f2dc7a1afc067d0c89f12c82bcdec0445fb1b94:

Vulnerability 1:
mask -> matte = MagickFalse ;

variable_name: matte
first_occurrence: <S2SV_StartBug> mask -> matte = MagickFalse ;
pointer_declarations {'mask'}

variable_name: MagickFalse
first_occurrence: if ( ( layer_info -> channel_info [ channel ] . type != - 2 ) || ( layer_info -> mask . flags > 2 ) || ( ( layer_info -> mask . flags & 0x02 ) && ( IsStringTrue ( option ) == MagickFalse ) ) )
pointer_declarations {'layer_info'}

Fixed code 1:
if (mask == NULL) return;
mask -> matte = MagickFalse ;

------------------------------------------------------------
Vulnerability 2:
channel_image = mask ;

variable_name: mask
first_occurrence: Image * channel_image , * mask ;
pointer_declarations {'mask', 'channel_image'}

variable_name: channel_image
first_occurrence: Image * channel_image , * mask ;
pointer_declarations {'mask', 'channel_image'}

Fixed code 2:
if (mask == NULL) return;
if (channel_image == NULL) return;
channel_image = mask ;

------------------------------------------------------------
617 Vulnerabilities found in row 2521:

link: https://github.com/ImageMagick/ImageMagick/commit/7fd419441bc7103398e313558171d342c6315f44:

assertion 1:
assert ( image_info -> signature == MagickCoreSignature )

Fixed code 1:
if (!(image_info -> signature == MagickCoreSignature)) {
    return;
} 
//assert ( image_info -> signature == MagickCoreSignature )

assertion 2:
assert ( exception -> signature == MagickCoreSignature )

Fixed code 2:
if (!(exception -> signature == MagickCoreSignature)) {
    return;
} 
//assert ( exception -> signature == MagickCoreSignature )

assertion 3:
assert ( exception != ( ExceptionInfo * )

Fixed code 3:
if (!(exception != ( ExceptionInfo *)) {
    return;
} 
//assert ( exception != ( ExceptionInfo * )

assertion 4:
assert ( image_info != ( const ImageInfo * )

Fixed code 4:
if (!(image_info != ( const ImageInfo *)) {
    return;
} 
//assert ( image_info != ( const ImageInfo * )

------------------------------------------------------------
476 Vulnerabilities found in row 2522:

link: https://github.com/tats/w3m/commit/7fdc83b0364005a0b5ed869230dd81752ba022e8:

Vulnerability 1:
if ( rows > 1 ) {

variable_name: rows
first_occurrence: int spos , epos , rows , c_rows , pos , col = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2581:

link: https://github.com/FFmpeg/FFmpeg/commit/837cb4325b712ff1aab531bf41668933f61d75d2:

Vulnerability 1:
if ( frame -> color_primaries != AVCOL_PRI_UNSPECIFIED )

variable_name: AVCOL_PRI_UNSPECIFIED
first_occurrence: <S2SV_StartBug> if ( frame -> color_primaries != AVCOL_PRI_UNSPECIFIED ) <S2SV_EndBug> print_str (  , av_color_primaries_name ( frame -> color_primaries ) ) ;
pointer_declarations {'frame'}

variable_name: color_primaries
first_occurrence: <S2SV_StartBug> if ( frame -> color_primaries != AVCOL_PRI_UNSPECIFIED ) <S2SV_EndBug> print_str (  , av_color_primaries_name ( frame -> color_primaries ) ) ;
pointer_declarations {'frame'}

Fixed code 1:
if (frame == NULL) return;
if ( frame -> color_primaries != AVCOL_PRI_UNSPECIFIED )

------------------------------------------------------------
476 Vulnerabilities found in row 2582:

link: https://github.com/FFmpeg/FFmpeg/commit/837cb4325b712ff1aab531bf41668933f61d75d2:

Vulnerability 1:
if ( par -> color_primaries != AVCOL_PRI_UNSPECIFIED )

variable_name: AVCOL_PRI_UNSPECIFIED
first_occurrence: <S2SV_StartBug> if ( par -> color_primaries != AVCOL_PRI_UNSPECIFIED ) <S2SV_EndBug> print_str (  , av_color_primaries_name ( par -> color_primaries ) ) ;
pointer_declarations {'par'}

variable_name: color_primaries
first_occurrence: <S2SV_StartBug> if ( par -> color_primaries != AVCOL_PRI_UNSPECIFIED ) <S2SV_EndBug> print_str (  , av_color_primaries_name ( par -> color_primaries ) ) ;
pointer_declarations {'par'}

Fixed code 1:
if (par == NULL) return;
if ( par -> color_primaries != AVCOL_PRI_UNSPECIFIED )

------------------------------------------------------------
476 Vulnerabilities found in row 2606:

link: https://github.com/libgit2/libgit2/commit/84d30d569ada986f3eef527cbdb932643c2dd037:

Vulnerability 1:
* head = NULL ;

variable_name: head
first_occurrence: CWE-476 int git_pkt_parse_line ( git_pkt * * head , const char * line , const char * * out , size_t bufflen )
pointer_declarations {'line', 'head', 'out'}

Fixed code 1:
if (head == NULL) return;
* head = NULL ;

------------------------------------------------------------
476 Vulnerabilities found in row 2607:

link: https://github.com/libgit2/libgit2/commit/84d30d569ada986f3eef527cbdb932643c2dd037:

Vulnerability 1:
if ( pkt == NULL )

variable_name: pkt
first_occurrence: git_pkt * pkt ;
pointer_declarations {'pkt'}

Fixed code 1:
if (pkt == NULL) return;
if ( pkt == NULL )

------------------------------------------------------------
476 Vulnerabilities found in row 2608:

link: https://github.com/libgit2/libgit2/commit/84d30d569ada986f3eef527cbdb932643c2dd037:

Vulnerability 1:
error = 0 ;

variable_name: error
first_occurrence: int error , recvd ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2611:

link: https://github.com/torvalds/linux/commit/853bc26a7ea39e354b9f8889ae7ad1492ffa28d2:

Vulnerability 1:
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

variable_name: to_o2nm_cluster_from_node
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: node
first_occurrence: struct o2nm_node * node = to_o2nm_node ( item ) ;
pointer_declarations {'node'}

variable_name: o2nm_cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

Fixed code 1:
if (cluster == NULL) return;
if (node == NULL) return;
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

------------------------------------------------------------
Vulnerability 2:
ret = 0 ;

variable_name: ret
first_occurrence: <S2SV_EndBug> int ret , i ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( ret )

variable_name: ret
first_occurrence: <S2SV_EndBug> int ret , i ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2612:

link: https://github.com/torvalds/linux/commit/853bc26a7ea39e354b9f8889ae7ad1492ffa28d2:

Vulnerability 1:
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

variable_name: to_o2nm_cluster_from_node
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: node
first_occurrence: struct o2nm_node * node = to_o2nm_node ( item ) ;
pointer_declarations {'node'}

variable_name: o2nm_cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

Fixed code 1:
if (cluster == NULL) return;
if (node == NULL) return;
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

------------------------------------------------------------
Vulnerability 2:
if ( tmp && tmp == cluster -> cl_has_local &&

variable_name: cl_has_local
first_occurrence: <S2SV_StartBug> if ( tmp && tmp == cluster -> cl_has_local && <S2SV_EndBug> cluster -> cl_local_node != node -> nd_num ) <S2SV_StartBug> return - EBUSY ;
pointer_declarations {'cluster', 'node'}

variable_name: tmp
first_occurrence: <S2SV_EndBug> unsigned long tmp ;
pointer_declarations set()

Fixed code 2:
if (cluster == NULL) return;
if ( tmp && tmp == cluster -> cl_has_local &&

------------------------------------------------------------
Vulnerability 3:
return - EBUSY ;

variable_name: EBUSY
first_occurrence: <S2SV_StartBug> if ( tmp && tmp == cluster -> cl_has_local && <S2SV_EndBug> cluster -> cl_local_node != node -> nd_num ) <S2SV_StartBug> return - EBUSY ;
pointer_declarations {'cluster', 'node'}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
if ( tmp && ! cluster -> cl_has_local ) {

variable_name: cl_has_local
first_occurrence: <S2SV_StartBug> if ( tmp && tmp == cluster -> cl_has_local && <S2SV_EndBug> cluster -> cl_local_node != node -> nd_num ) <S2SV_StartBug> return - EBUSY ;
pointer_declarations {'cluster', 'node'}

variable_name: tmp
first_occurrence: <S2SV_EndBug> unsigned long tmp ;
pointer_declarations set()

Fixed code 4:
if (cluster == NULL) return;
if ( tmp && ! cluster -> cl_has_local ) {

------------------------------------------------------------
Vulnerability 5:
return ret ;

variable_name: ret
first_occurrence: ssize_t ret ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 6:
return count ;

variable_name: count
first_occurrence: CWE-476 static ssize_t o2nm_node_local_store ( struct config_item * item , const char * page , size_t count )
pointer_declarations {'item', 'page'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2613:

link: https://github.com/torvalds/linux/commit/853bc26a7ea39e354b9f8889ae7ad1492ffa28d2:

Vulnerability 1:
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

variable_name: to_o2nm_cluster_from_node
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: node
first_occurrence: struct o2nm_node * node = to_o2nm_node ( item ) ;
pointer_declarations {'node'}

variable_name: o2nm_cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

Fixed code 1:
if (cluster == NULL) return;
if (node == NULL) return;
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

------------------------------------------------------------
Vulnerability 2:
write_lock ( & cluster -> cl_nodes_lock ) ;

variable_name: cl_nodes_lock
first_occurrence: <S2SV_StartBug> write_lock ( & cluster -> cl_nodes_lock ) ;
pointer_declarations {'cluster'}

variable_name: write_lock
first_occurrence: <S2SV_StartBug> write_lock ( & cluster -> cl_nodes_lock ) ;
pointer_declarations {'cluster'}

Fixed code 2:
if (cluster == NULL) return;
write_lock ( & cluster -> cl_nodes_lock ) ;

------------------------------------------------------------
Vulnerability 3:
if ( ret )

variable_name: ret
first_occurrence: int ret = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2614:

link: https://github.com/torvalds/linux/commit/853bc26a7ea39e354b9f8889ae7ad1492ffa28d2:

Vulnerability 1:
return to_o2nm_cluster ( node -> nd_item . ci_parent -> ci_parent ) ;

variable_name: to_o2nm_cluster
first_occurrence: <S2SV_StartBug> return to_o2nm_cluster ( node -> nd_item . ci_parent -> ci_parent ) ;
pointer_declarations {'node', 'ci_parent'}

variable_name: nd_item
first_occurrence: <S2SV_StartBug> return to_o2nm_cluster ( node -> nd_item . ci_parent -> ci_parent ) ;
pointer_declarations {'node', 'ci_parent'}

Fixed code 1:
if (node == NULL) return;
if (ci_parent == NULL) return;
return to_o2nm_cluster ( node -> nd_item . ci_parent -> ci_parent ) ;

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2637:

link: https://github.com/kyz/libmspack/commit/8759da8db6ec9e866cb8eb143313f397f925bb4f:

Vulnerability 1:
if ( name_len == 0 ) goto chunk_end ;

variable_name: name_len
first_occurrence: unsigned int section , name_len , x , errors , num_chunks ;
pointer_declarations set()

variable_name: chunk_end
first_occurrence: if ( name_len > ( unsigned int ) ( end - p ) ) goto chunk_end ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
READ_ENCINT ( length ) ;

variable_name: length
first_occurrence: off_t offset , length ;
pointer_declarations set()

variable_name: READ_ENCINT
first_occurrence: READ_ENCINT ( name_len ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2719:

link: https://github.com/mdadams/jasper/commit/8f62b4761711d036fd8964df256b938c809b7fca:

Vulnerability 1:
char * fmtname ;

variable_name: fmtname
first_occurrence: <S2SV_StartBug> char * fmtname ;
pointer_declarations {'fmtname'}

Fixed code 1:
if (fmtname == NULL) return;
char * fmtname ;

------------------------------------------------------------
Vulnerability 2:
while ( ( id = jas_getopt ( argc , argv , opts ) ) >= 0 ) {

variable_name: argc
first_occurrence: CWE-476 int main ( int argc , char * * argv )
pointer_declarations {'argv'}

variable_name: jas_getopt
first_occurrence: <S2SV_StartBug> while ( ( id = jas_getopt ( argc , argv , opts ) ) >= 0 )
pointer_declarations set()

variable_name: opts
first_occurrence: <S2SV_StartBug> while ( ( id = jas_getopt ( argc , argv , opts ) ) >= 0 )
pointer_declarations set()

variable_name: id
first_occurrence: int id ;
pointer_declarations set()

variable_name: argv
first_occurrence: CWE-476 int main ( int argc , char * * argv )
pointer_declarations {'argv'}

Fixed code 2:
if (argv == NULL) return;
while ( ( id = jas_getopt ( argc , argv , opts ) ) >= 0 ) {

------------------------------------------------------------
Vulnerability 3:
case OPT_INFILE :

variable_name: OPT_INFILE
first_occurrence: <S2SV_StartBug> case OPT_INFILE : <S2SV_EndBug> infile = jas_optarg ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
if ( infile ) {

variable_name: infile
first_occurrence: char * infile ;
pointer_declarations {'infile'}

Fixed code 4:
if (infile == NULL) return;
if ( infile ) {

------------------------------------------------------------
Vulnerability 5:
if ( ! ( image = jas_image_decode ( instream , fmtid , 0 ) ) ) {

variable_name: instream
first_occurrence: jas_stream_t * instream ;
pointer_declarations {'instream'}

variable_name: jas_image_decode
first_occurrence: <S2SV_StartBug> if ( ! ( image = jas_image_decode ( instream , fmtid , 0 ) ) )
pointer_declarations set()

variable_name: image
first_occurrence: jas_image_t * image ;
pointer_declarations {'image'}

variable_name: fmtid
first_occurrence: int fmtid ;
pointer_declarations set()

Fixed code 5:
if (instream == NULL) return;
if (image == NULL) return;
if ( ! ( image = jas_image_decode ( instream , fmtid , 0 ) ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 2720:

link: https://github.com/mdadams/jasper/commit/8f62b4761711d036fd8964df256b938c809b7fca:

Vulnerability 1:
if ( ! ( info = bmp_getinfo ( in ) ) ) {

variable_name: in
first_occurrence: CWE-476 jas_image_t * bmp_decode ( jas_stream_t * in , char * optstr )
pointer_declarations {'in', 'bmp_decode', 'optstr'}

variable_name: bmp_getinfo
first_occurrence: <S2SV_StartBug> if ( ! ( info = bmp_getinfo ( in ) ) )
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 1:
if (in == NULL) return;
if (info == NULL) return;
if ( ! ( info = bmp_getinfo ( in ) ) ) {

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2721:

link: https://github.com/mdadams/jasper/commit/8f62b4761711d036fd8964df256b938c809b7fca:

Vulnerability 1:
v |= ( c << 24 ) ;

variable_name: c
first_occurrence: int c ;
pointer_declarations set()

variable_name: v
first_occurrence: uint_fast32_t v ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2754:

link: https://github.com/xkbcommon/libxkbcommon/commit/917636b1d0d70205a13f89062b95e3a0fc31d4ff:

Vulnerability 1:
log_err ( ctx , "Cannot<S2SV_blank>define<S2SV_blank>%s<S2SV_blank>in<S2SV_blank>a<S2SV_blank>keymap<S2SV_blank>file\\n" ,

variable_name: ctx
first_occurrence: struct xkb_context * ctx = keymap -> ctx ;
pointer_declarations {'ctx', 'keymap'}

variable_name: log_err
first_occurrence: <S2SV_StartBug> log_err ( ctx ,  , <S2SV_EndBug> <S2SV_StartBug> xkb_file_type_to_string ( file -> file_type ) ) ;
pointer_declarations {'file'}

Fixed code 1:
if (ctx == NULL) return;
log_err ( ctx , "Cannot<S2SV_blank>define<S2SV_blank>%s<S2SV_blank>in<S2SV_blank>a<S2SV_blank>keymap<S2SV_blank>file\\n" ,

------------------------------------------------------------
Vulnerability 2:
xkb_file_type_to_string ( file -> file_type ) ) ;

variable_name: file_type
first_occurrence: if ( file -> file_type < FIRST_KEYMAP_FILE_TYPE || file -> file_type > LAST_KEYMAP_FILE_TYPE )
pointer_declarations {'file'}

variable_name: xkb_file_type_to_string
first_occurrence: <S2SV_StartBug> log_err ( ctx ,  , <S2SV_EndBug> <S2SV_StartBug> xkb_file_type_to_string ( file -> file_type ) ) ;
pointer_declarations {'file'}

Fixed code 2:
if (file == NULL) return;
xkb_file_type_to_string ( file -> file_type ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 2776:

link: https://github.com/krb5/krb5/commit/93b4a6306a0026cf1cc31ac4bd8a49ba5d034ba7:

Vulnerability 1:
if ( check_anon ( kdc_active_realm , request -> client , request -> server ) != 0 ) {

variable_name: client
first_occurrence: CWE-476 int validate_as_request ( kdc_realm_t * kdc_active_realm , register krb5_kdc_req * request , krb5_db_entry client , krb5_db_entry server , krb5_timestamp kdc_time , const char * * status , krb5_pa_data * * * e_data )
pointer_declarations {'request', 'status', 'kdc_active_realm', 'e_data'}

variable_name: check_anon
first_occurrence: <S2SV_StartBug> if ( check_anon ( kdc_active_realm , request -> client , request -> server ) != 0 )
pointer_declarations {'request'}

variable_name: kdc_active_realm
first_occurrence: CWE-476 int validate_as_request ( kdc_realm_t * kdc_active_realm , register krb5_kdc_req * request , krb5_db_entry client , krb5_db_entry server , krb5_timestamp kdc_time , const char * * status , krb5_pa_data * * * e_data )
pointer_declarations {'request', 'status', 'kdc_active_realm', 'e_data'}

variable_name: server
first_occurrence: CWE-476 int validate_as_request ( kdc_realm_t * kdc_active_realm , register krb5_kdc_req * request , krb5_db_entry client , krb5_db_entry server , krb5_timestamp kdc_time , const char * * status , krb5_pa_data * * * e_data )
pointer_declarations {'request', 'status', 'kdc_active_realm', 'e_data'}

Fixed code 1:
if (request == NULL) return;
if (kdc_active_realm == NULL) return;
if ( check_anon ( kdc_active_realm , request -> client , request -> server ) != 0 ) {

------------------------------------------------------------
476 Vulnerabilities found in row 2795:

link: https://github.com/torvalds/linux/commit/94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6:

Vulnerability 1:
struct crypto_rng * rng = __crypto_rng_cast ( tfm ) ;

variable_name: __crypto_rng_cast
first_occurrence: <S2SV_StartBug> struct crypto_rng * rng = __crypto_rng_cast ( tfm ) ;
pointer_declarations {'rng'}

variable_name: tfm
first_occurrence: CWE-476 static int crypto_rng_init_tfm ( struct crypto_tfm * tfm )
pointer_declarations {'tfm'}

variable_name: rng
first_occurrence: <S2SV_StartBug> struct crypto_rng * rng = __crypto_rng_cast ( tfm ) ;
pointer_declarations {'rng'}

variable_name: crypto_rng
first_occurrence: <S2SV_StartBug> struct crypto_rng * rng = __crypto_rng_cast ( tfm ) ;
pointer_declarations {'rng'}

Fixed code 1:
if (tfm == NULL) return;
if (rng == NULL) return;
struct crypto_rng * rng = __crypto_rng_cast ( tfm ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 2796:

link: https://github.com/torvalds/linux/commit/94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6:

Vulnerability 1:
err = tfm -> seed ( tfm , seed , slen ) ;

variable_name: err
first_occurrence: int err ;
pointer_declarations set()

variable_name: seed
first_occurrence: CWE-476 int crypto_rng_reset ( struct crypto_rng * tfm , const u8 * seed , unsigned int slen )
pointer_declarations {'tfm', 'seed'}

variable_name: slen
first_occurrence: CWE-476 int crypto_rng_reset ( struct crypto_rng * tfm , const u8 * seed , unsigned int slen )
pointer_declarations {'tfm', 'seed'}

Fixed code 1:
if (tfm == NULL) return;
if (seed == NULL) return;
err = tfm -> seed ( tfm , seed , slen ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 2797:

link: https://github.com/torvalds/linux/commit/94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6:

Vulnerability 1:
return alg -> cra_rng . rng_make_random ?

variable_name: rng_make_random
first_occurrence: <S2SV_StartBug> return alg -> cra_rng . rng_make_random ? <S2SV_EndBug> alg -> cra_rng . seedsize : ralg -> seedsize ;
pointer_declarations {'alg', 'ralg'}

variable_name: cra_rng
first_occurrence: <S2SV_StartBug> return alg -> cra_rng . rng_make_random ? <S2SV_EndBug> alg -> cra_rng . seedsize : ralg -> seedsize ;
pointer_declarations {'alg', 'ralg'}

Fixed code 1:
if (alg == NULL) return;
return alg -> cra_rng . rng_make_random ?

------------------------------------------------------------
476 Vulnerabilities found in row 2800:

link: https://github.com/torvalds/linux/commit/951b6a0717db97ce420547222647bcc40bf1eacd:

Vulnerability 1:
struct sockaddr_rc * sa = ( struct sockaddr_rc * ) addr ;

variable_name: sa
first_occurrence: <S2SV_StartBug> struct sockaddr_rc * sa = ( struct sockaddr_rc * ) addr ;
pointer_declarations {'sa', 'addr'}

variable_name: sockaddr_rc
first_occurrence: <S2SV_StartBug> struct sockaddr_rc * sa = ( struct sockaddr_rc * ) addr ;
pointer_declarations {'sa', 'addr'}

variable_name: addr
first_occurrence: CWE-476 static int rfcomm_sock_bind ( struct socket * sock , struct sockaddr * addr , int addr_len )
pointer_declarations {'sock', 'addr'}

Fixed code 1:
if (sa == NULL) return;
if (addr == NULL) return;
struct sockaddr_rc * sa = ( struct sockaddr_rc * ) addr ;

------------------------------------------------------------
Vulnerability 2:
int chan = sa -> rc_channel ;

variable_name: rc_channel
first_occurrence: <S2SV_StartBug> int chan = sa -> rc_channel ;
pointer_declarations {'sa'}

variable_name: chan
first_occurrence: <S2SV_StartBug> int chan = sa -> rc_channel ;
pointer_declarations {'sa'}

Fixed code 2:
if (sa == NULL) return;
int chan = sa -> rc_channel ;

------------------------------------------------------------
Vulnerability 3:
int err = 0 ;

variable_name: err
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> int err = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
lock_sock ( sk ) ;

variable_name: lock_sock
first_occurrence: <S2SV_StartBug> lock_sock ( sk ) ;
pointer_declarations set()

variable_name: sk
first_occurrence: <S2SV_EndBug> struct sock * sk = sock -> sk ;
pointer_declarations {'sk', 'sock'}

Fixed code 4:
if (sk == NULL) return;
lock_sock ( sk ) ;

------------------------------------------------------------
Vulnerability 5:
if ( chan && __rfcomm_get_listen_sock_by_addr ( chan , & sa -> rc_bdaddr ) ) {

variable_name: __rfcomm_get_listen_sock_by_addr
first_occurrence: <S2SV_StartBug> if ( chan && __rfcomm_get_listen_sock_by_addr ( chan , & sa -> rc_bdaddr ) )
pointer_declarations {'sa'}

variable_name: chan
first_occurrence: <S2SV_StartBug> int chan = sa -> rc_channel ;
pointer_declarations {'sa'}

variable_name: rc_bdaddr
first_occurrence: <S2SV_EndBug> BT_DBG (  , sk , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

Fixed code 5:
if (sa == NULL) return;
if ( chan && __rfcomm_get_listen_sock_by_addr ( chan , & sa -> rc_bdaddr ) ) {

------------------------------------------------------------
Vulnerability 6:
bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;

variable_name: rfcomm_pi
first_occurrence: <S2SV_StartBug> bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

variable_name: rc_bdaddr
first_occurrence: <S2SV_EndBug> BT_DBG (  , sk , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

variable_name: src
first_occurrence: <S2SV_StartBug> bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

variable_name: bacpy
first_occurrence: <S2SV_StartBug> bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

variable_name: sk
first_occurrence: <S2SV_EndBug> struct sock * sk = sock -> sk ;
pointer_declarations {'sk', 'sock'}

Fixed code 6:
if (sa == NULL) return;
if (sk == NULL) return;
bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;

------------------------------------------------------------
Vulnerability 7:
rfcomm_pi ( sk ) -> channel = chan ;

variable_name: channel
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> rfcomm_pi ( sk ) -> channel = chan ;
pointer_declarations set()

variable_name: sk
first_occurrence: <S2SV_EndBug> struct sock * sk = sock -> sk ;
pointer_declarations {'sk', 'sock'}

variable_name: chan
first_occurrence: <S2SV_StartBug> int chan = sa -> rc_channel ;
pointer_declarations {'sa'}

variable_name: rfcomm_pi
first_occurrence: <S2SV_StartBug> bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

Fixed code 7:
if (sk == NULL) return;
rfcomm_pi ( sk ) -> channel = chan ;

------------------------------------------------------------
476 Vulnerabilities found in row 2811:

link: https://github.com/GNOME/libgsf/commit/95a8351a75758cf10b3bf6abae0b6b461f90d9e5:

Vulnerability 1:
g_object_unref ( subdir ) ;

variable_name: g_object_unref
first_occurrence: <S2SV_StartBug> g_object_unref ( subdir ) ;
pointer_declarations set()

variable_name: subdir
first_occurrence: GsfInput * subdir = gsf_infile_child_by_name ( GSF_INFILE ( dir ) , dirname ) ;
pointer_declarations {'subdir'}

Fixed code 1:
if (subdir == NULL) return;
g_object_unref ( subdir ) ;

------------------------------------------------------------
Vulnerability 2:
dir = GSF_INFILE_TAR ( subdir ) ;

variable_name: GSF_INFILE_TAR
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> dir = GSF_INFILE_TAR ( subdir ) ;
pointer_declarations set()

variable_name: dir
first_occurrence: CWE-476 static GsfInfileTar * tar_directory_for_file ( GsfInfileTar * dir , const char * name , gboolean last )
pointer_declarations {'tar_directory_for_file', 'name', 'dir'}

variable_name: subdir
first_occurrence: GsfInput * subdir = gsf_infile_child_by_name ( GSF_INFILE ( dir ) , dirname ) ;
pointer_declarations {'subdir'}

Fixed code 2:
if (dir == NULL) return;
if (subdir == NULL) return;
dir = GSF_INFILE_TAR ( subdir ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 2823:

link: https://github.com/xkbcommon/libxkbcommon/commit/96df3106d49438e442510c59acad306e94f3db4d:

Vulnerability 1:
if ( ! LookupString ( symInterpretMatchMaskNames , pred_txt , pred_rtrn ) ) {

variable_name: symInterpretMatchMaskNames
first_occurrence: <S2SV_StartBug> if ( ! LookupString ( symInterpretMatchMaskNames , pred_txt , pred_rtrn ) )
pointer_declarations set()

variable_name: pred_txt
first_occurrence: const char * pred_txt = xkb_atom_text ( info -> ctx , expr -> action . name ) ;
pointer_declarations {'expr', 'pred_txt', 'info'}

variable_name: LookupString
first_occurrence: <S2SV_StartBug> if ( ! LookupString ( symInterpretMatchMaskNames , pred_txt , pred_rtrn ) )
pointer_declarations set()

variable_name: pred_rtrn
first_occurrence: CWE-476 static bool ResolveStateAndPredicate ( ExprDef * expr , enum xkb_match_operation * pred_rtrn , xkb_mod_mask_t * mods_rtrn , CompatInfo * info )
pointer_declarations {'expr', 'mods_rtrn', 'pred_rtrn', 'info'}

Fixed code 1:
if (pred_txt == NULL) return;
if (pred_rtrn == NULL) return;
if ( ! LookupString ( symInterpretMatchMaskNames , pred_txt , pred_rtrn ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 2844:

link: https://github.com/k-takata/Onigmo/commit/9827d5a0298ee766f6041db9c0080166ff6cdce8:

Vulnerability 1:
if ( ! PPEEK_IS ( ')' ) ) return ONIGERR_INVALID_GROUP_NAME ;

variable_name: ONIGERR_INVALID_GROUP_NAME
first_occurrence: <S2SV_StartBug> if ( ! PPEEK_IS ( ')' ) ) return ONIGERR_INVALID_GROUP_NAME ;
pointer_declarations set()

variable_name: PPEEK_IS
first_occurrence: greedy_check : if ( ! PEND && PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY ) )
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 2859:

link: https://github.com/torvalds/linux/commit/9903e41ae1f5d50c93f268ca3304d4d7c64b9311:

Vulnerability 1:
freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;

variable_name: dev
first_occurrence: struct device * dev = & pdev -> dev ;
pointer_declarations {'dev', 'pdev'}

variable_name: resource_size
first_occurrence: <S2SV_StartBug> freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;
pointer_declarations {'res'}

variable_name: start
first_occurrence: <S2SV_StartBug> freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;
pointer_declarations {'res'}

variable_name: freq_reg
first_occurrence: <S2SV_StartBug> freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;
pointer_declarations {'res'}

variable_name: devm_ioremap
first_occurrence: <S2SV_StartBug> freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;
pointer_declarations {'res'}

Fixed code 1:
if (dev == NULL) return;
if (res == NULL) return;
freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 2862:

link: https://github.com/torvalds/linux/commit/9933e113c2e87a9f46a40fde8dafbf801dca1ab9:

Vulnerability 1:
skcipher -> setkey = alg -> setkey ;

variable_name: setkey
first_occurrence: <S2SV_StartBug> skcipher -> setkey = alg -> setkey ;
pointer_declarations {'alg', 'skcipher'}

Fixed code 1:
if (alg == NULL) return;
if (skcipher == NULL) return;
skcipher -> setkey = alg -> setkey ;

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 2997:

link: https://github.com/krb5/krb5/commit/a7886f0ed1277c69142b14a2c6629175a6331edc:

Vulnerability 1:
if ( REMAIN > INT_MAX )

variable_name: REMAIN
first_occurrence: # define REMAIN ( buf -> length - ( ptr - bufstart ) ) <S2SV_StartBug> if ( REMAIN > INT_MAX ) <S2SV_EndBug> return GSS_S_DEFECTIVE_TOKEN ;
pointer_declarations {'buf'}

variable_name: INT_MAX
first_occurrence: # define REMAIN ( buf -> length - ( ptr - bufstart ) ) <S2SV_StartBug> if ( REMAIN > INT_MAX ) <S2SV_EndBug> return GSS_S_DEFECTIVE_TOKEN ;
pointer_declarations {'buf'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3057:

link: https://github.com/torvalds/linux/commit/ac64115a66c18c01745bbd3c47a36b124e5fd8c0:

Vulnerability 1:
is_kvmppc_hv_enabled ( kvm ) ;

variable_name: is_kvmppc_hv_enabled
first_occurrence: hv_enabled = is_kvmppc_hv_enabled ( kvm ) ;
pointer_declarations set()

variable_name: kvm
first_occurrence: CWE-476 int kvm_vm_ioctl_check_extension ( struct kvm * kvm , long ext )
pointer_declarations {'kvm'}

Fixed code 1:
if (kvm == NULL) return;
is_kvmppc_hv_enabled ( kvm ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3120:

link: https://github.com/FFmpeg/FFmpeg/commit/b3332a182f8ba33a34542e4a0370f38b914ccf7d:

Vulnerability 1:
if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO )

variable_name: profile
first_occurrence: <S2SV_StartBug> if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO ) <S2SV_EndBug> c -> idct_put = ff_simple_idct_put_int32_10bit ;
pointer_declarations {'avctx', 'c'}

variable_name: FF_PROFILE_MPEG4_SIMPLE_STUDIO
first_occurrence: <S2SV_StartBug> if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO ) <S2SV_EndBug> c -> idct_put = ff_simple_idct_put_int32_10bit ;
pointer_declarations {'avctx', 'c'}

variable_name: AV_CODEC_ID_MPEG4
first_occurrence: <S2SV_StartBug> if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO ) <S2SV_EndBug> c -> idct_put = ff_simple_idct_put_int32_10bit ;
pointer_declarations {'avctx', 'c'}

variable_name: codec_id
first_occurrence: <S2SV_StartBug> if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO ) <S2SV_EndBug> c -> idct_put = ff_simple_idct_put_int32_10bit ;
pointer_declarations {'avctx', 'c'}

Fixed code 1:
if (avctx == NULL) return;
if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO )

------------------------------------------------------------
476 Vulnerabilities found in row 3121:

link: https://github.com/FFmpeg/FFmpeg/commit/b3332a182f8ba33a34542e4a0370f38b914ccf7d:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3150 Validated:

link: https://github.com/kkos/oniguruma/commit/b690371bbf97794b4a1d3f295d4fb9a8b05d402d:

Vulnerability 1:
* low = p - reg -> dmax ;

variable_name: dmax
first_occurrence: if ( reg -> dmax == 0 )
pointer_declarations {'reg'}

variable_name: low
first_occurrence: CWE-476 static int forward_search_range ( regex_t * reg , const UChar * str , const UChar * end , UChar * s , UChar * range , UChar * * low , UChar * * high , UChar * * low_prev )
pointer_declarations {'reg', 'range', 'low', 's', 'low_prev', 'str', 'high', 'end'}

variable_name: p
first_occurrence: UChar * p , * pprev = ( UChar * ) NULL ;
pointer_declarations {'NULL', 'pprev', 'p'}

Fixed code 1:
if (reg == NULL) return;
if (low == NULL) return;
if (p == NULL) return;
* low = p - reg -> dmax ;

------------------------------------------------------------
Vulnerability 2:
( pprev ? pprev : str ) , * low ) ;

variable_name: str
first_occurrence: CWE-476 static int forward_search_range ( regex_t * reg , const UChar * str , const UChar * end , UChar * s , UChar * range , UChar * * low , UChar * * high , UChar * * low_prev )
pointer_declarations {'reg', 'range', 'low', 's', 'low_prev', 'str', 'high', 'end'}

variable_name: low
first_occurrence: CWE-476 static int forward_search_range ( regex_t * reg , const UChar * str , const UChar * end , UChar * s , UChar * range , UChar * * low , UChar * * high , UChar * * low_prev )
pointer_declarations {'reg', 'range', 'low', 's', 'low_prev', 'str', 'high', 'end'}

variable_name: pprev
first_occurrence: UChar * p , * pprev = ( UChar * ) NULL ;
pointer_declarations {'NULL', 'pprev', 'p'}

Fixed code 2:
if (str == NULL) return;
if (low == NULL) return;
if (pprev == NULL) return;
( pprev ? pprev : str ) , * low ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3216:

link: https://github.com/xkbcommon/libxkbcommon/commit/badb428e63387140720f22486b3acbd3d738859f:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
keymap -> num_key_aliases = num_key_aliases ;

variable_name: num_key_aliases
first_occurrence: unsigned i , num_key_aliases ;
pointer_declarations set()

Fixed code 2:
if (keymap == NULL) return;
keymap -> num_key_aliases = num_key_aliases ;

------------------------------------------------------------
476 Vulnerabilities found in row 3219:

link: https://github.com/torvalds/linux/commit/bb3d48dcf86a97dc25fe9fc2c11938e19cb4399a:

Vulnerability 1:
error = xfs_da_shrink_inode ( args , 0 , bp ) ;

variable_name: bp
first_occurrence: struct xfs_buf * bp ;
pointer_declarations {'bp'}

variable_name: error
first_occurrence: int error , i , size ;
pointer_declarations set()

variable_name: xfs_da_shrink_inode
first_occurrence: <S2SV_StartBug> error = xfs_da_shrink_inode ( args , 0 , bp ) ;
pointer_declarations set()

variable_name: args
first_occurrence: CWE-476 int xfs_attr_shortform_to_leaf ( struct xfs_da_args * args , struct xfs_buf * * leaf_bp )
pointer_declarations {'args', 'leaf_bp'}

Fixed code 1:
if (bp == NULL) return;
if (args == NULL) return;
error = xfs_da_shrink_inode ( args , 0 , bp ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3220:

link: https://github.com/xkbcommon/libxkbcommon/commit/bb4909d2d8fa6b08155e449986a478101e2b2634:

Vulnerability 1:
return true ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
return true ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3231:

link: https://github.com/torvalds/linux/commit/bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205:

Vulnerability 1:
err = fib_dump_info ( skb , NETLINK_CB ( in_skb ) . portid ,

variable_name: fib_dump_info
first_occurrence: if ( rtm -> rtm_flags & RTM_F_FIB_MATCH ) <S2SV_StartBug> err = fib_dump_info ( skb , NETLINK_CB ( in_skb ) . portid , <S2SV_EndBug> nlh -> nlmsg_seq , RTM_NEWROUTE , table_id , rt -> rt_type , res . prefix , res . prefixlen , fl4 . flowi4_tos , res . fi , 0 ) ;
pointer_declarations {'rtm', 'rt', 'nlh'}

variable_name: in_skb
first_occurrence: CWE-476 static int inet_rtm_getroute ( struct sk_buff * in_skb , struct nlmsghdr * nlh , struct netlink_ext_ack * extack )
pointer_declarations {'in_skb', 'extack', 'nlh'}

variable_name: skb
first_occurrence: struct sk_buff * skb ;
pointer_declarations {'skb'}

variable_name: err
first_occurrence: int err ;
pointer_declarations set()

variable_name: portid
first_occurrence: if ( rtm -> rtm_flags & RTM_F_FIB_MATCH ) <S2SV_StartBug> err = fib_dump_info ( skb , NETLINK_CB ( in_skb ) . portid , <S2SV_EndBug> nlh -> nlmsg_seq , RTM_NEWROUTE , table_id , rt -> rt_type , res . prefix , res . prefixlen , fl4 . flowi4_tos , res . fi , 0 ) ;
pointer_declarations {'rtm', 'rt', 'nlh'}

variable_name: NETLINK_CB
first_occurrence: if ( rtm -> rtm_flags & RTM_F_FIB_MATCH ) <S2SV_StartBug> err = fib_dump_info ( skb , NETLINK_CB ( in_skb ) . portid , <S2SV_EndBug> nlh -> nlmsg_seq , RTM_NEWROUTE , table_id , rt -> rt_type , res . prefix , res . prefixlen , fl4 . flowi4_tos , res . fi , 0 ) ;
pointer_declarations {'rtm', 'rt', 'nlh'}

Fixed code 1:
if (in_skb == NULL) return;
if (skb == NULL) return;
err = fib_dump_info ( skb , NETLINK_CB ( in_skb ) . portid ,

------------------------------------------------------------
Vulnerability 2:
rcu_read_unlock ( ) ;

variable_name: rcu_read_unlock
first_occurrence: <S2SV_StartBug> rcu_read_unlock ( ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3244:

link: https://github.com/torvalds/linux/commit/bcf3b67d16a4c8ffae0aa79de5853435e683945c:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 3266:

link: https://github.com/mdadams/jasper/commit/bdfe95a6e81ffb4b2fad31a76b57943695beed20:

Vulnerability 1:
box -> info = boxinfo ;

variable_name: boxinfo
first_occurrence: jp2_boxinfo_t * boxinfo ;
pointer_declarations {'boxinfo'}

variable_name: info
first_occurrence: <S2SV_StartBug> box -> info = boxinfo ;
pointer_declarations {'box'}

Fixed code 1:
if (boxinfo == NULL) return;
if (box == NULL) return;
box -> info = boxinfo ;

------------------------------------------------------------
Vulnerability 2:
box -> ops = & jp2_boxinfo_unk . ops ;

variable_name: jp2_boxinfo_unk
first_occurrence: box -> ops = & jp2_boxinfo_unk . ops ;
pointer_declarations {'box'}

variable_name: ops
first_occurrence: box -> ops = & jp2_boxinfo_unk . ops ;
pointer_declarations {'box'}

Fixed code 2:
if (box == NULL) return;
box -> ops = & jp2_boxinfo_unk . ops ;

------------------------------------------------------------
Vulnerability 3:
jas_stream_rewind ( tmpstream ) ;

variable_name: jas_stream_rewind
first_occurrence: <S2SV_StartBug> jas_stream_rewind ( tmpstream ) ;
pointer_declarations set()

variable_name: tmpstream
first_occurrence: jas_stream_t * tmpstream ;
pointer_declarations {'tmpstream'}

Fixed code 3:
if (tmpstream == NULL) return;
jas_stream_rewind ( tmpstream ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3290:

link: https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81:

Vulnerability 1:
return 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3291:

link: https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81:

Vulnerability 1:
if ( ! index_key . type -> match || ! index_key . type -> instantiate ||

variable_name: index_key
first_occurrence: struct keyring_index_key index_key =
pointer_declarations set()

variable_name: instantiate
first_occurrence: <S2SV_StartBug> if ( ! index_key . type -> match || ! index_key . type -> instantiate || <S2SV_EndBug> ( ! index_key . description && ! index_key . type -> preparse ) ) goto error_put_type ;
pointer_declarations {'type'}

variable_name: match
first_occurrence: <S2SV_StartBug> if ( ! index_key . type -> match || ! index_key . type -> instantiate || <S2SV_EndBug> ( ! index_key . description && ! index_key . type -> preparse ) ) goto error_put_type ;
pointer_declarations {'type'}

Fixed code 1:
if (type == NULL) return;
if ( ! index_key . type -> match || ! index_key . type -> instantiate ||

------------------------------------------------------------
476 Vulnerabilities found in row 3292:

link: https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81:

Vulnerability 1:
. match_data . cmp = type -> match ,

variable_name: match
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT , . flags = KEYRING_SEARCH_DO_STATE_CHECK ,
pointer_declarations {'type'}

variable_name: cmp
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT , . flags = KEYRING_SEARCH_DO_STATE_CHECK ,
pointer_declarations {'type'}

variable_name: match_data
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT , . flags = KEYRING_SEARCH_DO_STATE_CHECK ,
pointer_declarations {'type'}

Fixed code 1:
if (type == NULL) return;
. match_data . cmp = type -> match ,

------------------------------------------------------------
Vulnerability 2:
int ret ;

variable_name: ret
first_occurrence: <S2SV_StartBug> int ret ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3293:

link: https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81:

Vulnerability 1:
. match_data . cmp = type -> match ,

variable_name: match
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations {'type'}

variable_name: cmp
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations {'type'}

variable_name: match_data
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations {'type'}

Fixed code 1:
if (type == NULL) return;
. match_data . cmp = type -> match ,

------------------------------------------------------------
476 Vulnerabilities found in row 3294:

link: https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81:

Vulnerability 1:
. match_data . cmp = user_match ,

variable_name: cmp
first_occurrence: . index_key . type = & key_type_request_key_auth , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = user_match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations set()

variable_name: user_match
first_occurrence: . index_key . type = & key_type_request_key_auth , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = user_match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations set()

variable_name: match_data
first_occurrence: . index_key . type = & key_type_request_key_auth , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = user_match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3355 Validated:

link: https://github.com/kkos/oniguruma/commit/c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c:

Vulnerability 1:
int cond_len , then_len , jump_len ;

variable_name: jump_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

variable_name: cond_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

variable_name: then_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
jump_len = cond_len + then_len + SIZE_OP_ATOMIC_END ;

variable_name: jump_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

variable_name: cond_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

variable_name: then_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

variable_name: SIZE_OP_ATOMIC_END
first_occurrence: <S2SV_StartBug> jump_len = cond_len + then_len + SIZE_OP_ATOMIC_END ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
int else_len = compile_length_tree ( Else , reg ) ;

variable_name: compile_length_tree
first_occurrence: len = compile_length_tree ( NODE_QUANT_BODY ( qn ) , reg ) ;
pointer_declarations set()

variable_name: else_len
first_occurrence: <S2SV_StartBug> int else_len = compile_length_tree ( Else , reg ) ;
pointer_declarations set()

variable_name: reg
first_occurrence: CWE-476 static int compile_bag_node ( BagNode * node , regex_t * reg , ScanEnv * env )
pointer_declarations {'env', 'node', 'reg'}

variable_name: Else
first_occurrence: Node * Else = node -> te . Else ;
pointer_declarations {'node', 'Else'}

Fixed code 3:
if (reg == NULL) return;
if (Else == NULL) return;
int else_len = compile_length_tree ( Else , reg ) ;

------------------------------------------------------------
Vulnerability 4:
COP ( reg ) -> jump . addr = else_len + SIZE_INC_OP ;

variable_name: reg
first_occurrence: CWE-476 static int compile_bag_node ( BagNode * node , regex_t * reg , ScanEnv * env )
pointer_declarations {'env', 'node', 'reg'}

variable_name: else_len
first_occurrence: <S2SV_StartBug> int else_len = compile_length_tree ( Else , reg ) ;
pointer_declarations set()

variable_name: SIZE_INC_OP
first_occurrence: COP ( reg ) -> push . addr = SIZE_INC_OP + len + SIZE_OP_POP_OUT + SIZE_OP_JUMP ;
pointer_declarations set()

variable_name: COP
first_occurrence: COP ( reg ) -> push . addr = SIZE_INC_OP + len + SIZE_OP_POP_OUT + SIZE_OP_JUMP ;
pointer_declarations set()

variable_name: jump
first_occurrence: COP ( reg ) -> jump . addr = - ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP_OUT ) ;
pointer_declarations set()

variable_name: addr
first_occurrence: COP ( reg ) -> push . addr = SIZE_INC_OP + len + SIZE_OP_POP_OUT + SIZE_OP_JUMP ;
pointer_declarations set()

Fixed code 4:
if (reg == NULL) return;
COP ( reg ) -> jump . addr = else_len + SIZE_INC_OP ;

------------------------------------------------------------
Vulnerability 5:
r = compile_tree ( Else , reg , env ) ;

variable_name: compile_tree
first_occurrence: r = compile_tree ( NODE_QUANT_BODY ( qn ) , reg , env ) ;
pointer_declarations set()

variable_name: env
first_occurrence: CWE-476 static int compile_bag_node ( BagNode * node , regex_t * reg , ScanEnv * env )
pointer_declarations {'env', 'node', 'reg'}

variable_name: reg
first_occurrence: CWE-476 static int compile_bag_node ( BagNode * node , regex_t * reg , ScanEnv * env )
pointer_declarations {'env', 'node', 'reg'}

variable_name: r
first_occurrence: int r , len ;
pointer_declarations set()

variable_name: Else
first_occurrence: Node * Else = node -> te . Else ;
pointer_declarations {'node', 'Else'}

Fixed code 5:
if (env == NULL) return;
if (reg == NULL) return;
if (Else == NULL) return;
r = compile_tree ( Else , reg , env ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3356 Validated:

link: https://github.com/kkos/oniguruma/commit/c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c:

Vulnerability 1:
if ( IS_NOT_NULL ( Else ) ) {

variable_name: IS_NOT_NULL
first_occurrence: if ( IS_NOT_NULL ( Then ) )
pointer_declarations set()

variable_name: Else
first_occurrence: Node * Else = node -> te . Else ;
pointer_declarations {'node', 'Else'}

Fixed code 1:
if (Else == NULL) return;
if ( IS_NOT_NULL ( Else ) ) {

------------------------------------------------------------
Vulnerability 2:
len += SIZE_OP_JUMP ;

variable_name: len
first_occurrence: int len ;
pointer_declarations set()

variable_name: SIZE_OP_JUMP
first_occurrence: len = tlen + SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 3435:

link: https://github.com/jsummers/imageworsener/commit/ca3356eb49fee03e2eaf6b6aff826988c1122d93:

Vulnerability 1:
rctx -> image_height = ( int ) iw_get_ui16le ( & rctx -> rbuf [ 6 ] ) ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3437:

link: https://github.com/torvalds/linux/commit/cabfb3680f78981d26c078a26e5c748531257ebb:

Vulnerability 1:
NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;

variable_name: NTLMSSP_NEGOTIATE_EXTENDED_SEC
first_occurrence: flags = NTLMSSP_NEGOTIATE_56 | NTLMSSP_REQUEST_TARGET | NTLMSSP_NEGOTIATE_TARGET_INFO | NTLMSSP_NEGOTIATE_128 | NTLMSSP_NEGOTIATE_UNICODE | <S2SV_StartBug> NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;
pointer_declarations set()

variable_name: NTLMSSP_NEGOTIATE_NTLM
first_occurrence: flags = NTLMSSP_NEGOTIATE_56 | NTLMSSP_REQUEST_TARGET | NTLMSSP_NEGOTIATE_TARGET_INFO | NTLMSSP_NEGOTIATE_128 | NTLMSSP_NEGOTIATE_UNICODE | <S2SV_StartBug> NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( ses -> server -> sign ) {

variable_name: sign
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> if ( ses -> server -> sign )
pointer_declarations {'ses', 'server'}

Fixed code 2:
if (ses == NULL) return;
if (server == NULL) return;
if ( ses -> server -> sign ) {

------------------------------------------------------------
Vulnerability 3:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3438:

link: https://github.com/torvalds/linux/commit/cabfb3680f78981d26c078a26e5c748531257ebb:

Vulnerability 1:
NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;

variable_name: NTLMSSP_NEGOTIATE_EXTENDED_SEC
first_occurrence: flags = NTLMSSP_NEGOTIATE_56 | NTLMSSP_REQUEST_TARGET | NTLMSSP_NEGOTIATE_128 | NTLMSSP_NEGOTIATE_UNICODE | <S2SV_StartBug> NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;
pointer_declarations set()

variable_name: NTLMSSP_NEGOTIATE_NTLM
first_occurrence: flags = NTLMSSP_NEGOTIATE_56 | NTLMSSP_REQUEST_TARGET | NTLMSSP_NEGOTIATE_128 | NTLMSSP_NEGOTIATE_UNICODE | <S2SV_StartBug> NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( ses -> server -> sign ) {

variable_name: sign
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> if ( ses -> server -> sign )
pointer_declarations {'ses', 'server'}

Fixed code 2:
if (ses == NULL) return;
if (server == NULL) return;
if ( ses -> server -> sign ) {

------------------------------------------------------------
Vulnerability 3:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3439:

link: https://github.com/torvalds/linux/commit/cabfb3680f78981d26c078a26e5c748531257ebb:

Vulnerability 1:
if ( ses -> server -> sign && ses -> server -> ops -> generate_signingkey ) {

variable_name: sign
first_occurrence: <S2SV_StartBug> if ( ses -> server -> sign && ses -> server -> ops -> generate_signingkey )
pointer_declarations {'ses', 'ops', 'server'}

variable_name: generate_signingkey
first_occurrence: <S2SV_StartBug> if ( ses -> server -> sign && ses -> server -> ops -> generate_signingkey )
pointer_declarations {'ses', 'ops', 'server'}

Fixed code 1:
if (ses == NULL) return;
if (ops == NULL) return;
if (server == NULL) return;
if ( ses -> server -> sign && ses -> server -> ops -> generate_signingkey ) {

------------------------------------------------------------
Vulnerability 2:
rc = ses -> server -> ops -> generate_signingkey ( ses ) ;

variable_name: rc
first_occurrence: int rc = 0 ;
pointer_declarations set()

variable_name: generate_signingkey
first_occurrence: <S2SV_StartBug> if ( ses -> server -> sign && ses -> server -> ops -> generate_signingkey )
pointer_declarations {'ses', 'ops', 'server'}

Fixed code 2:
if (ses == NULL) return;
if (ops == NULL) return;
if (server == NULL) return;
rc = ses -> server -> ops -> generate_signingkey ( ses ) ;

------------------------------------------------------------
Vulnerability 3:
goto keygen_exit ;

variable_name: keygen_exit
first_occurrence: <S2SV_StartBug> goto keygen_exit ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
keygen_exit :

variable_name: keygen_exit
first_occurrence: <S2SV_StartBug> goto keygen_exit ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3542:

link: https://github.com/radare/radare2/commit/d21e91f075a7a7a8ed23baa5c1bb1fac48313882:

Vulnerability 1:
if ( vdaux < 1 || ( char * ) UINTPTR_MAX - vstart < vdaux ) {

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: UINTPTR_MAX
first_occurrence: <S2SV_StartBug> if ( vdaux < 1 || ( char * ) UINTPTR_MAX - vstart < vdaux )
pointer_declarations {'UINTPTR_MAX'}

variable_name: vdaux
first_occurrence: verdef -> vd_version = READ16 ( dfs , j ) verdef -> vd_flags = READ16 ( dfs , j ) verdef -> vd_ndx = READ16 ( dfs , j ) verdef -> vd_cnt = READ16 ( dfs , j ) verdef -> vd_hash = READ32 ( dfs , j ) verdef -> vd_aux = READ32 ( dfs , j ) verdef -> vd_next = READ32 ( dfs , j ) int vdaux = verdef -> vd_aux ;
pointer_declarations {'verdef'}

Fixed code 1:
if (vstart == NULL) return;
if (UINTPTR_MAX == NULL) return;
if ( vdaux < 1 || ( char * ) UINTPTR_MAX - vstart < vdaux ) {

------------------------------------------------------------
369 Vulnerabilities found in row 3556:

link: https://github.com/uclouvain/openjpeg/commit/d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b:

Vulnerability 1:
if ( ! ( ( pi -> y % ( OPJ_INT32 ) ( comp -> dy << rpy ) == 0 ) || ( ( pi -> y == pi -> ty0 ) &&

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 3557:

link: https://github.com/uclouvain/openjpeg/commit/d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b:

Vulnerability 1:
if ( ! ( ( pi -> y % ( OPJ_INT32 ) ( comp -> dy << rpy ) == 0 ) || ( ( pi -> y == pi -> ty0 ) &&

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 3558:

link: https://github.com/uclouvain/openjpeg/commit/d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b:

Vulnerability 1:
if ( ! ( ( pi -> y % ( OPJ_INT32 ) ( comp -> dy << rpy ) == 0 ) || ( ( pi -> y == pi -> ty0 ) &&

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3575:

link: https://github.com/ImageMagick/ImageMagick/commit/d31fec57e9dfb0516deead2053a856e3c71e9751:

Vulnerability 1:
DestroyImage ( RemoveFirstImageFromList ( & image ) ) ;

variable_name: DestroyImage
first_occurrence: j ++ ) layer_info [ j ] . image = DestroyImage ( layer_info [ j ] . image ) ;
pointer_declarations set()

variable_name: RemoveFirstImageFromList
first_occurrence: <S2SV_StartBug> DestroyImage ( RemoveFirstImageFromList ( & image ) ) ;
pointer_declarations set()

variable_name: image
first_occurrence: Image * image ;
pointer_declarations {'image'}

Fixed code 1:
if (image == NULL) return;
DestroyImage ( RemoveFirstImageFromList ( & image ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3577:

link: https://github.com/memcached/memcached/commit/d35334f368817a77a6bd1f33c6a5676b2c402c02:

Vulnerability 1:
} else if ( strcmp ( tokens [ 1 ] . value , "mode" ) == 0 && ntokens >= 3 &&

variable_name: ntokens
first_occurrence: CWE-476 static void process_lru_command ( conn * c , token_t * tokens , const size_t ntokens )
pointer_declarations {'c', 'tokens'}

variable_name: tokens
first_occurrence: CWE-476 static void process_lru_command ( conn * c , token_t * tokens , const size_t ntokens )
pointer_declarations {'c', 'tokens'}

variable_name: value
first_occurrence: if ( strcmp ( tokens [ 1 ] . value ,  ) == 0 && ntokens >= 7 )
pointer_declarations set()

variable_name: strcmp
first_occurrence: if ( strcmp ( tokens [ 1 ] . value ,  ) == 0 && ntokens >= 7 )
pointer_declarations set()

Fixed code 1:
if (tokens == NULL) return;
} else if ( strcmp ( tokens [ 1 ] . value , "mode" ) == 0 && ntokens >= 3 &&

------------------------------------------------------------
Vulnerability 2:
} else if ( strcmp ( tokens [ 1 ] . value , "temp_ttl" ) == 0 && ntokens >= 3 &&

variable_name: ntokens
first_occurrence: CWE-476 static void process_lru_command ( conn * c , token_t * tokens , const size_t ntokens )
pointer_declarations {'c', 'tokens'}

variable_name: tokens
first_occurrence: CWE-476 static void process_lru_command ( conn * c , token_t * tokens , const size_t ntokens )
pointer_declarations {'c', 'tokens'}

variable_name: value
first_occurrence: if ( strcmp ( tokens [ 1 ] . value ,  ) == 0 && ntokens >= 7 )
pointer_declarations set()

variable_name: strcmp
first_occurrence: if ( strcmp ( tokens [ 1 ] . value ,  ) == 0 && ntokens >= 7 )
pointer_declarations set()

Fixed code 2:
if (tokens == NULL) return;
} else if ( strcmp ( tokens [ 1 ] . value , "temp_ttl" ) == 0 && ntokens >= 3 &&

------------------------------------------------------------
476 Vulnerabilities found in row 3596:

link: https://github.com/torvalds/linux/commit/d4fdf8ba0e5808ba9ad6b44337783bd9935e0982:

Vulnerability 1:
if ( test_opt ( sbi , FLUSH_MERGE ) && ! f2fs_readonly ( sbi -> sb ) ) {

variable_name: f2fs_readonly
first_occurrence: <S2SV_StartBug> if ( test_opt ( sbi , FLUSH_MERGE ) && ! f2fs_readonly ( sbi -> sb ) )
pointer_declarations {'sbi'}

variable_name: FLUSH_MERGE
first_occurrence: <S2SV_StartBug> if ( test_opt ( sbi , FLUSH_MERGE ) && ! f2fs_readonly ( sbi -> sb ) )
pointer_declarations {'sbi'}

variable_name: test_opt
first_occurrence: if ( ! test_opt ( sbi , LFS ) ) sm_info -> ipu_policy = 1 << F2FS_IPU_FSYNC ;
pointer_declarations {'sm_info'}

variable_name: sb
first_occurrence: <S2SV_StartBug> if ( test_opt ( sbi , FLUSH_MERGE ) && ! f2fs_readonly ( sbi -> sb ) )
pointer_declarations {'sbi'}

Fixed code 1:
if (sbi == NULL) return;
if ( test_opt ( sbi , FLUSH_MERGE ) && ! f2fs_readonly ( sbi -> sb ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 3597:

link: https://github.com/torvalds/linux/commit/d4fdf8ba0e5808ba9ad6b44337783bd9935e0982:

Vulnerability 1:
init_thread :

variable_name: init_thread
first_occurrence: goto init_thread ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 3650:

link: https://github.com/mdadams/jasper/commit/d8c2604cd438c41ec72aff52c16ebd8183068020:

Vulnerability 1:
siz -> comps [ i ] . sgnd = ( tmp >> 7 ) & 1 ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3691:

link: https://github.com/torvalds/linux/commit/dd504589577d8e8e70f51f997ad487a4cb6c026f:

Vulnerability 1:
unsigned int len = sizeof ( * ctx ) + crypto_skcipher_reqsize ( private ) ;

variable_name: len
first_occurrence: <S2SV_StartBug> unsigned int len = sizeof ( * ctx ) + crypto_skcipher_reqsize ( private ) ;
pointer_declarations {'ctx'}

variable_name: crypto_skcipher_reqsize
first_occurrence: <S2SV_StartBug> unsigned int len = sizeof ( * ctx ) + crypto_skcipher_reqsize ( private ) ;
pointer_declarations {'ctx'}

variable_name: ctx
first_occurrence: struct skcipher_ctx * ctx ;
pointer_declarations {'ctx'}

Fixed code 1:
if (ctx == NULL) return;
unsigned int len = sizeof ( * ctx ) + crypto_skcipher_reqsize ( private ) ;

------------------------------------------------------------
Vulnerability 2:
ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) ,

variable_name: sk
first_occurrence: CWE-476 static int skcipher_accept_parent ( void * private , struct sock * sk )
pointer_declarations {'sk', 'private'}

variable_name: sock_kmalloc
first_occurrence: <S2SV_EndBug> ctx = sock_kmalloc ( sk , len , GFP_KERNEL ) ;
pointer_declarations set()

variable_name: crypto_skcipher_ivsize
first_occurrence: <S2SV_StartBug> ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) , <S2SV_EndBug> GFP_KERNEL ) ;
pointer_declarations {'ctx'}

variable_name: iv
first_occurrence: <S2SV_StartBug> ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) , <S2SV_EndBug> GFP_KERNEL ) ;
pointer_declarations {'ctx'}

Fixed code 2:
if (sk == NULL) return;
if (ctx == NULL) return;
ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) ,

------------------------------------------------------------
Vulnerability 3:
memset ( ctx -> iv , 0 , crypto_skcipher_ivsize ( private ) ) ;

variable_name: memset
first_occurrence: <S2SV_StartBug> memset ( ctx -> iv , 0 , crypto_skcipher_ivsize ( private ) ) ;
pointer_declarations {'ctx'}

variable_name: crypto_skcipher_ivsize
first_occurrence: <S2SV_StartBug> ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) , <S2SV_EndBug> GFP_KERNEL ) ;
pointer_declarations {'ctx'}

variable_name: iv
first_occurrence: <S2SV_StartBug> ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) , <S2SV_EndBug> GFP_KERNEL ) ;
pointer_declarations {'ctx'}

Fixed code 3:
if (ctx == NULL) return;
memset ( ctx -> iv , 0 , crypto_skcipher_ivsize ( private ) ) ;

------------------------------------------------------------
Vulnerability 4:
skcipher_request_set_tfm ( & ctx -> req , private ) ;

variable_name: req
first_occurrence: <S2SV_StartBug> skcipher_request_set_tfm ( & ctx -> req , private ) ;
pointer_declarations {'ctx'}

variable_name: skcipher_request_set_tfm
first_occurrence: <S2SV_StartBug> skcipher_request_set_tfm ( & ctx -> req , private ) ;
pointer_declarations {'ctx'}

Fixed code 4:
if (ctx == NULL) return;
skcipher_request_set_tfm ( & ctx -> req , private ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3692:

link: https://github.com/torvalds/linux/commit/dd504589577d8e8e70f51f997ad487a4cb6c026f:

Vulnerability 1:
return crypto_alloc_skcipher ( name , type , mask ) ;

variable_name: type
first_occurrence: CWE-476 static void * skcipher_bind ( const char * name , u32 type , u32 mask )
pointer_declarations {'name', 'skcipher_bind'}

variable_name: crypto_alloc_skcipher
first_occurrence: <S2SV_StartBug> return crypto_alloc_skcipher ( name , type , mask ) ;
pointer_declarations set()

variable_name: mask
first_occurrence: CWE-476 static void * skcipher_bind ( const char * name , u32 type , u32 mask )
pointer_declarations {'name', 'skcipher_bind'}

variable_name: name
first_occurrence: CWE-476 static void * skcipher_bind ( const char * name , u32 type , u32 mask )
pointer_declarations {'name', 'skcipher_bind'}

Fixed code 1:
if (name == NULL) return;
return crypto_alloc_skcipher ( name , type , mask ) ;

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3693:

link: https://github.com/torvalds/linux/commit/dd504589577d8e8e70f51f997ad487a4cb6c026f:

Vulnerability 1:
crypto_free_skcipher ( private ) ;

variable_name: crypto_free_skcipher
first_occurrence: <S2SV_StartBug> crypto_free_skcipher ( private ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3694:

link: https://github.com/torvalds/linux/commit/dd504589577d8e8e70f51f997ad487a4cb6c026f:

Vulnerability 1:
return crypto_skcipher_setkey ( private , key , keylen ) ;

variable_name: crypto_skcipher_setkey
first_occurrence: <S2SV_StartBug> return crypto_skcipher_setkey ( private , key , keylen ) ;
pointer_declarations set()

variable_name: keylen
first_occurrence: CWE-476 static int skcipher_setkey ( void * private , const u8 * key , unsigned int keylen )
pointer_declarations {'key', 'private'}

variable_name: key
first_occurrence: CWE-476 static int skcipher_setkey ( void * private , const u8 * key , unsigned int keylen )
pointer_declarations {'key', 'private'}

Fixed code 1:
if (key == NULL) return;
return crypto_skcipher_setkey ( private , key , keylen ) ;

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3775:

link: https://github.com/mdadams/jasper/commit/e24bdc716c3327b067c551bc6cfb97fd2370358d:

Vulnerability 1:
box -> len = len ;

variable_name: len
first_occurrence: uint_fast32_t len ;
pointer_declarations set()

Fixed code 1:
if (box == NULL) return;
box -> len = len ;

------------------------------------------------------------
Vulnerability 2:
jas_eprintf ( "cannot<S2SV_blank>copy<S2SV_blank>box<S2SV_blank>data\\n" ) ;

variable_name: jas_eprintf
first_occurrence: jas_eprintf (  ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3776:

link: https://github.com/mdadams/jasper/commit/e24bdc716c3327b067c551bc6cfb97fd2370358d:

Vulnerability 1:
jas_eprintf ( "box<S2SV_blank>type<S2SV_blank>%s\\n" , box -> info -> name ) ;

variable_name: name
first_occurrence: <S2SV_StartBug> jas_eprintf (  , box -> info -> name ) ;
pointer_declarations {'box', 'info'}

variable_name: jas_eprintf
first_occurrence: jas_eprintf (  ) ;
pointer_declarations set()

Fixed code 1:
if (box == NULL) return;
if (info == NULL) return;
jas_eprintf ( "box<S2SV_blank>type<S2SV_blank>%s\\n" , box -> info -> name ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3821:

link: https://github.com/libav/libav/commit/e5b019725f53b79159931d3a7317107cbbfd0860:

Vulnerability 1:
if ( ( temp_buffer & 0xffffff00 ) != 0x100 )

variable_name: temp_buffer
first_occurrence: uint32_t temp_buffer = - 1 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
else if ( temp_buffer < 0x120 )

variable_name: temp_buffer
first_occurrence: uint32_t temp_buffer = - 1 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
else if ( temp_buffer < 0x130 )

variable_name: temp_buffer
first_occurrence: uint32_t temp_buffer = - 1 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
617 Vulnerabilities found in row 3822:

link: https://github.com/ImageMagick/ImageMagick/commit/e5c063a1007506ba69e97a35effcdef944421c89:

assertion 1:
assert ( image_info -> signature == MagickSignature )

Fixed code 1:
if (!(image_info -> signature == MagickSignature)) {
    return;
} 
//assert ( image_info -> signature == MagickSignature )

assertion 2:
assert ( exception -> signature == MagickSignature )

Fixed code 2:
if (!(exception -> signature == MagickSignature)) {
    return;
} 
//assert ( exception -> signature == MagickSignature )

assertion 3:
assert ( exception != ( ExceptionInfo * )

Fixed code 3:
if (!(exception != ( ExceptionInfo *)) {
    return;
} 
//assert ( exception != ( ExceptionInfo * )

assertion 4:
assert ( image_info != ( const ImageInfo * )

Fixed code 4:
if (!(image_info != ( const ImageInfo *)) {
    return;
} 
//assert ( image_info != ( const ImageInfo * )

------------------------------------------------------------
476 Vulnerabilities found in row 3850:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) ) {

variable_name: jp2_box_t
first_occurrence: CWE-476 jp2_box_t * jp2_box_create ( int type )
pointer_declarations {'jp2_box_create'}

variable_name: jas_malloc
first_occurrence: <S2SV_StartBug> if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) )
pointer_declarations set()

variable_name: box
first_occurrence: jp2_box_t * box ;
pointer_declarations {'box'}

Fixed code 1:
if (box == NULL) return;
if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) ) {

------------------------------------------------------------
Vulnerability 2:
memset ( box , 0 , sizeof ( jp2_box_t ) ) ;

variable_name: jp2_box_t
first_occurrence: CWE-476 jp2_box_t * jp2_box_create ( int type )
pointer_declarations {'jp2_box_create'}

variable_name: memset
first_occurrence: <S2SV_StartBug> memset ( box , 0 , sizeof ( jp2_box_t ) ) ;
pointer_declarations set()

variable_name: box
first_occurrence: jp2_box_t * box ;
pointer_declarations {'box'}

Fixed code 2:
if (box == NULL) return;
memset ( box , 0 , sizeof ( jp2_box_t ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3851:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) ) {

variable_name: jp2_box_t
first_occurrence: CWE-476 jp2_box_t * jp2_box_get ( jas_stream_t * in )
pointer_declarations {'in', 'jp2_box_get'}

variable_name: jas_malloc
first_occurrence: <S2SV_StartBug> if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) )
pointer_declarations set()

variable_name: box
first_occurrence: jp2_box_t * box ;
pointer_declarations {'box'}

Fixed code 1:
if (box == NULL) return;
if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) ) {

------------------------------------------------------------
Vulnerability 2:
"preliminary<S2SV_blank>processing<S2SV_blank>of<S2SV_blank>JP2<S2SV_blank>box:<S2SV_blank>type=%c%s%c<S2SV_blank>(0x%08x);<S2SV_blank>length=%d\\n" ,

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( box -> len == 1 ) {

variable_name: len
first_occurrence: uint_fast32_t len ;
pointer_declarations set()

Fixed code 3:
if (box == NULL) return;
if ( box -> len == 1 ) {

------------------------------------------------------------
476 Vulnerabilities found in row 3852:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
if ( jas_stream_copy ( out , tmpstream , box -> len - JP2_BOX_HDRLEN ( false ) ) ) {

variable_name: len
first_occurrence: box -> len = jas_stream_tell ( tmpstream ) + JP2_BOX_HDRLEN ( false ) ;
pointer_declarations {'box'}

variable_name: tmpstream
first_occurrence: jas_stream_t * tmpstream ;
pointer_declarations {'tmpstream'}

variable_name: jas_stream_copy
first_occurrence: <S2SV_StartBug> if ( jas_stream_copy ( out , tmpstream , box -> len - JP2_BOX_HDRLEN ( false ) ) )
pointer_declarations {'box'}

variable_name: JP2_BOX_HDRLEN
first_occurrence: box -> len = jas_stream_tell ( tmpstream ) + JP2_BOX_HDRLEN ( false ) ;
pointer_declarations {'box'}

variable_name: out
first_occurrence: CWE-476 int jp2_box_put ( jp2_box_t * box , jas_stream_t * out )
pointer_declarations {'out', 'box'}

Fixed code 1:
if (tmpstream == NULL) return;
if (out == NULL) return;
if (box == NULL) return;
if ( jas_stream_copy ( out , tmpstream , box -> len - JP2_BOX_HDRLEN ( false ) ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 3853:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
unsigned int i ;

variable_name: i
first_occurrence: <S2SV_StartBug> unsigned int i ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3854:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
unsigned int channo ;

variable_name: channo
first_occurrence: <S2SV_StartBug> unsigned int channo ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3855:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
unsigned int i ;

variable_name: i
first_occurrence: <S2SV_StartBug> unsigned int i ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3856:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
if ( jp2_getuint16 ( in , & pclr -> numlutents ) ||

variable_name: numlutents
first_occurrence: <S2SV_StartBug> if ( jp2_getuint16 ( in , & pclr -> numlutents ) || <S2SV_EndBug> jp2_getuint8 ( in , & pclr -> numchans ) )
pointer_declarations {'pclr'}

variable_name: in
first_occurrence: CWE-476 static int jp2_pclr_getdata ( jp2_box_t * box , jas_stream_t * in )
pointer_declarations {'in', 'box'}

variable_name: jp2_getuint16
first_occurrence: <S2SV_StartBug> if ( jp2_getuint16 ( in , & pclr -> numlutents ) || <S2SV_EndBug> jp2_getuint8 ( in , & pclr -> numchans ) )
pointer_declarations {'pclr'}

Fixed code 1:
if (in == NULL) return;
if (pclr == NULL) return;
if ( jp2_getuint16 ( in , & pclr -> numlutents ) ||

------------------------------------------------------------
476 Vulnerabilities found in row 3874:

link: https://github.com/torvalds/linux/commit/ea6789980fdaa610d7eb63602c746bf6ec70cd2b:

Vulnerability 1:
goto present_leaves_cluster_but_not_new_leaf ;

variable_name: present_leaves_cluster_but_not_new_leaf
first_occurrence: <S2SV_StartBug> goto present_leaves_cluster_but_not_new_leaf ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
present_leaves_cluster_but_not_new_leaf :

variable_name: present_leaves_cluster_but_not_new_leaf
first_occurrence: <S2SV_StartBug> goto present_leaves_cluster_but_not_new_leaf ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 3902:

link: https://github.com/pgbouncer/pgbouncer/commit/edab5be6665b9e8de66c25ba527509b229468573:

Vulnerability 1:
if ( ! * passwd || ! * user -> passwd )

variable_name: passwd
first_occurrence: CWE-476 static bool check_client_passwd ( PgSocket * client , const char * passwd )
pointer_declarations {'client', 'passwd'}

Fixed code 1:
if (user == NULL) return;
if (passwd == NULL) return;
if ( ! * passwd || ! * user -> passwd )

------------------------------------------------------------
476 Vulnerabilities found in row 3946:

link: https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa:

Vulnerability 1:
dh_clnt = EVP_PKEY_get0_DH ( ckey ) ;

variable_name: ckey
first_occurrence: EVP_PKEY * ckey = NULL , * skey = NULL ;
pointer_declarations {'ckey', 'skey'}

variable_name: EVP_PKEY_get0_DH
first_occurrence: <S2SV_StartBug> dh_clnt = EVP_PKEY_get0_DH ( ckey ) ;
pointer_declarations set()

variable_name: dh_clnt
first_occurrence: # ifndef OPENSSL_NO_DH DH * dh_clnt = NULL ;
pointer_declarations {'dh_clnt'}

Fixed code 1:
if (ckey == NULL) return;
if (dh_clnt == NULL) return;
dh_clnt = EVP_PKEY_get0_DH ( ckey ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3947:

link: https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa:

Vulnerability 1:
if ( ssl_derive ( s , ckey , skey ) == 0 ) {

variable_name: ckey
first_occurrence: EVP_PKEY * ckey = NULL , * skey = NULL ;
pointer_declarations {'ckey', 'skey'}

variable_name: s
first_occurrence: CWE-476 static int tls_construct_cke_ecdhe ( SSL * s , unsigned char * * p , int * len , int * al )
pointer_declarations {'len', 's', 'al', 'p'}

variable_name: skey
first_occurrence: EVP_PKEY * ckey = NULL , * skey = NULL ;
pointer_declarations {'ckey', 'skey'}

variable_name: ssl_derive
first_occurrence: <S2SV_StartBug> if ( ssl_derive ( s , ckey , skey ) == 0 )
pointer_declarations set()

Fixed code 1:
if (ckey == NULL) return;
if (s == NULL) return;
if (skey == NULL) return;
if ( ssl_derive ( s , ckey , skey ) == 0 ) {

------------------------------------------------------------
476 Vulnerabilities found in row 3955:

link: https://github.com/torvalds/linux/commit/f0d1762554014ce0ae347b9f0d088f2c157c8c72:

Vulnerability 1:
blk_cleanup_queue ( cd -> disk -> queue ) ;

variable_name: queue
first_occurrence: <S2SV_StartBug> blk_cleanup_queue ( cd -> disk -> queue ) ;
pointer_declarations {'disk', 'cd'}

variable_name: blk_cleanup_queue
first_occurrence: <S2SV_StartBug> blk_cleanup_queue ( cd -> disk -> queue ) ;
pointer_declarations {'disk', 'cd'}

Fixed code 1:
if (disk == NULL) return;
if (cd == NULL) return;
blk_cleanup_queue ( cd -> disk -> queue ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 3956:

link: https://github.com/torvalds/linux/commit/f0d1762554014ce0ae347b9f0d088f2c157c8c72:

Vulnerability 1:
disk -> queue = NULL ;

variable_name: queue
first_occurrence: disk -> queue = blk_mq_init_sq_queue ( & cd -> tag_set , & pcd_mq_ops , 1 , BLK_MQ_F_SHOULD_MERGE ) ;
pointer_declarations {'disk', 'cd'}

Fixed code 1:
if (disk == NULL) return;
disk -> queue = NULL ;

------------------------------------------------------------
476 Vulnerabilities found in row 3976:

link: https://github.com/torvalds/linux/commit/f3069c6d33f6ae63a1668737bc78aaaa51bff7ca:

Vulnerability 1:
if ( rs -> rs_bound_addr == 0 ) {

variable_name: rs_bound_addr
first_occurrence: <S2SV_StartBug> if ( rs -> rs_bound_addr == 0 )
pointer_declarations {'rs'}

Fixed code 1:
if (rs == NULL) return;
if ( rs -> rs_bound_addr == 0 ) {

------------------------------------------------------------
476 Vulnerabilities found in row 3979:

link: https://github.com/miniupnp/miniupnp/commit/f321c2066b96d18afa5158dfa2d2873a2957ef38:

Vulnerability 1:
rhost_old [ 0 ] = '\\0' ;

variable_name: rhost_old
first_occurrence: char rhost_old [ 32 ] ;
pointer_declarations {'rhost_old'}

Fixed code 1:
if (rhost_old == NULL) return;
rhost_old [ 0 ] = '\\0' ;

------------------------------------------------------------
369 Vulnerabilities found in row 3980:

link: https://github.com/torvalds/linux/commit/f3554aeb991214cbfafd17d55e2bfddb50282e32:

Vulnerability 1:
g -> head <= 0 ||

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 3981:

link: https://github.com/torvalds/linux/commit/f3554aeb991214cbfafd17d55e2bfddb50282e32:

Vulnerability 1:
head_shift = ( F_SECT_PER_TRACK + 5 ) / 6 ;

divisor: 6
Fixed code 1:
if (6 == 0) {fprintf(stderr, "Error: Division by zero in operation\n"); return -1;}
head_shift = ( F_SECT_PER_TRACK + 5 ) / 6 ;

------------------------------------------------------------
369 Vulnerabilities found in row 4095:

link: https://github.com/FFmpeg/FFmpeg/commit/fa19fbcf712a6a6cc5a5cfdc3254a97b9bce6582:

Vulnerability 1:
if ( track -> timescale > UINT16_MAX ) {

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4102:

link: https://github.com/radare/radare2/commit/fbaf24bce7ea4211e4608b3ab6c1b45702cb243d:

Vulnerability 1:
char key [ 32 ] = { 0 } ;

variable_name: key
first_occurrence: <S2SV_StartBug> char key [ 32 ] =
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( vdaux < 1 || vstart + vdaux < vstart ) {

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: vdaux
first_occurrence: verdef -> vd_version = READ16 ( dfs , j ) verdef -> vd_flags = READ16 ( dfs , j ) verdef -> vd_ndx = READ16 ( dfs , j ) verdef -> vd_cnt = READ16 ( dfs , j ) verdef -> vd_hash = READ32 ( dfs , j ) verdef -> vd_aux = READ32 ( dfs , j ) verdef -> vd_next = READ32 ( dfs , j ) int vdaux = verdef -> vd_aux ;
pointer_declarations {'verdef'}

Fixed code 2:
if (vstart == NULL) return;
if ( vdaux < 1 || vstart + vdaux < vstart ) {

------------------------------------------------------------
Vulnerability 3:
vstart += vdaux ;

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: vdaux
first_occurrence: verdef -> vd_version = READ16 ( dfs , j ) verdef -> vd_flags = READ16 ( dfs , j ) verdef -> vd_ndx = READ16 ( dfs , j ) verdef -> vd_cnt = READ16 ( dfs , j ) verdef -> vd_hash = READ32 ( dfs , j ) verdef -> vd_aux = READ32 ( dfs , j ) verdef -> vd_next = READ32 ( dfs , j ) int vdaux = verdef -> vd_aux ;
pointer_declarations {'verdef'}

Fixed code 3:
if (vstart == NULL) return;
vstart += vdaux ;

------------------------------------------------------------
Vulnerability 4:
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

variable_name: Elf_
first_occurrence: CWE-476 static Sdb * store_versioninfo_gnu_verdef ( ELFOBJ * bin , Elf_ ( Shdr ) * shdr , int sz )
pointer_declarations {'bin', 'shdr', 'store_versioninfo_gnu_verdef'}

variable_name: Verdaux
first_occurrence: Elf_ ( Verdaux ) aux =
pointer_declarations set()

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: end
first_occurrence: char * end = NULL ;
pointer_declarations {'end'}

Fixed code 4:
if (vstart == NULL) return;
if (end == NULL) return;
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

------------------------------------------------------------
476 Vulnerabilities found in row 4139:

link: https://github.com/libav/libav/commit/fe6eea99efac66839052af547426518efd970b24:

Vulnerability 1:
uint16_t auxsize ;

variable_name: uint16_t
first_occurrence: uint16_t asize ;
pointer_declarations set()

variable_name: auxsize
first_occurrence: <S2SV_StartBug> uint16_t auxsize ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
av_get_packet ( pb , pkt , vsize ) ;

variable_name: pkt
first_occurrence: AVPacket * pkt ;
pointer_declarations {'pkt'}

variable_name: vsize
first_occurrence: uint32_t vsize ;
pointer_declarations set()

variable_name: av_get_packet
first_occurrence: <S2SV_StartBug> av_get_packet ( pb , pkt , vsize ) ;
pointer_declarations set()

variable_name: pb
first_occurrence: AVIOContext * pb = s -> pb ;
pointer_declarations {'s', 'pb'}

Fixed code 2:
if (pkt == NULL) return;
if (pb == NULL) return;
av_get_packet ( pb , pkt , vsize ) ;

------------------------------------------------------------
Vulnerability 3:
av_get_packet ( pb , pkt , asize ) ;

variable_name: pkt
first_occurrence: AVPacket * pkt ;
pointer_declarations {'pkt'}

variable_name: av_get_packet
first_occurrence: <S2SV_StartBug> av_get_packet ( pb , pkt , vsize ) ;
pointer_declarations set()

variable_name: asize
first_occurrence: uint16_t asize ;
pointer_declarations set()

variable_name: pb
first_occurrence: AVIOContext * pb = s -> pb ;
pointer_declarations {'s', 'pb'}

Fixed code 3:
if (pkt == NULL) return;
if (pb == NULL) return;
av_get_packet ( pb , pkt , asize ) ;

------------------------------------------------------------
617 Vulnerabilities found in row 4154:

link: https://github.com/krb5/krb5/commit/ffb35baac6981f9e8914f8f3bffd37f284b85970:

assertion 1:
assert ( state -> status != 0 )

Fixed code 1:
if (!(state -> status != 0)) {
    return;
} 
//assert ( state -> status != 0 )

assertion 2:
assert ( state )

Fixed code 2:
if (!(state)) {
    return;
} 
//assert ( state )

assertion 3:
assert ( did_log != 0 )

Fixed code 3:
if (!(did_log != 0)) {
    return;
} 
//assert ( did_log != 0 )

------------------------------------------------------------
617 Vulnerabilities found in row 4155:

link: https://github.com/krb5/krb5/commit/ffb35baac6981f9e8914f8f3bffd37f284b85970:

assertion 1:
assert ( isflagset ( c_flags , KRB5_KDB_FLAGS_S4U )

Fixed code 1:
if (!(isflagset ( c_flags , KRB5_KDB_FLAGS_S4U)) {
    return;
} 
//assert ( isflagset ( c_flags , KRB5_KDB_FLAGS_S4U )

assertion 2:
assert ( client == NULL )

Fixed code 2:
if (!(client == NULL)) {
    return;
} 
//assert ( client == NULL )

assertion 3:
assert ( stkt_server == NULL )

Fixed code 3:
if (!(stkt_server == NULL)) {
    return;
} 
//assert ( stkt_server == NULL )

assertion 4:
assert ( status != NULL )

Fixed code 4:
if (!(status != NULL)) {
    return;
} 
//assert ( status != NULL )

assertion 5:
assert ( krb5_is_tgs_principal ( header_ticket -> server )

Fixed code 5:
if (!(krb5_is_tgs_principal ( header_ticket -> server)) {
    return;
} 
//assert ( krb5_is_tgs_principal ( header_ticket -> server )

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 4298:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
ZeroMemory ( & credssp -> authInfo , sizeof ( SecBuffer ) ) ;

variable_name: authInfo
first_occurrence: <S2SV_StartBug> ZeroMemory ( & credssp -> authInfo , sizeof ( SecBuffer ) ) ;
pointer_declarations {'credssp'}

variable_name: ZeroMemory
first_occurrence: ZeroMemory ( credssp , sizeof ( rdpCredssp ) ) ;
pointer_declarations set()

variable_name: SecBuffer
first_occurrence: ZeroMemory ( & credssp -> negoToken , sizeof ( SecBuffer ) ) ;
pointer_declarations {'credssp'}

Fixed code 1:
if (credssp == NULL) return;
ZeroMemory ( & credssp -> authInfo , sizeof ( SecBuffer ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4299:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4300:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
return FALSE ;

variable_name: FALSE
first_occurrence: if ( tls_accept ( transport -> TlsIn , transport -> settings -> CertificateFile , transport -> settings -> PrivateKeyFile ) != TRUE ) return FALSE ;
pointer_declarations {'settings', 'transport'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4301:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
return FALSE ;

variable_name: FALSE
first_occurrence: if ( ! transport_connect_tls ( transport ) ) return FALSE ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4302:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
if ( ! handle )

variable_name: handle
first_occurrence: CWE-476 void * sspi_SecureHandleGetLowerPointer ( SecHandle * handle )
pointer_declarations {'handle', 'sspi_SecureHandleGetLowerPointer'}

Fixed code 1:
if (handle == NULL) return;
if ( ! handle )

------------------------------------------------------------
476 Vulnerabilities found in row 4303:

link: https://github.com/FreeRDP/FreeRDP/commit/0773bb9303d24473fe1185d85a424dfe159aff53:

Vulnerability 1:
if ( ! handle )

variable_name: handle
first_occurrence: CWE-476 void * sspi_SecureHandleGetUpperPointer ( SecHandle * handle )
pointer_declarations {'handle', 'sspi_SecureHandleGetUpperPointer'}

Fixed code 1:
if (handle == NULL) return;
if ( ! handle )

------------------------------------------------------------
476 Vulnerabilities found in row 4312:

link: https://github.com/SpiderLabs/ModSecurity/commit/0840b13612a0b7ef1ce7441cf811dcfc6b463fba:

Vulnerability 1:
if ( ( msr -> msc_reqbody_spilltodisk )

variable_name: msc_reqbody_spilltodisk
first_occurrence: <S2SV_StartBug> if ( ( msr -> msc_reqbody_spilltodisk ) <S2SV_EndBug> && ( msr -> msc_reqbody_length + length > ( apr_size_t ) msr -> txcfg -> reqbody_inmemory_limit ) )
pointer_declarations {'msr', 'txcfg'}

Fixed code 1:
if (msr == NULL) return;
if ( ( msr -> msc_reqbody_spilltodisk )

------------------------------------------------------------
476 Vulnerabilities found in row 4330:

link: https://github.com/torvalds/linux/commit/09ba3bc9dd150457c506e4661380a6183af651c1:

Vulnerability 1:
src_devid , NULL , NULL ) ;

variable_name: src_devid
first_occurrence: u64 src_devid ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
NULL , NULL ) ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4331:

link: https://github.com/torvalds/linux/commit/09ba3bc9dd150457c506e4661380a6183af651c1:

Vulnerability 1:
NULL ) ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4332:

link: https://github.com/torvalds/linux/commit/09ba3bc9dd150457c506e4661380a6183af651c1:

Vulnerability 1:
device = btrfs_find_device ( fs_info -> fs_devices , devid , NULL , NULL ) ;

variable_name: fs_devices
first_occurrence: <S2SV_StartBug> device = btrfs_find_device ( fs_info -> fs_devices , devid , NULL , NULL ) ;
pointer_declarations {'fs_info'}

variable_name: devid
first_occurrence: u64 devid = 1 ;
pointer_declarations set()

variable_name: device
first_occurrence: struct btrfs_device * device = NULL ;
pointer_declarations {'device'}

variable_name: btrfs_find_device
first_occurrence: <S2SV_StartBug> device = btrfs_find_device ( fs_info -> fs_devices , devid , NULL , NULL ) ;
pointer_declarations {'fs_info'}

Fixed code 1:
if (fs_info == NULL) return;
if (device == NULL) return;
device = btrfs_find_device ( fs_info -> fs_devices , devid , NULL , NULL ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4333:

link: https://github.com/torvalds/linux/commit/09ba3bc9dd150457c506e4661380a6183af651c1:

Vulnerability 1:
dev = btrfs_find_device ( fs_info -> fs_devices , devid , NULL , NULL ) ;

variable_name: dev
first_occurrence: struct btrfs_device * dev ;
pointer_declarations {'dev'}

variable_name: fs_devices
first_occurrence: mutex_lock ( & fs_info -> fs_devices -> device_list_mutex ) ;
pointer_declarations {'fs_info', 'fs_devices'}

variable_name: devid
first_occurrence: CWE-476 int btrfs_scrub_dev ( struct btrfs_fs_info * fs_info , u64 devid , u64 start , u64 end , struct btrfs_scrub_progress * progress , int readonly , int is_dev_replace )
pointer_declarations {'fs_info', 'progress'}

variable_name: btrfs_find_device
first_occurrence: <S2SV_StartBug> dev = btrfs_find_device ( fs_info -> fs_devices , devid , NULL , NULL ) ;
pointer_declarations {'fs_info'}

Fixed code 1:
if (fs_info == NULL) return;
if (dev == NULL) return;
if (fs_devices == NULL) return;
dev = btrfs_find_device ( fs_info -> fs_devices , devid , NULL , NULL ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4334:

link: https://github.com/torvalds/linux/commit/09ba3bc9dd150457c506e4661380a6183af651c1:

Vulnerability 1:
dev = btrfs_find_device ( fs_info -> fs_devices , devid , NULL , NULL ) ;

variable_name: dev
first_occurrence: struct btrfs_device * dev ;
pointer_declarations {'dev'}

variable_name: fs_devices
first_occurrence: mutex_lock ( & fs_info -> fs_devices -> device_list_mutex ) ;
pointer_declarations {'fs_info', 'fs_devices'}

variable_name: devid
first_occurrence: CWE-476 int btrfs_scrub_progress ( struct btrfs_fs_info * fs_info , u64 devid , struct btrfs_scrub_progress * progress )
pointer_declarations {'fs_info', 'progress'}

variable_name: btrfs_find_device
first_occurrence: <S2SV_StartBug> dev = btrfs_find_device ( fs_info -> fs_devices , devid , NULL , NULL ) ;
pointer_declarations {'fs_info'}

Fixed code 1:
if (fs_info == NULL) return;
if (dev == NULL) return;
if (fs_devices == NULL) return;
dev = btrfs_find_device ( fs_info -> fs_devices , devid , NULL , NULL ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4339:

link: https://github.com/torvalds/linux/commit/0a1d52994d440e21def1c2174932410b4f2a98a1:

Vulnerability 1:
int error ;

variable_name: error
first_occurrence: <S2SV_StartBug> int error ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
error = security_mmap_addr ( address ) ;

variable_name: error
first_occurrence: <S2SV_StartBug> int error ;
pointer_declarations set()

variable_name: security_mmap_addr
first_occurrence: <S2SV_StartBug> error = security_mmap_addr ( address ) ;
pointer_declarations set()

variable_name: address
first_occurrence: CWE-476 int expand_downwards ( struct vm_area_struct * vma , unsigned long address )
pointer_declarations {'vma'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4347:

link: https://github.com/torvalds/linux/commit/0ad646c81b2182f7fa67ec0c8c825e0ee165696d:

Vulnerability 1:
dev_net_set ( dev , net ) ;

variable_name: dev
first_occurrence: struct net_device * dev ;
pointer_declarations {'dev'}

variable_name: dev_net_set
first_occurrence: <S2SV_StartBug> dev_net_set ( dev , net ) ;
pointer_declarations set()

variable_name: net
first_occurrence: CWE-476 static int tun_set_iff ( struct net * net , struct file * file , struct ifreq * ifr )
pointer_declarations {'file', 'net', 'ifr'}

Fixed code 1:
if (dev == NULL) return;
if (net == NULL) return;
dev_net_set ( dev , net ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4348:

link: https://github.com/torvalds/linux/commit/0ad646c81b2182f7fa67ec0c8c825e0ee165696d:

Vulnerability 1:
static int dev_get_valid_name ( struct net * net ,

variable_name: net
first_occurrence: CWE-476 <S2SV_StartBug> static int dev_get_valid_name ( struct net * net , <S2SV_EndBug> struct net_device * dev , const char * name )
pointer_declarations {'dev', 'name', 'net'}

variable_name: dev_get_valid_name
first_occurrence: CWE-476 <S2SV_StartBug> static int dev_get_valid_name ( struct net * net , <S2SV_EndBug> struct net_device * dev , const char * name )
pointer_declarations {'dev', 'name', 'net'}

Fixed code 1:
if (net == NULL) return;
static int dev_get_valid_name ( struct net * net ,

------------------------------------------------------------
476 Vulnerabilities found in row 4494 Validated:

link: https://github.com/gpac/gpac/commit/13dad7d5ef74ca2e6fe4010f5b03eb12e9bbe0ec:

Vulnerability 1:
u8 * output ;

variable_name: u8
first_occurrence: <S2SV_StartBug> u8 * output ;
pointer_declarations {'output'}

variable_name: output
first_occurrence: <S2SV_StartBug> u8 * output ;
pointer_declarations {'output'}

Fixed code 1:
if (output == NULL) return;
u8 * output ;

------------------------------------------------------------
476 Vulnerabilities found in row 4655:

link: https://github.com/heimdal/heimdal/commit/1a6a6e462dc2ac6111f9e02c6852ddec4849b887:

Vulnerability 1:
& r -> client_princ -> name ,

variable_name: name
first_occurrence: kdc_log ( context , config , 5 ,  , pat [ n ] . name , r -> client_name ) ;
pointer_declarations {'r'}

Fixed code 1:
if (r == NULL) return;
if (client_princ == NULL) return;
& r -> client_princ -> name ,

------------------------------------------------------------
Vulnerability 2:
& r -> client_princ -> realm ,

variable_name: realm
first_occurrence: ret = _krb5_principalname2krb5_principal ( context , & r -> server_princ , * ( b -> sname ) , b -> realm ) ;
pointer_declarations {'r', 'b'}

Fixed code 2:
if (r == NULL) return;
if (client_princ == NULL) return;
& r -> client_princ -> realm ,

------------------------------------------------------------
476 Vulnerabilities found in row 4667:

link: https://github.com/torvalds/linux/commit/1b53cf9815bb4744958d41f3795d5d5a1d365e2d:

Vulnerability 1:
struct dentry * dir ;

variable_name: dentry
first_occurrence: CWE-476 static int fscrypt_d_revalidate ( struct dentry * dentry , unsigned int flags )
pointer_declarations {'dentry'}

variable_name: dir
first_occurrence: <S2SV_StartBug> struct dentry * dir ;
pointer_declarations {'dir'}

Fixed code 1:
if (dentry == NULL) return;
if (dir == NULL) return;
struct dentry * dir ;

------------------------------------------------------------
Vulnerability 2:
ci = d_inode ( dir ) -> i_crypt_info ;

variable_name: i_crypt_info
first_occurrence: <S2SV_StartBug> ci = d_inode ( dir ) -> i_crypt_info ;
pointer_declarations set()

variable_name: ci
first_occurrence: <S2SV_EndBug> struct fscrypt_info * ci ;
pointer_declarations {'ci'}

variable_name: dir
first_occurrence: <S2SV_StartBug> struct dentry * dir ;
pointer_declarations {'dir'}

variable_name: d_inode
first_occurrence: if ( ! d_inode ( dir ) -> i_sb -> s_cop -> is_encrypted ( d_inode ( dir ) ) )
pointer_declarations {'i_sb', 's_cop'}

Fixed code 2:
if (ci == NULL) return;
if (dir == NULL) return;
ci = d_inode ( dir ) -> i_crypt_info ;

------------------------------------------------------------
Vulnerability 3:
dir_has_key = ( ci != NULL ) ;

variable_name: ci
first_occurrence: <S2SV_EndBug> struct fscrypt_info * ci ;
pointer_declarations {'ci'}

variable_name: dir_has_key
first_occurrence: int dir_has_key , cached_with_key ;
pointer_declarations set()

Fixed code 3:
if (ci == NULL) return;
dir_has_key = ( ci != NULL ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4668:

link: https://github.com/torvalds/linux/commit/1b53cf9815bb4744958d41f3795d5d5a1d365e2d:

Vulnerability 1:
ret = fscrypt_get_crypt_info ( dir ) ;

variable_name: ret
first_occurrence: int ret = 0 , bigname = 0 ;
pointer_declarations set()

variable_name: fscrypt_get_crypt_info
first_occurrence: <S2SV_StartBug> ret = fscrypt_get_crypt_info ( dir ) ;
pointer_declarations set()

variable_name: dir
first_occurrence: CWE-476 int fscrypt_setup_filename ( struct inode * dir , const struct qstr * iname , int lookup , struct fscrypt_name * fname )
pointer_declarations {'dir', 'iname', 'fname'}

Fixed code 1:
if (dir == NULL) return;
ret = fscrypt_get_crypt_info ( dir ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4669:

link: https://github.com/torvalds/linux/commit/1b53cf9815bb4744958d41f3795d5d5a1d365e2d:

Vulnerability 1:
struct fscrypt_info * ci = inode -> i_crypt_info ;

variable_name: fscrypt_info
first_occurrence: <S2SV_StartBug> struct fscrypt_info * ci = inode -> i_crypt_info ;
pointer_declarations {'inode', 'ci'}

variable_name: i_crypt_info
first_occurrence: <S2SV_StartBug> struct fscrypt_info * ci = inode -> i_crypt_info ;
pointer_declarations {'inode', 'ci'}

variable_name: ci
first_occurrence: <S2SV_StartBug> struct fscrypt_info * ci = inode -> i_crypt_info ;
pointer_declarations {'inode', 'ci'}

Fixed code 1:
if (inode == NULL) return;
if (ci == NULL) return;
struct fscrypt_info * ci = inode -> i_crypt_info ;

------------------------------------------------------------
Vulnerability 2:
if ( ! ci ||

variable_name: ci
first_occurrence: <S2SV_StartBug> struct fscrypt_info * ci = inode -> i_crypt_info ;
pointer_declarations {'inode', 'ci'}

Fixed code 2:
if (ci == NULL) return;
if ( ! ci ||

------------------------------------------------------------
476 Vulnerabilities found in row 4670:

link: https://github.com/torvalds/linux/commit/1b53cf9815bb4744958d41f3795d5d5a1d365e2d:

Vulnerability 1:
key_put ( ci -> ci_keyring_key ) ;

variable_name: key_put
first_occurrence: <S2SV_StartBug> key_put ( ci -> ci_keyring_key ) ;
pointer_declarations {'ci'}

variable_name: ci_keyring_key
first_occurrence: <S2SV_StartBug> key_put ( ci -> ci_keyring_key ) ;
pointer_declarations {'ci'}

Fixed code 1:
if (ci == NULL) return;
key_put ( ci -> ci_keyring_key ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4671:

link: https://github.com/torvalds/linux/commit/1b53cf9815bb4744958d41f3795d5d5a1d365e2d:

Vulnerability 1:
if ( keyring_key -> type != & key_type_logon ) {

variable_name: type
first_occurrence: <S2SV_StartBug> if ( keyring_key -> type != & key_type_logon )
pointer_declarations {'keyring_key'}

variable_name: key_type_logon
first_occurrence: keyring_key = request_key ( & key_type_logon , description , NULL ) ;
pointer_declarations set()

Fixed code 1:
if (keyring_key == NULL) return;
if ( keyring_key -> type != & key_type_logon ) {

------------------------------------------------------------
Vulnerability 2:
down_read ( & keyring_key -> sem ) ;

variable_name: sem
first_occurrence: <S2SV_StartBug> down_read ( & keyring_key -> sem ) ;
pointer_declarations {'keyring_key'}

variable_name: down_read
first_occurrence: <S2SV_StartBug> down_read ( & keyring_key -> sem ) ;
pointer_declarations {'keyring_key'}

Fixed code 2:
if (keyring_key == NULL) return;
down_read ( & keyring_key -> sem ) ;

------------------------------------------------------------
Vulnerability 3:
ukp = user_key_payload ( keyring_key ) ;

variable_name: keyring_key
first_occurrence: struct key * keyring_key ;
pointer_declarations {'keyring_key'}

variable_name: user_key_payload
first_occurrence: const struct user_key_payload * ukp ;
pointer_declarations {'ukp'}

variable_name: ukp
first_occurrence: const struct user_key_payload * ukp ;
pointer_declarations {'ukp'}

Fixed code 3:
if (keyring_key == NULL) return;
if (ukp == NULL) return;
ukp = user_key_payload ( keyring_key ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4677:

link: https://github.com/torvalds/linux/commit/1be9a950c646c9092fb3618197f7b6bfb50e82aa:

Vulnerability 1:
asoc -> peer . i = new -> peer . i ;

variable_name: i
first_occurrence: <S2SV_StartBug> asoc -> peer . i = new -> peer . i ;
pointer_declarations {'asoc', 'new'}

variable_name: peer
first_occurrence: asoc -> peer . rwnd = new -> peer . rwnd ;
pointer_declarations {'asoc', 'new'}

Fixed code 1:
if (asoc == NULL) return;
if (new == NULL) return;
asoc -> peer . i = new -> peer . i ;

------------------------------------------------------------
476 Vulnerabilities found in row 4733:

link: https://github.com/dinhviethoa/libetpan/commit/1fe8fbc032ccda1db9af66d93016b49c16c1f22d:

Vulnerability 1:
cur_token = * indx ;

variable_name: cur_token
first_occurrence: size_t cur_token ;
pointer_declarations set()

variable_name: indx
first_occurrence: CWE-476 static int mailimf_group_parse ( const char * message , size_t length , size_t * indx , struct mailimf_group * * result )
pointer_declarations {'result', 'message', 'indx'}

Fixed code 1:
if (indx == NULL) return;
cur_token = * indx ;

------------------------------------------------------------
Vulnerability 2:
res = r ;

variable_name: r
first_occurrence: int r ;
pointer_declarations set()

variable_name: res
first_occurrence: int res ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4854:

link: https://github.com/jsummers/deark/commit/287f5ac31dfdc074669182f51ece637706070eeb:

Vulnerability 1:
dbuf_copy ( c -> infile , pos + 4 , data_len , d -> iccprofile_file ) ;

variable_name: dbuf_copy
first_occurrence: <S2SV_StartBug> dbuf_copy ( c -> infile , pos + 4 , data_len , d -> iccprofile_file ) ;
pointer_declarations {'c', 'd'}

variable_name: pos
first_occurrence: CWE-476 static void do_iccprofile_item ( deark * c , lctx * d , i64 pos , i64 len )
pointer_declarations {'c', 'd'}

variable_name: iccprofile_file
first_occurrence: dbuf_close ( d -> iccprofile_file ) ;
pointer_declarations {'d'}

variable_name: data_len
first_occurrence: i64 data_len ;
pointer_declarations set()

variable_name: infile
first_occurrence: <S2SV_StartBug> dbuf_copy ( c -> infile , pos + 4 , data_len , d -> iccprofile_file ) ;
pointer_declarations {'c', 'd'}

Fixed code 1:
if (c == NULL) return;
if (d == NULL) return;
dbuf_copy ( c -> infile , pos + 4 , data_len , d -> iccprofile_file ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4894:

link: https://github.com/torvalds/linux/commit/297a6961ffb8ff4dc66c9fbf53b924bd1dda05d5:

Vulnerability 1:
priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;

variable_name: dev
first_occurrence: struct unimac_mdio_pdata * pdata = pdev -> dev . platform_data ;
pointer_declarations {'pdata', 'pdev'}

variable_name: base
first_occurrence: <S2SV_StartBug> priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;
pointer_declarations {'r', 'priv', 'pdev'}

variable_name: resource_size
first_occurrence: <S2SV_StartBug> priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;
pointer_declarations {'r', 'priv', 'pdev'}

variable_name: start
first_occurrence: <S2SV_StartBug> priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;
pointer_declarations {'r', 'priv', 'pdev'}

variable_name: devm_ioremap
first_occurrence: <S2SV_StartBug> priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;
pointer_declarations {'r', 'priv', 'pdev'}

Fixed code 1:
if (r == NULL) return;
if (priv == NULL) return;
if (pdev == NULL) return;
priv -> base = devm_ioremap ( & pdev -> dev , r -> start , resource_size ( r ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 4915:

link: https://github.com/FFmpeg/FFmpeg/commit/2aa9047486dbff12d9e040f917e5f799ed2fd78b:

Vulnerability 1:
mpeg4_decode_profile_level ( s , gb ) ;

variable_name: s
first_occurrence: MpegEncContext * s = & ctx -> m ;
pointer_declarations {'s', 'ctx'}

variable_name: mpeg4_decode_profile_level
first_occurrence: <S2SV_StartBug> mpeg4_decode_profile_level ( s , gb ) ;
pointer_declarations set()

variable_name: gb
first_occurrence: CWE-476 int ff_mpeg4_decode_picture_header ( Mpeg4DecContext * ctx , GetBitContext * gb )
pointer_declarations {'gb', 'ctx'}

Fixed code 1:
if (s == NULL) return;
if (gb == NULL) return;
mpeg4_decode_profile_level ( s , gb ) ;

------------------------------------------------------------
Vulnerability 2:
( s -> avctx -> level > 0 && s -> avctx -> level < 9 ) ) {

variable_name: level
first_occurrence: <S2SV_EndBug> if ( s -> avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO && <S2SV_StartBug> ( s -> avctx -> level > 0 && s -> avctx -> level < 9 ) )
pointer_declarations {'avctx', 's'}

Fixed code 2:
if (avctx == NULL) return;
if (s == NULL) return;
( s -> avctx -> level > 0 && s -> avctx -> level < 9 ) ) {

------------------------------------------------------------
Vulnerability 3:
}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
if ( ! s -> avctx -> bits_per_raw_sample ) {

variable_name: bits_per_raw_sample
first_occurrence: if ( ! s -> studio_profile && s -> avctx -> bits_per_raw_sample != 8 ) s -> avctx -> bits_per_raw_sample = 0 ;
pointer_declarations {'avctx', 's'}

Fixed code 4:
if (avctx == NULL) return;
if (s == NULL) return;
if ( ! s -> avctx -> bits_per_raw_sample ) {

------------------------------------------------------------
476 Vulnerabilities found in row 4916:

link: https://github.com/FFmpeg/FFmpeg/commit/2aa9047486dbff12d9e040f917e5f799ed2fd78b:

Vulnerability 1:
static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb )

variable_name: MpegEncContext
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

variable_name: mpeg4_decode_profile_level
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

variable_name: gb
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

variable_name: s
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

variable_name: GetBitContext
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

Fixed code 1:
if (s == NULL) return;
if (gb == NULL) return;
static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb )

------------------------------------------------------------
Vulnerability 2:
s -> avctx -> level = get_bits ( gb , 4 ) ;

variable_name: level
first_occurrence: <S2SV_StartBug> s -> avctx -> level = get_bits ( gb , 4 ) ;
pointer_declarations {'avctx', 's'}

variable_name: gb
first_occurrence: CWE-476 <S2SV_StartBug> static int mpeg4_decode_profile_level ( MpegEncContext * s , GetBitContext * gb ) <S2SV_EndBug>
pointer_declarations {'s', 'gb'}

variable_name: get_bits
first_occurrence: s -> avctx -> profile = get_bits ( gb , 4 ) ;
pointer_declarations {'avctx', 's'}

Fixed code 2:
if (avctx == NULL) return;
if (s == NULL) return;
if (gb == NULL) return;
s -> avctx -> level = get_bits ( gb , 4 ) ;

------------------------------------------------------------
Vulnerability 3:
if ( s -> avctx -> profile == 0 && s -> avctx -> level == 8 ) {

variable_name: profile
first_occurrence: s -> avctx -> profile = get_bits ( gb , 4 ) ;
pointer_declarations {'avctx', 's'}

variable_name: level
first_occurrence: <S2SV_StartBug> s -> avctx -> level = get_bits ( gb , 4 ) ;
pointer_declarations {'avctx', 's'}

Fixed code 3:
if (avctx == NULL) return;
if (s == NULL) return;
if ( s -> avctx -> profile == 0 && s -> avctx -> level == 8 ) {

------------------------------------------------------------
Vulnerability 4:
s -> avctx -> level = 0 ;

variable_name: level
first_occurrence: <S2SV_StartBug> s -> avctx -> level = get_bits ( gb , 4 ) ;
pointer_declarations {'avctx', 's'}

Fixed code 4:
if (avctx == NULL) return;
if (s == NULL) return;
s -> avctx -> level = 0 ;

------------------------------------------------------------
617 Vulnerabilities found in row 4922:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( ops != NULL )

Fixed code 1:
if (!(ops != NULL)) {
    return;
} 
//assert ( ops != NULL )

------------------------------------------------------------
617 Vulnerabilities found in row 4923:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( ops != NULL )

Fixed code 1:
if (!(ops != NULL)) {
    return;
} 
//assert ( ops != NULL )

assertion 2:
assert ( error == 0 )

Fixed code 2:
if (!(error == 0)) {
    return;
} 
//assert ( error == 0 )

------------------------------------------------------------
617 Vulnerabilities found in row 4924:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( error == 0 )

Fixed code 1:
if (!(error == 0)) {
    return;
} 
//assert ( error == 0 )

------------------------------------------------------------
617 Vulnerabilities found in row 4925:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( bus >= 0 && bus < MAXBUSES )

Fixed code 1:
if (!(bus >= 0 && bus < MAXBUSES)) {
    return;
} 
//assert ( bus >= 0 && bus < MAXBUSES )

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
617 Vulnerabilities found in row 4927:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( 0 )

Fixed code 1:
if (!(0)) {
    return;
} 
//assert ( 0 )

assertion 2:
assert ( idx >= 1 )

Fixed code 2:
if (!(idx >= 1)) {
    return;
} 
//assert ( idx >= 1 )

------------------------------------------------------------
617 Vulnerabilities found in row 4928:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( caplen > 0 )

Fixed code 1:
if (!(caplen > 0)) {
    return;
} 
//assert ( caplen > 0 )

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
617 Vulnerabilities found in row 4930:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( barnum >= 0 && barnum <= PCIR_MAX_BAR_0 )

Fixed code 1:
if (!(barnum >= 0 && barnum <= PCIR_MAX_BAR_0)) {
    return;
} 
//assert ( barnum >= 0 && barnum <= PCIR_MAX_BAR_0 )

assertion 2:
assert ( msgnum >= 1 && msgnum <= MAX_MSIX_TABLE_ENTRIES )

Fixed code 2:
if (!(msgnum >= 1 && msgnum <= MAX_MSIX_TABLE_ENTRIES)) {
    return;
} 
//assert ( msgnum >= 1 && msgnum <= MAX_MSIX_TABLE_ENTRIES )

------------------------------------------------------------
617 Vulnerabilities found in row 4931:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( idx + 1 <= PCI_BARMAX )

Fixed code 1:
if (!(idx + 1 <= PCI_BARMAX)) {
    return;
} 
//assert ( idx + 1 <= PCI_BARMAX )

assertion 2:
assert ( 0 )

Fixed code 2:
if (!(0)) {
    return;
} 
//assert ( 0 )

assertion 3:
assert ( idx >= 0 && idx <= PCI_BARMAX )

Fixed code 3:
if (!(idx >= 0 && idx <= PCI_BARMAX)) {
    return;
} 
//assert ( idx >= 0 && idx <= PCI_BARMAX )

------------------------------------------------------------
617 Vulnerabilities found in row 4932:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( ( size & ( size - 1 )

Fixed code 1:
if (!(size & ( size - 1)) {
    return;
} 
//assert ( ( size & ( size - 1 )

------------------------------------------------------------
617 Vulnerabilities found in row 4933:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( offset >= capoff )

Fixed code 1:
if (!(offset >= capoff)) {
    return;
} 
//assert ( offset >= capoff )

------------------------------------------------------------
617 Vulnerabilities found in row 4934:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( 0 )

Fixed code 1:
if (!(0)) {
    return;
} 
//assert ( 0 )

------------------------------------------------------------
617 Vulnerabilities found in row 4935:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( error == 0 )

Fixed code 1:
if (!(error == 0)) {
    return;
} 
//assert ( error == 0 )

------------------------------------------------------------
617 Vulnerabilities found in row 4936:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( pdi -> bar [ bidx ] . type == PCIBAR_MEM32 || <S2SV_EndBug> <S2SV_StartBug> pdi -> bar [ bidx ] . type == PCIBAR_MEM64 )

Fixed code 1:
if (!(pdi -> bar [ bidx ] . type == PCIBAR_MEM32 || <S2SV_EndBug> <S2SV_StartBug> pdi -> bar [ bidx ] . type == PCIBAR_MEM64)) {
    return;
} 
//assert ( pdi -> bar [ bidx ] . type == PCIBAR_MEM32 || <S2SV_EndBug> <S2SV_StartBug> pdi -> bar [ bidx ] . type == PCIBAR_MEM64 )

assertion 2:
assert ( addr >= pdi -> bar [ bidx ] . addr && addr + size <= pdi -> bar [ bidx ] . addr + pdi -> bar [ bidx ] . size )

Fixed code 2:
if (!(addr >= pdi -> bar [ bidx ] . addr && addr + size <= pdi -> bar [ bidx ] . addr + pdi -> bar [ bidx ] . size)) {
    return;
} 
//assert ( addr >= pdi -> bar [ bidx ] . addr && addr + size <= pdi -> bar [ bidx ] . addr + pdi -> bar [ bidx ] . size )

assertion 3:
assert ( bidx <= PCI_BARMAX )

Fixed code 3:
if (!(bidx <= PCI_BARMAX)) {
    return;
} 
//assert ( bidx <= PCI_BARMAX )

------------------------------------------------------------
617 Vulnerabilities found in row 4937:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( bi != NULL )

Fixed code 1:
if (!(bi != NULL)) {
    return;
} 
//assert ( bi != NULL )

------------------------------------------------------------
617 Vulnerabilities found in row 4938:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( dev -> lintr . pin > 0 )

Fixed code 1:
if (!(dev -> lintr . pin > 0)) {
    return;
} 
//assert ( dev -> lintr . pin > 0 )

------------------------------------------------------------
617 Vulnerabilities found in row 4939:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( dev -> lintr . pin > 0 )

Fixed code 1:
if (!(dev -> lintr . pin > 0)) {
    return;
} 
//assert ( dev -> lintr . pin > 0 )

------------------------------------------------------------
617 Vulnerabilities found in row 4940:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( bi != NULL )

Fixed code 1:
if (!(bi != NULL)) {
    return;
} 
//assert ( bi != NULL )

------------------------------------------------------------
617 Vulnerabilities found in row 4941:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( bi != NULL )

Fixed code 1:
if (!(bi != NULL)) {
    return;
} 
//assert ( bi != NULL )

------------------------------------------------------------
617 Vulnerabilities found in row 4942:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( ii -> ii_ioapic_irq > 0 )

Fixed code 1:
if (!(ii -> ii_ioapic_irq > 0)) {
    return;
} 
//assert ( ii -> ii_ioapic_irq > 0 )

assertion 2:
assert ( ii -> ii_pirq_pin > 0 )

Fixed code 2:
if (!(ii -> ii_pirq_pin > 0)) {
    return;
} 
//assert ( ii -> ii_pirq_pin > 0 )

assertion 3:
assert ( bi != NULL )

Fixed code 3:
if (!(bi != NULL)) {
    return;
} 
//assert ( bi != NULL )

------------------------------------------------------------
617 Vulnerabilities found in row 4943:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( table_entries > 0 )

Fixed code 1:
if (!(table_entries > 0)) {
    return;
} 
//assert ( table_entries > 0 )

assertion 2:
assert ( dev -> msix . table != NULL )

Fixed code 2:
if (!(dev -> msix . table != NULL)) {
    return;
} 
//assert ( dev -> msix . table != NULL )

assertion 3:
assert ( table_entries <= MAX_MSIX_TABLE_ENTRIES )

Fixed code 3:
if (!(table_entries <= MAX_MSIX_TABLE_ENTRIES)) {
    return;
} 
//assert ( table_entries <= MAX_MSIX_TABLE_ENTRIES )

------------------------------------------------------------
617 Vulnerabilities found in row 4944:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( ( msgnum & ( msgnum - 1 )

Fixed code 1:
if (!(msgnum & ( msgnum - 1)) {
    return;
} 
//assert ( ( msgnum & ( msgnum - 1 )

------------------------------------------------------------
617 Vulnerabilities found in row 4945:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( msix_tab_size % 4096 == 0 )

Fixed code 1:
if (!(msix_tab_size % 4096 == 0)) {
    return;
} 
//assert ( msix_tab_size % 4096 == 0 )

------------------------------------------------------------
617 Vulnerabilities found in row 4946:

link: https://github.com/projectacrn/acrn-hypervisor/commit/2b3dedfb9ba13f15887f22b935d373f36c9a59fa:

assertion 1:
assert ( 0 )

Fixed code 1:
if (!(0)) {
    return;
} 
//assert ( 0 )

------------------------------------------------------------
476 Vulnerabilities found in row 4958:

link: https://github.com/wireshark/wireshark/commit/2cb5985bf47bdc8bea78d28483ed224abdd33dc6:

Vulnerability 1:
usb_conv_info -> class_data = u3v_conv_info ;

variable_name: class_data
first_occurrence: u3v_conv_info = ( u3v_conv_info_t * ) usb_conv_info -> class_data ;
pointer_declarations {'usb_conv_info'}

variable_name: u3v_conv_info
first_occurrence: u3v_conv_info_t * u3v_conv_info = NULL ;
pointer_declarations {'u3v_conv_info'}

Fixed code 1:
if (u3v_conv_info == NULL) return;
if (usb_conv_info == NULL) return;
usb_conv_info -> class_data = u3v_conv_info ;

------------------------------------------------------------
476 Vulnerabilities found in row 4959:

link: https://github.com/wireshark/wireshark/commit/2cb5985bf47bdc8bea78d28483ed224abdd33dc6:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4960:

link: https://github.com/wireshark/wireshark/commit/2cb5985bf47bdc8bea78d28483ed224abdd33dc6:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4961:

link: https://github.com/wireshark/wireshark/commit/2cb5985bf47bdc8bea78d28483ed224abdd33dc6:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4983:

link: https://github.com/torvalds/linux/commit/2e7682ebfc750177a4944eeb56e97a3f05734528:

Vulnerability 1:
v4l2_buf = to_vb2_v4l2_buffer ( & vb -> vb . vb2_buf ) ;

variable_name: to_vb2_v4l2_buffer
first_occurrence: <S2SV_StartBug> v4l2_buf = to_vb2_v4l2_buffer ( & vb -> vb . vb2_buf ) ;
pointer_declarations {'vb'}

variable_name: v4l2_buf
first_occurrence: struct vb2_v4l2_buffer * v4l2_buf ;
pointer_declarations {'v4l2_buf'}

variable_name: vb2_buf
first_occurrence: <S2SV_StartBug> v4l2_buf = to_vb2_v4l2_buffer ( & vb -> vb . vb2_buf ) ;
pointer_declarations {'vb'}

Fixed code 1:
if (v4l2_buf == NULL) return;
if (vb == NULL) return;
v4l2_buf = to_vb2_v4l2_buffer ( & vb -> vb . vb2_buf ) ;

------------------------------------------------------------
Vulnerability 2:
if ( ! vb ) {

variable_name: vb
first_occurrence: struct tw5864_buf * vb ;
pointer_declarations {'vb'}

Fixed code 2:
if (vb == NULL) return;
if ( ! vb ) {

------------------------------------------------------------
476 Vulnerabilities found in row 4985:

link: https://github.com/mdadams/jasper/commit/2e82fa00466ae525339754bb3ab0a0474a31d4bd:

Vulnerability 1:
if ( roishift == 0 && bgshift == 0 ) {

variable_name: bgshift
first_occurrence: CWE-476 static void jpc_undo_roi ( jas_matrix_t * x , int roishift , int bgshift , int numbps )
pointer_declarations {'x'}

variable_name: roishift
first_occurrence: CWE-476 static void jpc_undo_roi ( jas_matrix_t * x , int roishift , int bgshift , int numbps )
pointer_declarations {'x'}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
mask = ( 1 << numbps ) - 1 ;

variable_name: mask
first_occurrence: uint_fast32_t mask ;
pointer_declarations set()

variable_name: numbps
first_occurrence: CWE-476 static void jpc_undo_roi ( jas_matrix_t * x , int roishift , int bgshift , int numbps )
pointer_declarations {'x'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 4986:

link: https://github.com/mdadams/jasper/commit/2e82fa00466ae525339754bb3ab0a0474a31d4bd:

Vulnerability 1:
return ( tsfb -> numlvls > 0 ) ? jpc_tsfb_synthesize2 ( tsfb ,

variable_name: jpc_tsfb_synthesize2
first_occurrence: <S2SV_StartBug> return ( tsfb -> numlvls > 0 ) ? jpc_tsfb_synthesize2 ( tsfb , <S2SV_EndBug> jas_seq2d_getref ( a , jas_seq2d_xstart ( a ) , jas_seq2d_ystart ( a ) ) , jas_seq2d_xstart ( a ) , jas_seq2d_ystart ( a ) , jas_seq2d_width ( a ) , jas_seq2d_height ( a ) , jas_seq2d_rowstep ( a ) , tsfb -> numlvls - 1 ) : 0 ;
pointer_declarations {'tsfb'}

variable_name: numlvls
first_occurrence: <S2SV_StartBug> return ( tsfb -> numlvls > 0 ) ? jpc_tsfb_synthesize2 ( tsfb , <S2SV_EndBug> jas_seq2d_getref ( a , jas_seq2d_xstart ( a ) , jas_seq2d_ystart ( a ) ) , jas_seq2d_xstart ( a ) , jas_seq2d_ystart ( a ) , jas_seq2d_width ( a ) , jas_seq2d_height ( a ) , jas_seq2d_rowstep ( a ) , tsfb -> numlvls - 1 ) : 0 ;
pointer_declarations {'tsfb'}

Fixed code 1:
if (tsfb == NULL) return;
return ( tsfb -> numlvls > 0 ) ? jpc_tsfb_synthesize2 ( tsfb ,

------------------------------------------------------------
476 Vulnerabilities found in row 5009:

link: https://github.com/torvalds/linux/commit/2fae9e5a7babada041e2e161699ade2447a01989:

Vulnerability 1:
usb_set_intfdata ( interface , dev ) ;

variable_name: dev
first_occurrence: struct device * idev = & interface -> dev ;
pointer_declarations {'interface', 'idev'}

variable_name: interface
first_occurrence: CWE-476 static int tower_probe ( struct usb_interface * interface , const struct usb_device_id * id )
pointer_declarations {'interface', 'id'}

variable_name: usb_set_intfdata
first_occurrence: <S2SV_StartBug> usb_set_intfdata ( interface , dev ) ;
pointer_declarations set()

Fixed code 1:
if (interface == NULL) return;
usb_set_intfdata ( interface , dev ) ;

------------------------------------------------------------
Vulnerability 2:
exit :

variable_name: exit
first_occurrence: if ( ! dev ) goto exit ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5012:

link: https://github.com/libgit2/libgit2/commit/2fdef641fd0dd2828bd948234ae86de75221a11a:

Vulnerability 1:
* head = NULL ;

variable_name: head
first_occurrence: CWE-476 int git_pkt_parse_line ( git_pkt * * head , const char * line , const char * * out , size_t bufflen )
pointer_declarations {'line', 'head', 'out'}

Fixed code 1:
if (head == NULL) return;
* head = NULL ;

------------------------------------------------------------
476 Vulnerabilities found in row 5013:

link: https://github.com/libgit2/libgit2/commit/2fdef641fd0dd2828bd948234ae86de75221a11a:

Vulnerability 1:
if ( pkt == NULL )

variable_name: pkt
first_occurrence: git_pkt * pkt ;
pointer_declarations {'pkt'}

Fixed code 1:
if (pkt == NULL) return;
if ( pkt == NULL )

------------------------------------------------------------
476 Vulnerabilities found in row 5014:

link: https://github.com/libgit2/libgit2/commit/2fdef641fd0dd2828bd948234ae86de75221a11a:

Vulnerability 1:
error = 0 ;

variable_name: error
first_occurrence: int error , recvd ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5030:

link: https://github.com/bitlbee/bitlbee/commit/30d598ce7cd3f136ee9d7097f39fa9818a272441:

Vulnerability 1:
px -> ft -> data = px ;

variable_name: data
first_occurrence: CWE-476 static gboolean prplcb_xfer_new_send_cb ( gpointer data , gint fd , b_input_condition cond )
pointer_declarations set()

Fixed code 1:
if (ft == NULL) return;
if (px == NULL) return;
px -> ft -> data = px ;

------------------------------------------------------------
476 Vulnerabilities found in row 5034:

link: https://github.com/VirusTotal/yara/commit/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4:

Vulnerability 1:
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

variable_name: yyerror
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

variable_name: yyscanner
first_occurrence: struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;
pointer_declarations {'yyscanner', 'yyg'}

variable_name: lex_env
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

Fixed code 1:
if (yyscanner == NULL) return;
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

------------------------------------------------------------
Vulnerability 2:
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

variable_name: yyerror
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

variable_name: yyscanner
first_occurrence: struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;
pointer_declarations {'yyscanner', 'yyg'}

variable_name: lex_env
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

Fixed code 2:
if (yyscanner == NULL) return;
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

------------------------------------------------------------
Vulnerability 3:
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

variable_name: yyerror
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

variable_name: yyscanner
first_occurrence: struct yyguts_t * yyg = ( struct yyguts_t * ) yyscanner ;
pointer_declarations {'yyscanner', 'yyg'}

variable_name: lex_env
first_occurrence: yyerror ( yyscanner , lex_env ,  ) ;
pointer_declarations set()

Fixed code 3:
if (yyscanner == NULL) return;
yyerror ( yyscanner , lex_env , "unexpected<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer" ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5035:

link: https://github.com/VirusTotal/yara/commit/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4:

Vulnerability 1:
if ( text [ 1 ] == EOF )

variable_name: text
first_occurrence: char text [ 4 ] =
pointer_declarations set()

variable_name: EOF
first_occurrence: <S2SV_StartBug> if ( text [ 1 ] == EOF ) <S2SV_EndBug> return 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( text [ 2 ] == EOF )

variable_name: text
first_occurrence: char text [ 4 ] =
pointer_declarations set()

variable_name: EOF
first_occurrence: <S2SV_StartBug> if ( text [ 1 ] == EOF ) <S2SV_EndBug> return 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( text [ 3 ] == EOF )

variable_name: text
first_occurrence: char text [ 4 ] =
pointer_declarations set()

variable_name: EOF
first_occurrence: <S2SV_StartBug> if ( text [ 1 ] == EOF ) <S2SV_EndBug> return 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5036:

link: https://github.com/VirusTotal/yara/commit/3119b232c9c453c98d8fa8b6ae4e37ba18117cd4:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5072:

link: https://github.com/LibVNC/libvncserver/commit/33441d90a506d5f3ae9388f2752901227e430553:

Vulnerability 1:
uint8_t verify_crls = cred -> x509Credential . x509CrlVerifyMode ;

variable_name: x509CrlVerifyMode
first_occurrence: <S2SV_StartBug> uint8_t verify_crls = cred -> x509Credential . x509CrlVerifyMode ;
pointer_declarations {'cred'}

variable_name: x509Credential
first_occurrence: <S2SV_StartBug> uint8_t verify_crls = cred -> x509Credential . x509CrlVerifyMode ;
pointer_declarations {'cred'}

variable_name: verify_crls
first_occurrence: <S2SV_StartBug> uint8_t verify_crls = cred -> x509Credential . x509CrlVerifyMode ;
pointer_declarations {'cred'}

variable_name: uint8_t
first_occurrence: <S2SV_StartBug> uint8_t verify_crls = cred -> x509Credential . x509CrlVerifyMode ;
pointer_declarations {'cred'}

Fixed code 1:
if (cred == NULL) return;
uint8_t verify_crls = cred -> x509Credential . x509CrlVerifyMode ;

------------------------------------------------------------
Vulnerability 2:
{

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5082:

link: https://github.com/torvalds/linux/commit/340d394a789518018f834ff70f7534fc463d3226:

Vulnerability 1:
if ( likely ( port -> exists && ! filtered ) )

variable_name: filtered
first_occurrence: bool filtered ;
pointer_declarations set()

variable_name: exists
first_occurrence: serio = port -> exists ? port -> serio : NULL ;
pointer_declarations {'port'}

variable_name: likely
first_occurrence: <S2SV_StartBug> if ( likely ( port -> exists && ! filtered ) ) <S2SV_EndBug> serio_interrupt ( serio , data , dfl ) ;
pointer_declarations {'port'}

Fixed code 1:
if (port == NULL) return;
if ( likely ( port -> exists && ! filtered ) )

------------------------------------------------------------
476 Vulnerabilities found in row 5083:

link: https://github.com/torvalds/linux/commit/340d394a789518018f834ff70f7534fc463d3226:

Vulnerability 1:
port -> exists = true ;

variable_name: exists
first_occurrence: <S2SV_StartBug> port -> exists = true ;
pointer_declarations {'port'}

Fixed code 1:
if (port == NULL) return;
port -> exists = true ;

------------------------------------------------------------
Vulnerability 2:
mb ( ) ;

variable_name: mb
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> mb ( ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5084:

link: https://github.com/torvalds/linux/commit/340d394a789518018f834ff70f7534fc463d3226:

Vulnerability 1:
port -> exists = false ;

variable_name: exists
first_occurrence: <S2SV_StartBug> port -> exists = false ;
pointer_declarations {'port'}

Fixed code 1:
if (port == NULL) return;
port -> exists = false ;

------------------------------------------------------------
Vulnerability 2:
port -> serio = NULL ;

variable_name: serio
first_occurrence: CWE-476 static void i8042_stop ( struct serio * serio )
pointer_declarations {'serio'}

Fixed code 2:
if (port == NULL) return;
if (serio == NULL) return;
port -> serio = NULL ;

------------------------------------------------------------
476 Vulnerabilities found in row 5094:

link: https://github.com/torvalds/linux/commit/34b2cef20f19c87999fff3da4071e66937db9644:

Vulnerability 1:
skb_dst_drop ( skb ) ;

variable_name: skb_dst_drop
first_occurrence: <S2SV_StartBug> skb_dst_drop ( skb ) ;
pointer_declarations set()

variable_name: skb
first_occurrence: CWE-476 void ipv4_pktinfo_prepare ( const struct sock * sk , struct sk_buff * skb )
pointer_declarations {'sk', 'skb'}

Fixed code 1:
if (skb == NULL) return;
skb_dst_drop ( skb ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5148:

link: https://github.com/torvalds/linux/commit/371528caec553785c37f73fa3926ea0de84f986f:

Vulnerability 1:
BUG_ON ( ! thresholds ) ;

variable_name: BUG_ON
first_occurrence: <S2SV_StartBug> BUG_ON ( ! thresholds ) ;
pointer_declarations set()

variable_name: thresholds
first_occurrence: struct mem_cgroup_thresholds * thresholds ;
pointer_declarations {'thresholds'}

Fixed code 1:
if (thresholds == NULL) return;
BUG_ON ( ! thresholds ) ;

------------------------------------------------------------
Vulnerability 2:
mutex_unlock ( & memcg -> thresholds_lock ) ;

variable_name: thresholds_lock
first_occurrence: mutex_lock ( & memcg -> thresholds_lock ) ;
pointer_declarations {'memcg'}

variable_name: mutex_unlock
first_occurrence: <S2SV_StartBug> mutex_unlock ( & memcg -> thresholds_lock ) ;
pointer_declarations {'memcg'}

Fixed code 2:
if (memcg == NULL) return;
mutex_unlock ( & memcg -> thresholds_lock ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5153:

link: https://github.com/torvalds/linux/commit/37863c43b2c6464f252862bf2e9768264e961678:

Vulnerability 1:
ret = key_permission ( key_ref , KEY_NEED_READ ) ;

variable_name: key_ref
first_occurrence: key_ref_t key_ref ;
pointer_declarations set()

variable_name: ret
first_occurrence: long ret ;
pointer_declarations set()

variable_name: key_permission
first_occurrence: <S2SV_StartBug> ret = key_permission ( key_ref , KEY_NEED_READ ) ;
pointer_declarations set()

variable_name: KEY_NEED_READ
first_occurrence: <S2SV_StartBug> ret = key_permission ( key_ref , KEY_NEED_READ ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5164:

link: https://github.com/torvalds/linux/commit/385097a3675749cbc9e97c085c0e5dfe4269ca51:

Vulnerability 1:
if ( ! info -> attrs [ NFC_ATTR_DEVICE_INDEX ] )

variable_name: NFC_ATTR_DEVICE_INDEX
first_occurrence: <S2SV_StartBug> if ( ! info -> attrs [ NFC_ATTR_DEVICE_INDEX ] ) <S2SV_EndBug> return - EINVAL ;
pointer_declarations {'info'}

variable_name: attrs
first_occurrence: <S2SV_StartBug> if ( ! info -> attrs [ NFC_ATTR_DEVICE_INDEX ] ) <S2SV_EndBug> return - EINVAL ;
pointer_declarations {'info'}

Fixed code 1:
if (info == NULL) return;
if ( ! info -> attrs [ NFC_ATTR_DEVICE_INDEX ] )

------------------------------------------------------------
476 Vulnerabilities found in row 5167:

link: https://github.com/xkbcommon/libxkbcommon/commit/38e1766bc6e20108948aec8a0b222a4bad0254e9:

Vulnerability 1:
return true ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5168:

link: https://github.com/LibVNC/libvncserver/commit/38e98ee61d74f5f5ab4aa4c77146faad1962d6d0:

Vulnerability 1:
sraSpanInsertAfter ( sraSpan * newspan , sraSpan * after ) {

variable_name: newspan
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanInsertAfter ( sraSpan * newspan , sraSpan * after )
pointer_declarations {'newspan', 'after'}

variable_name: after
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanInsertAfter ( sraSpan * newspan , sraSpan * after )
pointer_declarations {'newspan', 'after'}

variable_name: sraSpanInsertAfter
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanInsertAfter ( sraSpan * newspan , sraSpan * after )
pointer_declarations {'newspan', 'after'}

variable_name: sraSpan
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanInsertAfter ( sraSpan * newspan , sraSpan * after )
pointer_declarations {'newspan', 'after'}

Fixed code 1:
if (newspan == NULL) return;
if (after == NULL) return;
sraSpanInsertAfter ( sraSpan * newspan , sraSpan * after ) {

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5169:

link: https://github.com/LibVNC/libvncserver/commit/38e98ee61d74f5f5ab4aa4c77146faad1962d6d0:

Vulnerability 1:
sraSpanInsertBefore ( sraSpan * newspan , sraSpan * before ) {

variable_name: newspan
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanInsertBefore ( sraSpan * newspan , sraSpan * before )
pointer_declarations {'newspan', 'before'}

variable_name: before
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanInsertBefore ( sraSpan * newspan , sraSpan * before )
pointer_declarations {'newspan', 'before'}

variable_name: sraSpanInsertBefore
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanInsertBefore ( sraSpan * newspan , sraSpan * before )
pointer_declarations {'newspan', 'before'}

variable_name: sraSpan
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanInsertBefore ( sraSpan * newspan , sraSpan * before )
pointer_declarations {'newspan', 'before'}

Fixed code 1:
if (newspan == NULL) return;
if (before == NULL) return;
sraSpanInsertBefore ( sraSpan * newspan , sraSpan * before ) {

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5170:

link: https://github.com/LibVNC/libvncserver/commit/38e98ee61d74f5f5ab4aa4c77146faad1962d6d0:

Vulnerability 1:
sraSpanRemove ( sraSpan * span ) {

variable_name: sraSpanRemove
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanRemove ( sraSpan * span )
pointer_declarations {'span'}

variable_name: span
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanRemove ( sraSpan * span )
pointer_declarations {'span'}

variable_name: sraSpan
first_occurrence: CWE-476 static void <S2SV_StartBug> sraSpanRemove ( sraSpan * span )
pointer_declarations {'span'}

Fixed code 1:
if (span == NULL) return;
sraSpanRemove ( sraSpan * span ) {

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5171:

link: https://github.com/LibVNC/libvncserver/commit/38e98ee61d74f5f5ab4aa4c77146faad1962d6d0:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5172:

link: https://github.com/LibVNC/libvncserver/commit/38e98ee61d74f5f5ab4aa4c77146faad1962d6d0:

Vulnerability 1:
if ( iterator -> next ) rfbDecrClientRef ( iterator -> next ) ;

variable_name: rfbDecrClientRef
first_occurrence: <S2SV_StartBug> if ( iterator -> next ) rfbDecrClientRef ( iterator -> next ) ;
pointer_declarations {'iterator'}

variable_name: next
first_occurrence: <S2SV_StartBug> if ( iterator -> next ) rfbDecrClientRef ( iterator -> next ) ;
pointer_declarations {'iterator'}

Fixed code 1:
if (iterator == NULL) return;
if ( iterator -> next ) rfbDecrClientRef ( iterator -> next ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5174:

link: https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35:

Vulnerability 1:
if ( pSubSrc -> nSrc > 1 || isAgg || IsVirtual ( pSubSrc -> a [ 0 ] . pTab ) ) {

variable_name: isAgg
first_occurrence: CWE-476 static int flattenSubquery ( Parse * pParse , Select * p , int iFrom , int isAgg )
pointer_declarations {'pParse', 'p'}

variable_name: nSrc
first_occurrence: assert ( pSrc && iFrom >= 0 && iFrom < pSrc -> nSrc ) ;
pointer_declarations {'pSrc'}

variable_name: a
first_occurrence: pSubitem = & pSrc -> a [ iFrom ] ;
pointer_declarations {'pSrc'}

variable_name: pTab
first_occurrence: <S2SV_StartBug> if ( pSubSrc -> nSrc > 1 || isAgg || IsVirtual ( pSubSrc -> a [ 0 ] . pTab ) )
pointer_declarations {'pSubSrc'}

variable_name: IsVirtual
first_occurrence: <S2SV_StartBug> if ( pSubSrc -> nSrc > 1 || isAgg || IsVirtual ( pSubSrc -> a [ 0 ] . pTab ) )
pointer_declarations {'pSubSrc'}

Fixed code 1:
if (pSubSrc == NULL) return;
if ( pSubSrc -> nSrc > 1 || isAgg || IsVirtual ( pSubSrc -> a [ 0 ] . pTab ) ) {

------------------------------------------------------------
369 Vulnerabilities found in row 5179:

link: https://github.com/FFmpeg/FFmpeg/commit/3a2d21bc5f97aa0161db3ae731fc2732be6108b8:

Vulnerability 1:
if ( trk -> vos_len == 0 && par -> extradata_size > 0 &&

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5197 Validated:

link: https://github.com/gpac/gpac/commit/3b84ffcbacf144ce35650df958432f472b6483f8:

Vulnerability 1:
if ( ! seig_entry -> key_info [ 0 ] )

variable_name: key_info
first_occurrence: CWE-476 void gf_isom_cenc_get_default_info_internal ( GF_TrackBox * trak , u32 sampleDescriptionIndex , u32 * container_type , Bool * default_IsEncrypted , u8 * crypt_byte_block , u8 * skip_byte_block , const u8 * * key_info , u32 * key_info_size )
pointer_declarations {'skip_byte_block', 'key_info_size', 'container_type', 'trak', 'key_info', 'default_IsEncrypted', 'crypt_byte_block'}

Fixed code 1:
if (key_info == NULL) return;
if (seig_entry == NULL) return;
if ( ! seig_entry -> key_info [ 0 ] )

------------------------------------------------------------
369 Vulnerabilities found in row 5212:

link: https://github.com/vadz/libtiff/commit/3c5eb8b1be544e41d2c336191bc4936300ad7543:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 5213:

link: https://github.com/vadz/libtiff/commit/3c5eb8b1be544e41d2c336191bc4936300ad7543:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 5214:

link: https://github.com/vadz/libtiff/commit/3c5eb8b1be544e41d2c336191bc4936300ad7543:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5292:

link: https://github.com/jasper-software/jasper/commit/41f214b121b837fa30d9ca5f2430212110f5cd9b:

Vulnerability 1:
jas_eprintf ( "warning:<S2SV_blank>number<S2SV_blank>of<S2SV_blank>components<S2SV_blank>mismatch\\n" ) ;

variable_name: jas_eprintf
first_occurrence: jas_eprintf (  ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
jas_eprintf ( "warning:<S2SV_blank>component<S2SV_blank>data<S2SV_blank>type<S2SV_blank>mismatch<S2SV_blank>(IHDR)\\n" ) ;

variable_name: jas_eprintf
first_occurrence: jas_eprintf (  ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
dec -> image ) ) ) {

variable_name: image
first_occurrence: jas_image_t * image ;
pointer_declarations {'image'}

Fixed code 3:
if (image == NULL) return;
if (dec == NULL) return;
dec -> image ) ) ) {

------------------------------------------------------------
Vulnerability 4:
jas_eprintf ( "warning:<S2SV_blank>component<S2SV_blank>data<S2SV_blank>type<S2SV_blank>mismatch<S2SV_blank>(BPCC)\\n" ) ;

variable_name: jas_eprintf
first_occurrence: jas_eprintf (  ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5296:

link: https://github.com/torvalds/linux/commit/42cb14b110a5698ccf26ce59c4441722605a3743:

Vulnerability 1:
if ( PageDirty ( page ) ) {

variable_name: PageDirty
first_occurrence: <S2SV_StartBug> if ( PageDirty ( page ) )
pointer_declarations set()

variable_name: page
first_occurrence: CWE-476 void migrate_page_copy ( struct page * newpage , struct page * page )
pointer_declarations {'page', 'newpage'}

Fixed code 1:
if (page == NULL) return;
if ( PageDirty ( page ) ) {

------------------------------------------------------------
Vulnerability 2:
else

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5297:

link: https://github.com/torvalds/linux/commit/42cb14b110a5698ccf26ce59c4441722605a3743:

Vulnerability 1:
int expected_count = 1 + extra_count ;

variable_name: expected_count
first_occurrence: <S2SV_StartBug> int expected_count = 1 + extra_count ;
pointer_declarations set()

variable_name: extra_count
first_occurrence: CWE-476 int migrate_page_move_mapping ( struct address_space * mapping , struct page * newpage , struct page * page , struct buffer_head * head , enum migrate_mode mode , int extra_count )
pointer_declarations {'mapping', 'page', 'head', 'newpage'}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
radix_tree_replace_slot ( pslot , newpage ) ;

variable_name: pslot
first_occurrence: <S2SV_EndBug> void * * pslot ;
pointer_declarations {'pslot'}

variable_name: radix_tree_replace_slot
first_occurrence: <S2SV_StartBug> radix_tree_replace_slot ( pslot , newpage ) ;
pointer_declarations set()

variable_name: newpage
first_occurrence: CWE-476 int migrate_page_move_mapping ( struct address_space * mapping , struct page * newpage , struct page * page , struct buffer_head * head , enum migrate_mode mode , int extra_count )
pointer_declarations {'mapping', 'page', 'head', 'newpage'}

Fixed code 3:
if (pslot == NULL) return;
if (newpage == NULL) return;
radix_tree_replace_slot ( pslot , newpage ) ;

------------------------------------------------------------
Vulnerability 4:
__dec_zone_page_state ( page , NR_FILE_PAGES ) ;

variable_name: NR_FILE_PAGES
first_occurrence: <S2SV_StartBug> __dec_zone_page_state ( page , NR_FILE_PAGES ) ;
pointer_declarations set()

variable_name: page
first_occurrence: CWE-476 int migrate_page_move_mapping ( struct address_space * mapping , struct page * newpage , struct page * page , struct buffer_head * head , enum migrate_mode mode , int extra_count )
pointer_declarations {'mapping', 'page', 'head', 'newpage'}

variable_name: __dec_zone_page_state
first_occurrence: <S2SV_StartBug> __dec_zone_page_state ( page , NR_FILE_PAGES ) ;
pointer_declarations set()

Fixed code 4:
if (page == NULL) return;
__dec_zone_page_state ( page , NR_FILE_PAGES ) ;

------------------------------------------------------------
Vulnerability 5:
__inc_zone_page_state ( newpage , NR_FILE_PAGES ) ;

variable_name: NR_FILE_PAGES
first_occurrence: <S2SV_StartBug> __dec_zone_page_state ( page , NR_FILE_PAGES ) ;
pointer_declarations set()

variable_name: __inc_zone_page_state
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> __inc_zone_page_state ( newpage , NR_FILE_PAGES ) ;
pointer_declarations set()

variable_name: newpage
first_occurrence: CWE-476 int migrate_page_move_mapping ( struct address_space * mapping , struct page * newpage , struct page * page , struct buffer_head * head , enum migrate_mode mode , int extra_count )
pointer_declarations {'mapping', 'page', 'head', 'newpage'}

Fixed code 5:
if (newpage == NULL) return;
__inc_zone_page_state ( newpage , NR_FILE_PAGES ) ;

------------------------------------------------------------
Vulnerability 6:
if ( ! PageSwapCache ( page ) && PageSwapBacked ( page ) ) {

variable_name: page
first_occurrence: CWE-476 int migrate_page_move_mapping ( struct address_space * mapping , struct page * newpage , struct page * page , struct buffer_head * head , enum migrate_mode mode , int extra_count )
pointer_declarations {'mapping', 'page', 'head', 'newpage'}

variable_name: PageSwapCache
first_occurrence: if ( PageSwapCache ( page ) )
pointer_declarations set()

variable_name: PageSwapBacked
first_occurrence: if ( PageSwapBacked ( page ) ) SetPageSwapBacked ( newpage ) ;
pointer_declarations set()

Fixed code 6:
if (page == NULL) return;
if ( ! PageSwapCache ( page ) && PageSwapBacked ( page ) ) {

------------------------------------------------------------
369 Vulnerabilities found in row 5313 Validated:

link: https://github.com/vadz/libtiff/commit/438274f938e046d33cb0e1230b41da32ffe223e1:

Vulnerability 1:
stripsperplane = ( ( td -> td_imagelength + rowsperstrip - 1 ) / rowsperstrip ) ;

divisor: rowsperstrip 
Fixed code 1:
if (rowsperstrip  == 0) {fprintf(stderr, "Error: Division by zero in operation\n"); return -1;}
stripsperplane = ( ( td -> td_imagelength + rowsperstrip - 1 ) / rowsperstrip ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5378:

link: https://github.com/torvalds/linux/commit/485b06aadb933190f4bc44e006076bc27a23f205:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
alt = & gspca_dev -> dev -> actconfig -> intf_cache [ 0 ] -> altsetting [ 1 ] ;

variable_name: alt
first_occurrence: <S2SV_EndBug> struct usb_host_interface * alt ;
pointer_declarations {'alt'}

variable_name: altsetting
first_occurrence: <S2SV_StartBug> alt = & gspca_dev -> dev -> actconfig -> intf_cache [ 0 ] -> altsetting [ 1 ] ;
pointer_declarations {'dev', 'gspca_dev', 'actconfig'}

variable_name: intf_cache
first_occurrence: <S2SV_StartBug> alt = & gspca_dev -> dev -> actconfig -> intf_cache [ 0 ] -> altsetting [ 1 ] ;
pointer_declarations {'dev', 'gspca_dev', 'actconfig'}

Fixed code 2:
if (dev == NULL) return;
if (alt == NULL) return;
if (gspca_dev == NULL) return;
if (actconfig == NULL) return;
alt = & gspca_dev -> dev -> actconfig -> intf_cache [ 0 ] -> altsetting [ 1 ] ;

------------------------------------------------------------
476 Vulnerabilities found in row 5379:

link: https://github.com/torvalds/linux/commit/485b06aadb933190f4bc44e006076bc27a23f205:

Vulnerability 1:
packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;

variable_name: le16_to_cpu
first_occurrence: <S2SV_StartBug> packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

variable_name: wMaxPacketSize
first_occurrence: <S2SV_StartBug> packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

variable_name: packet_size
first_occurrence: int err , packet_size ;
pointer_declarations set()

variable_name: endpoint
first_occurrence: <S2SV_StartBug> packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

variable_name: desc
first_occurrence: <S2SV_StartBug> packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

Fixed code 1:
if (alt == NULL) return;
packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5380:

link: https://github.com/torvalds/linux/commit/485b06aadb933190f4bc44e006076bc27a23f205:

Vulnerability 1:
if ( ! alt )

variable_name: alt
first_occurrence: struct usb_host_interface * alt ;
pointer_declarations {'alt'}

Fixed code 1:
if (alt == NULL) return;
if ( ! alt )

------------------------------------------------------------
476 Vulnerabilities found in row 5387:

link: https://github.com/torvalds/linux/commit/48a992727d82cb7db076fa15d372178743b1f4cd:

Vulnerability 1:
static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type ,

variable_name: type
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: rtattr
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: mcryptd_check_internal
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: u32
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: tb
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

Fixed code 1:
if (type == NULL) return;
if (tb == NULL) return;
static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type ,

------------------------------------------------------------
Vulnerability 2:
return ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( ( algt -> type & CRYPTO_ALG_INTERNAL ) )

variable_name: type
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: CRYPTO_ALG_INTERNAL
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> if ( ( algt -> type & CRYPTO_ALG_INTERNAL ) ) <S2SV_EndBug> * type |= CRYPTO_ALG_INTERNAL ;
pointer_declarations {'type', 'algt'}

Fixed code 3:
if (type == NULL) return;
if (algt == NULL) return;
if ( ( algt -> type & CRYPTO_ALG_INTERNAL ) )

------------------------------------------------------------
Vulnerability 4:
if ( ( algt -> mask & CRYPTO_ALG_INTERNAL ) )

variable_name: mask
first_occurrence: CWE-476 <S2SV_StartBug> static inline void mcryptd_check_internal ( struct rtattr * * tb , u32 * type , <S2SV_EndBug> u32 * mask )
pointer_declarations {'type', 'mask', 'tb'}

variable_name: CRYPTO_ALG_INTERNAL
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> if ( ( algt -> type & CRYPTO_ALG_INTERNAL ) ) <S2SV_EndBug> * type |= CRYPTO_ALG_INTERNAL ;
pointer_declarations {'type', 'algt'}

Fixed code 4:
if (mask == NULL) return;
if (algt == NULL) return;
if ( ( algt -> mask & CRYPTO_ALG_INTERNAL ) )

------------------------------------------------------------
476 Vulnerabilities found in row 5388:

link: https://github.com/torvalds/linux/commit/48a992727d82cb7db076fa15d372178743b1f4cd:

Vulnerability 1:
mcryptd_check_internal ( tb , & type , & mask ) ;

variable_name: type
first_occurrence: u32 type = 0 ;
pointer_declarations set()

variable_name: mask
first_occurrence: u32 mask = 0 ;
pointer_declarations set()

variable_name: mcryptd_check_internal
first_occurrence: <S2SV_StartBug> mcryptd_check_internal ( tb , & type , & mask ) ;
pointer_declarations set()

variable_name: tb
first_occurrence: CWE-476 static int mcryptd_create_hash ( struct crypto_template * tmpl , struct rtattr * * tb , struct mcryptd_queue * queue )
pointer_declarations {'queue', 'tmpl', 'tb'}

Fixed code 1:
if (tb == NULL) return;
mcryptd_check_internal ( tb , & type , & mask ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5391:

link: https://github.com/torvalds/linux/commit/4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6:

Vulnerability 1:
struct address_space * mapping = page -> mapping ;

variable_name: mapping
first_occurrence: <S2SV_StartBug> struct address_space * mapping = page -> mapping ;
pointer_declarations {'mapping', 'page'}

variable_name: address_space
first_occurrence: <S2SV_StartBug> struct address_space * mapping = page -> mapping ;
pointer_declarations {'mapping', 'page'}

Fixed code 1:
if (mapping == NULL) return;
if (page == NULL) return;
struct address_space * mapping = page -> mapping ;

------------------------------------------------------------
476 Vulnerabilities found in row 5392:

link: https://github.com/torvalds/linux/commit/4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6:

Vulnerability 1:
page -> index ,

variable_name: index
first_occurrence: if ( add_to_page_cache_lru ( page , mapping , <S2SV_StartBug> page -> index , <S2SV_EndBug> readahead_gfp_mask ( mapping ) ) ) goto next_page ;
pointer_declarations {'page'}

Fixed code 1:
if (page == NULL) return;
page -> index ,

------------------------------------------------------------
476 Vulnerabilities found in row 5393:

link: https://github.com/torvalds/linux/commit/4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6:

Vulnerability 1:
struct inode * inode = page -> mapping -> host ;

variable_name: inode
first_occurrence: <S2SV_StartBug> struct inode * inode = page -> mapping -> host ;
pointer_declarations {'inode', 'page', 'mapping'}

variable_name: host
first_occurrence: <S2SV_StartBug> struct inode * inode = page -> mapping -> host ;
pointer_declarations {'inode', 'page', 'mapping'}

Fixed code 1:
if (mapping == NULL) return;
if (page == NULL) return;
if (inode == NULL) return;
struct inode * inode = page -> mapping -> host ;

------------------------------------------------------------
Vulnerability 2:
ret = f2fs_mpage_readpages ( page -> mapping , NULL , page , 1 , false ) ;

variable_name: mapping
first_occurrence: <S2SV_StartBug> struct inode * inode = page -> mapping -> host ;
pointer_declarations {'inode', 'page', 'mapping'}

variable_name: ret
first_occurrence: <S2SV_EndBug> int ret = - EAGAIN ;
pointer_declarations set()

variable_name: f2fs_mpage_readpages
first_occurrence: if ( ret == - EAGAIN ) <S2SV_StartBug> ret = f2fs_mpage_readpages ( page -> mapping , NULL , page , 1 , false ) ;
pointer_declarations {'page'}

Fixed code 2:
if (mapping == NULL) return;
if (page == NULL) return;
ret = f2fs_mpage_readpages ( page -> mapping , NULL , page , 1 , false ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5394:

link: https://github.com/torvalds/linux/commit/4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6:

Vulnerability 1:
block_in_file = ( sector_t ) page -> index ;

variable_name: index
first_occurrence: <S2SV_StartBug> block_in_file = ( sector_t ) page -> index ;
pointer_declarations {'page'}

variable_name: sector_t
first_occurrence: CWE-476 static int f2fs_read_single_page ( struct inode * inode , struct page * page , unsigned nr_pages , struct f2fs_map_blocks * map , struct bio * * bio_ret , sector_t * last_block_in_bio , bool is_readahead )
pointer_declarations {'last_block_in_bio', 'inode', 'map', 'bio_ret', 'page'}

variable_name: block_in_file
first_occurrence: sector_t block_in_file ;
pointer_declarations set()

Fixed code 1:
if (page == NULL) return;
block_in_file = ( sector_t ) page -> index ;

------------------------------------------------------------
Vulnerability 2:
if ( ! PageUptodate ( page ) && ! cleancache_get_page ( page ) ) {

variable_name: page
first_occurrence: CWE-476 static int f2fs_read_single_page ( struct inode * inode , struct page * page , unsigned nr_pages , struct f2fs_map_blocks * map , struct bio * * bio_ret , sector_t * last_block_in_bio , bool is_readahead )
pointer_declarations {'last_block_in_bio', 'inode', 'map', 'bio_ret', 'page'}

variable_name: cleancache_get_page
first_occurrence: <S2SV_StartBug> if ( ! PageUptodate ( page ) && ! cleancache_get_page ( page ) )
pointer_declarations set()

variable_name: PageUptodate
first_occurrence: <S2SV_StartBug> if ( ! PageUptodate ( page ) && ! cleancache_get_page ( page ) )
pointer_declarations set()

Fixed code 2:
if (page == NULL) return;
if ( ! PageUptodate ( page ) && ! cleancache_get_page ( page ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 5395:

link: https://github.com/torvalds/linux/commit/4969c06a0d83c9c3dc50b8efcdc8eeedfce896f6:

Vulnerability 1:
struct address_space * mapping = page -> mapping ;

variable_name: mapping
first_occurrence: <S2SV_StartBug> struct address_space * mapping = page -> mapping ;
pointer_declarations {'mapping', 'page'}

variable_name: address_space
first_occurrence: <S2SV_StartBug> struct address_space * mapping = page -> mapping ;
pointer_declarations {'mapping', 'page'}

Fixed code 1:
if (mapping == NULL) return;
if (page == NULL) return;
struct address_space * mapping = page -> mapping ;

------------------------------------------------------------
Vulnerability 2:
struct inode * inode = mapping -> host ;

variable_name: inode
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> struct inode * inode = mapping -> host ;
pointer_declarations {'inode', 'mapping'}

variable_name: host
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> struct inode * inode = mapping -> host ;
pointer_declarations {'inode', 'mapping'}

Fixed code 2:
if (mapping == NULL) return;
if (inode == NULL) return;
struct inode * inode = mapping -> host ;

------------------------------------------------------------
Vulnerability 3:
SetPageUptodate ( page ) ;

variable_name: page
first_occurrence: CWE-476 static int f2fs_set_data_page_dirty ( struct page * page )
pointer_declarations {'page'}

variable_name: SetPageUptodate
first_occurrence: if ( ! PageUptodate ( page ) ) <S2SV_StartBug> SetPageUptodate ( page ) ;
pointer_declarations set()

Fixed code 3:
if (page == NULL) return;
SetPageUptodate ( page ) ;

------------------------------------------------------------
369 Vulnerabilities found in row 5398:

link: https://github.com/torvalds/linux/commit/499350a5a6e7512d9ed369ed63a4244b6536f4f8:

Vulnerability 1:
tcp_init_send_head ( sk ) ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5423:

link: https://github.com/torvalds/linux/commit/4afa5f9617927453ac04b24b584f6c718dfb4f45:

Vulnerability 1:
int err ;

variable_name: err
first_occurrence: <S2SV_StartBug> int err ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
err = crypto_ahash_export ( req , state ) ;

variable_name: req
first_occurrence: struct ahash_request * req = & ctx -> req ;
pointer_declarations {'req', 'ctx'}

variable_name: err
first_occurrence: <S2SV_StartBug> int err ;
pointer_declarations set()

variable_name: crypto_ahash_export
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> err = crypto_ahash_export ( req , state ) ;
pointer_declarations set()

variable_name: state
first_occurrence: char state [ crypto_ahash_statesize ( crypto_ahash_reqtfm ( req ) ) ] ;
pointer_declarations set()

Fixed code 2:
if (req == NULL) return;
err = crypto_ahash_export ( req , state ) ;

------------------------------------------------------------
Vulnerability 3:
ctx2 -> more = 1 ;

variable_name: more
first_occurrence: <S2SV_StartBug> ctx2 -> more = 1 ;
pointer_declarations {'ctx2'}

Fixed code 3:
if (ctx2 == NULL) return;
ctx2 -> more = 1 ;

------------------------------------------------------------
369 Vulnerabilities found in row 5428:

link: https://github.com/dbry/WavPack/commit/4c0faba32fddbd0745cbfaf1e1aeb3da5d35b9fc:

Vulnerability 1:
uint16_t numChannels , chansSpecified , chanMask = 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( numChannels < chansSpecified || numChannels < 1 ) {

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
total_samples = dff_chunk_header . ckDataSize / config -> num_channels ;

divisor: config -> num_channels
Fixed code 3:
if (config -> num_channels == 0) {fprintf(stderr, "Error: Division by zero in operation\n"); return -1;}
total_samples = dff_chunk_header . ckDataSize / config -> num_channels ;

------------------------------------------------------------
476 Vulnerabilities found in row 5467:

link: https://github.com/xkbcommon/libxkbcommon/commit/4e2ee9c3f6050d773f8bbe05bc0edb17f1ff8371:

Vulnerability 1:
if ( istreq ( str , "all" ) ) {

variable_name: str
first_occurrence: const char * str ;
pointer_declarations {'str'}

variable_name: istreq
first_occurrence: <S2SV_StartBug> if ( istreq ( str ,  ) )
pointer_declarations set()

Fixed code 1:
if (str == NULL) return;
if ( istreq ( str , "all" ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 5508:

link: https://github.com/torvalds/linux/commit/51093254bf879bc9ce96590400a87897c7498463:

Vulnerability 1:
uint32_t tag = 0 ;

variable_name: tag
first_occurrence: <S2SV_StartBug> uint32_t tag = 0 ;
pointer_declarations set()

variable_name: uint32_t
first_occurrence: <S2SV_StartBug> uint32_t tag = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( tcm_tmr < 0 ) {

variable_name: tcm_tmr
first_occurrence: <S2SV_EndBug> int tcm_tmr ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
rc = srpt_rx_mgmt_fn_tag ( send_ioctx , srp_tsk -> task_tag ) ;

variable_name: task_tag
first_occurrence: pr_debug (   , srp_tsk -> tsk_mgmt_func , srp_tsk -> task_tag , srp_tsk -> tag , ch -> cm_id , ch -> sess ) ;
pointer_declarations {'ch', 'srp_tsk'}

variable_name: srpt_rx_mgmt_fn_tag
first_occurrence: <S2SV_StartBug> rc = srpt_rx_mgmt_fn_tag ( send_ioctx , srp_tsk -> task_tag ) ;
pointer_declarations {'srp_tsk'}

variable_name: send_ioctx
first_occurrence: CWE-476 static void srpt_handle_tsk_mgmt ( struct srpt_rdma_ch * ch , struct srpt_recv_ioctx * recv_ioctx , struct srpt_send_ioctx * send_ioctx )
pointer_declarations {'recv_ioctx', 'send_ioctx', 'ch'}

variable_name: rc
first_occurrence: int rc ;
pointer_declarations set()

Fixed code 3:
if (send_ioctx == NULL) return;
if (srp_tsk == NULL) return;
rc = srpt_rx_mgmt_fn_tag ( send_ioctx , srp_tsk -> task_tag ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5521:

link: https://github.com/krb5/krb5/commit/524688ce87a15fc75f87efc8c039ba4c7d5c197b:

Vulnerability 1:
if ( REMAIN > INT_MAX )

variable_name: REMAIN
first_occurrence: # define REMAIN ( buf -> length - ( ptr - bufstart ) ) <S2SV_StartBug> if ( REMAIN > INT_MAX ) <S2SV_EndBug> return GSS_S_DEFECTIVE_TOKEN ;
pointer_declarations {'buf'}

variable_name: INT_MAX
first_occurrence: # define REMAIN ( buf -> length - ( ptr - bufstart ) ) <S2SV_StartBug> if ( REMAIN > INT_MAX ) <S2SV_EndBug> return GSS_S_DEFECTIVE_TOKEN ;
pointer_declarations {'buf'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5536:

link: https://github.com/FFmpeg/FFmpeg/commit/54655623a82632e7624714d7b2a3e039dc5faa7e:

Vulnerability 1:
return ret ;

variable_name: ret
first_occurrence: int ctb_addr_ts , ret ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( s -> ref ) {

variable_name: ref
first_occurrence: <S2SV_StartBug> if ( s -> ref )
pointer_declarations {'s'}

Fixed code 2:
if (s == NULL) return;
if ( s -> ref ) {

------------------------------------------------------------
476 Vulnerabilities found in row 5537:

link: https://github.com/FFmpeg/FFmpeg/commit/54655623a82632e7624714d7b2a3e039dc5faa7e:

Vulnerability 1:
sh -> first_slice_in_pic_flag = get_bits1 ( gb ) ;

variable_name: first_slice_in_pic_flag
first_occurrence: <S2SV_StartBug> sh -> first_slice_in_pic_flag = get_bits1 ( gb ) ;
pointer_declarations {'sh'}

variable_name: gb
first_occurrence: GetBitContext * gb = & s -> HEVClc -> gb ;
pointer_declarations {'s', 'gb', 'HEVClc'}

variable_name: get_bits1
first_occurrence: <S2SV_StartBug> sh -> first_slice_in_pic_flag = get_bits1 ( gb ) ;
pointer_declarations {'sh'}

Fixed code 1:
if (gb == NULL) return;
if (sh == NULL) return;
sh -> first_slice_in_pic_flag = get_bits1 ( gb ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5579:

link: https://github.com/torvalds/linux/commit/5649645d725c73df4302428ee4e02c869248b4c5:

Vulnerability 1:
if ( _payload ) {

variable_name: _payload
first_occurrence: CWE-476 SYSCALL_DEFINE5 ( add_key , const char __user * , _type , const char __user * , _description , const void __user * , _payload , size_t , plen , key_serial_t , ringid )
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5580:

link: https://github.com/torvalds/linux/commit/5649645d725c73df4302428ee4e02c869248b4c5:

Vulnerability 1:
if ( _payload ) {

variable_name: _payload
first_occurrence: CWE-476 long keyctl_update_key ( key_serial_t id , const void __user * _payload , size_t plen )
pointer_declarations {'_payload'}

Fixed code 1:
if (_payload == NULL) return;
if ( _payload ) {

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 5609:

link: https://github.com/torvalds/linux/commit/57ebd808a97d7c5b1e1afb937c2db22beba3c1f8:

Vulnerability 1:
jumpstack [ stackidx ++ ] = e ;

variable_name: stackidx
first_occurrence: unsigned int cpu , stackidx = 0 ;
pointer_declarations set()

variable_name: jumpstack
first_occurrence: struct arpt_entry * e , * * jumpstack ;
pointer_declarations {'jumpstack', 'e'}

variable_name: e
first_occurrence: struct arpt_entry * e , * * jumpstack ;
pointer_declarations {'jumpstack', 'e'}

Fixed code 1:
if (jumpstack == NULL) return;
if (e == NULL) return;
jumpstack [ stackidx ++ ] = e ;

------------------------------------------------------------
476 Vulnerabilities found in row 5610:

link: https://github.com/torvalds/linux/commit/57ebd808a97d7c5b1e1afb937c2db22beba3c1f8:

Vulnerability 1:
! ( e -> ip . flags & IPT_F_GOTO ) )

variable_name: flags
first_occurrence: if ( table_base + v != ipt_next_entry ( e ) && <S2SV_StartBug> ! ( e -> ip . flags & IPT_F_GOTO ) ) <S2SV_EndBug> jumpstack [ stackidx ++ ] = e ;
pointer_declarations {'e'}

variable_name: ip
first_occurrence: const struct iphdr * ip ;
pointer_declarations {'ip'}

variable_name: IPT_F_GOTO
first_occurrence: if ( table_base + v != ipt_next_entry ( e ) && <S2SV_StartBug> ! ( e -> ip . flags & IPT_F_GOTO ) ) <S2SV_EndBug> jumpstack [ stackidx ++ ] = e ;
pointer_declarations {'e'}

Fixed code 1:
if (ip == NULL) return;
if (e == NULL) return;
! ( e -> ip . flags & IPT_F_GOTO ) )

------------------------------------------------------------
Vulnerability 2:
e = get_entry ( table_base , v ) ;

variable_name: v
first_occurrence: int v ;
pointer_declarations set()

variable_name: table_base
first_occurrence: const void * table_base ;
pointer_declarations {'table_base'}

variable_name: get_entry
first_occurrence: e = get_entry ( table_base , private -> hook_entry [ hook ] ) ;
pointer_declarations {'private'}

variable_name: e
first_occurrence: struct ipt_entry * e , * * jumpstack ;
pointer_declarations {'jumpstack', 'e'}

Fixed code 2:
if (table_base == NULL) return;
if (e == NULL) return;
e = get_entry ( table_base , v ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5611:

link: https://github.com/torvalds/linux/commit/57ebd808a97d7c5b1e1afb937c2db22beba3c1f8:

Vulnerability 1:
jumpstack [ stackidx ++ ] = e ;

variable_name: stackidx
first_occurrence: unsigned int stackidx , cpu ;
pointer_declarations set()

variable_name: jumpstack
first_occurrence: struct ip6t_entry * e , * * jumpstack ;
pointer_declarations {'jumpstack', 'e'}

variable_name: e
first_occurrence: struct ip6t_entry * e , * * jumpstack ;
pointer_declarations {'jumpstack', 'e'}

Fixed code 1:
if (jumpstack == NULL) return;
if (e == NULL) return;
jumpstack [ stackidx ++ ] = e ;

------------------------------------------------------------
476 Vulnerabilities found in row 5612:

link: https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c:

Vulnerability 1:
int aff = sqlite3TableColumnAffinity ( pExpr -> y . pTab , pExpr -> iColumn ) ;

variable_name: iColumn
first_occurrence: <S2SV_StartBug> int aff = sqlite3TableColumnAffinity ( pExpr -> y . pTab , pExpr -> iColumn ) ;
pointer_declarations {'pExpr'}

variable_name: y
first_occurrence: <S2SV_StartBug> int aff = sqlite3TableColumnAffinity ( pExpr -> y . pTab , pExpr -> iColumn ) ;
pointer_declarations {'pExpr'}

variable_name: pTab
first_occurrence: <S2SV_StartBug> int aff = sqlite3TableColumnAffinity ( pExpr -> y . pTab , pExpr -> iColumn ) ;
pointer_declarations {'pExpr'}

variable_name: aff
first_occurrence: <S2SV_StartBug> int aff = sqlite3TableColumnAffinity ( pExpr -> y . pTab , pExpr -> iColumn ) ;
pointer_declarations {'pExpr'}

variable_name: sqlite3TableColumnAffinity
first_occurrence: <S2SV_StartBug> int aff = sqlite3TableColumnAffinity ( pExpr -> y . pTab , pExpr -> iColumn ) ;
pointer_declarations {'pExpr'}

Fixed code 1:
if (pExpr == NULL) return;
int aff = sqlite3TableColumnAffinity ( pExpr -> y . pTab , pExpr -> iColumn ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5613:

link: https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c:

Vulnerability 1:
pExpr -> iTable = pX -> iIdxCur ;

variable_name: iIdxCur
first_occurrence: <S2SV_StartBug> pExpr -> iTable = pX -> iIdxCur ;
pointer_declarations {'pExpr', 'pX'}

variable_name: iTable
first_occurrence: if ( pExpr -> iTable == pX -> iTabCur && pExpr -> iColumn == pX -> iTabCol )
pointer_declarations {'pExpr', 'pX'}

Fixed code 1:
if (pExpr == NULL) return;
if (pX == NULL) return;
pExpr -> iTable = pX -> iIdxCur ;

------------------------------------------------------------
476 Vulnerabilities found in row 5619:

link: https://github.com/torvalds/linux/commit/58bdd544e2933a21a51eecf17c3f5f94038261b5:

Vulnerability 1:
size += miux_tlv_length ;

variable_name: miux_tlv_length
first_occurrence: u8 * miux_tlv = NULL , miux_tlv_length ;
pointer_declarations {'miux_tlv'}

variable_name: size
first_occurrence: u16 size = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
size += rw_tlv_length ;

variable_name: rw_tlv_length
first_occurrence: u8 * rw_tlv = NULL , rw_tlv_length , rw ;
pointer_declarations {'rw_tlv'}

variable_name: size
first_occurrence: u16 size = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5620:

link: https://github.com/torvalds/linux/commit/58bdd544e2933a21a51eecf17c3f5f94038261b5:

Vulnerability 1:
size += service_name_tlv_length ;

variable_name: service_name_tlv_length
first_occurrence: u8 * service_name_tlv = NULL , service_name_tlv_length ;
pointer_declarations {'service_name_tlv'}

variable_name: size
first_occurrence: u16 size = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
size += miux_tlv_length ;

variable_name: miux_tlv_length
first_occurrence: u8 * miux_tlv = NULL , miux_tlv_length ;
pointer_declarations {'miux_tlv'}

variable_name: size
first_occurrence: u16 size = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
size += rw_tlv_length ;

variable_name: rw_tlv_length
first_occurrence: u8 * rw_tlv = NULL , rw_tlv_length , rw ;
pointer_declarations {'rw_tlv'}

variable_name: size
first_occurrence: u16 size = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5621:

link: https://github.com/torvalds/linux/commit/58bdd544e2933a21a51eecf17c3f5f94038261b5:

Vulnerability 1:
u8 * gb_cur , * version_tlv , version , version_length ;

variable_name: gb_cur
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

variable_name: version
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

variable_name: version_tlv
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

variable_name: u8
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

variable_name: version_length
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

Fixed code 1:
if (gb_cur == NULL) return;
if (version_tlv == NULL) return;
u8 * gb_cur , * version_tlv , version , version_length ;

------------------------------------------------------------
Vulnerability 2:
gb_len += version_length ;

variable_name: gb_len
first_occurrence: u8 gb_len = 0 ;
pointer_declarations set()

variable_name: version_length
first_occurrence: <S2SV_StartBug> u8 * gb_cur , * version_tlv , version , version_length ;
pointer_declarations {'gb_cur', 'version_tlv'}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
gb_len += lto_length ;

variable_name: lto_length
first_occurrence: <S2SV_EndBug> u8 * lto_tlv , lto_length ;
pointer_declarations {'lto_tlv'}

variable_name: gb_len
first_occurrence: u8 gb_len = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
gb_len += wks_length ;

variable_name: wks_length
first_occurrence: u8 * wks_tlv , wks_length ;
pointer_declarations {'wks_tlv'}

variable_name: gb_len
first_occurrence: u8 gb_len = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 5:
& miux_length ) ;

variable_name: miux_length
first_occurrence: u8 * miux_tlv , miux_length ;
pointer_declarations {'miux_tlv'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5663:

link: https://github.com/torvalds/linux/commit/5c25f65fd1e42685f7ccd80e0621829c105785d9:

Vulnerability 1:
if ( err )

variable_name: err
first_occurrence: int err ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5682:

link: https://github.com/mdadams/jasper/commit/5d66894d2313e3f3469f19066e149e08ff076698:

Vulnerability 1:
if ( ! ( matrix = jas_malloc ( sizeof ( jas_matrix_t ) ) ) ) {

variable_name: matrix
first_occurrence: jas_matrix_t * matrix ;
pointer_declarations {'matrix'}

variable_name: jas_malloc
first_occurrence: <S2SV_StartBug> if ( ! ( matrix = jas_malloc ( sizeof ( jas_matrix_t ) ) ) )
pointer_declarations set()

variable_name: jas_matrix_t
first_occurrence: CWE-476 jas_matrix_t * jas_matrix_create ( int numrows , int numcols )
pointer_declarations {'jas_matrix_create'}

Fixed code 1:
if (matrix == NULL) return;
if ( ! ( matrix = jas_malloc ( sizeof ( jas_matrix_t ) ) ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 5683:

link: https://github.com/mdadams/jasper/commit/5d66894d2313e3f3469f19066e149e08ff076698:

Vulnerability 1:
if ( optstr ) {

variable_name: optstr
first_occurrence: CWE-476 jas_image_t * bmp_decode ( jas_stream_t * in , char * optstr )
pointer_declarations {'in', 'bmp_decode', 'optstr'}

Fixed code 1:
if (optstr == NULL) return;
if ( optstr ) {

------------------------------------------------------------
Vulnerability 2:
return 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
return 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
( "BMP<S2SV_blank>information:<S2SV_blank>len<S2SV_blank>%d;<S2SV_blank>width<S2SV_blank>%d;<S2SV_blank>height<S2SV_blank>%d;<S2SV_blank>numplanes<S2SV_blank>%d;<S2SV_blank>"

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 5:
"mincolors<S2SV_blank>%d\\n" , info -> len , info -> width , info -> height , info -> numplanes ,

variable_name: len
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: width
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: height
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: numplanes
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

Fixed code 5:
if (info == NULL) return;
"mincolors<S2SV_blank>%d\\n" , info -> len , info -> width , info -> height , info -> numplanes ,

------------------------------------------------------------
Vulnerability 6:
info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres ,

variable_name: hres
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: siz
first_occurrence: JAS_DBGLOG ( 1 , (  , hdr . magic , hdr . siz , hdr . reserved1 , hdr . reserved2 , hdr . off ) ) ;
pointer_declarations set()

variable_name: depth
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: vres
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: enctype
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

Fixed code 6:
if (info == NULL) return;
info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres ,

------------------------------------------------------------
Vulnerability 7:
info -> numcolors , info -> mincolors ) ) ;

variable_name: mincolors
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

variable_name: numcolors
first_occurrence: JAS_DBGLOG ( 1 , <S2SV_StartBug> (  <S2SV_EndBug>  <S2SV_StartBug>  , info -> len , info -> width , info -> height , info -> numplanes , <S2SV_EndBug> <S2SV_StartBug> info -> depth , info -> enctype , info -> siz , info -> hres , info -> vres , <S2SV_EndBug> <S2SV_StartBug> info -> numcolors , info -> mincolors ) ) ;
pointer_declarations {'info'}

Fixed code 7:
if (info == NULL) return;
info -> numcolors , info -> mincolors ) ) ;

------------------------------------------------------------
Vulnerability 8:
bmp_info_destroy ( info ) ;

variable_name: bmp_info_destroy
first_occurrence: <S2SV_StartBug> bmp_info_destroy ( info ) ;
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 8:
if (info == NULL) return;
bmp_info_destroy ( info ) ;

------------------------------------------------------------
Vulnerability 9:
return 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 10:
bmp_info_destroy ( info ) ;

variable_name: bmp_info_destroy
first_occurrence: <S2SV_StartBug> bmp_info_destroy ( info ) ;
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 10:
if (info == NULL) return;
bmp_info_destroy ( info ) ;

------------------------------------------------------------
Vulnerability 11:
bmp_info_destroy ( info ) ;

variable_name: bmp_info_destroy
first_occurrence: <S2SV_StartBug> bmp_info_destroy ( info ) ;
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 11:
if (info == NULL) return;
bmp_info_destroy ( info ) ;

------------------------------------------------------------
Vulnerability 12:
bmp_info_destroy ( info ) ;

variable_name: bmp_info_destroy
first_occurrence: <S2SV_StartBug> bmp_info_destroy ( info ) ;
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 12:
if (info == NULL) return;
bmp_info_destroy ( info ) ;

------------------------------------------------------------
Vulnerability 13:
jas_image_destroy ( image ) ;

variable_name: image
first_occurrence: jas_image_t * image ;
pointer_declarations {'image'}

variable_name: jas_image_destroy
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> jas_image_destroy ( image ) ;
pointer_declarations set()

Fixed code 13:
if (image == NULL) return;
jas_image_destroy ( image ) ;

------------------------------------------------------------
Vulnerability 14:
return 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 15:
bmp_info_destroy ( info ) ;

variable_name: bmp_info_destroy
first_occurrence: <S2SV_StartBug> bmp_info_destroy ( info ) ;
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 15:
if (info == NULL) return;
bmp_info_destroy ( info ) ;

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 5723:

link: https://github.com/php/php-src/commit/6045de69c7dedcba3eadf7c4bba424b19c81d00d:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5742:

link: https://github.com/FFmpeg/FFmpeg/commit/611b35627488a8d0763e75c25ee0875c5b7987dd:

Vulnerability 1:
if ( cid <= 0 )

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;

variable_name: avpriv_dnxhd_get_frame_size
first_occurrence: <S2SV_StartBug> dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;
pointer_declarations {'dctx'}

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 2:
if (dctx == NULL) return;
dctx -> remaining = avpriv_dnxhd_get_frame_size ( cid ) ;

------------------------------------------------------------
Vulnerability 3:
if ( dctx -> remaining <= 0 ) {

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 3:
if (dctx == NULL) return;
if ( dctx -> remaining <= 0 ) {

------------------------------------------------------------
Vulnerability 4:
dctx -> remaining = ff_dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;

variable_name: w
first_occurrence: dctx -> w = ( state >> 32 ) & 0xFFFF ;
pointer_declarations {'dctx'}

variable_name: ff_dnxhd_get_hr_frame_size
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> dctx -> remaining = ff_dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;
pointer_declarations {'dctx'}

variable_name: h
first_occurrence: dctx -> h = ( state >> 32 ) & 0xFFFF ;
pointer_declarations {'dctx'}

variable_name: cid
first_occurrence: int cid = ( state >> 32 ) & 0xFFFFFFFF ;
pointer_declarations set()

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 4:
if (dctx == NULL) return;
dctx -> remaining = ff_dnxhd_get_hr_frame_size ( cid , dctx -> w , dctx -> h ) ;

------------------------------------------------------------
Vulnerability 5:
if ( dctx -> remaining <= 0 )

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 5:
if (dctx == NULL) return;
if ( dctx -> remaining <= 0 )

------------------------------------------------------------
Vulnerability 6:
return dctx -> remaining ;

variable_name: remaining
first_occurrence: dctx -> remaining = 0 ;
pointer_declarations {'dctx'}

Fixed code 6:
if (dctx == NULL) return;
return dctx -> remaining ;

------------------------------------------------------------
617 Vulnerabilities found in row 5746:

link: https://github.com/projectacrn/acrn-hypervisor/commit/6199e653418eda58cd698d8769820904453e2535:

assertion 1:
assert ( pdi -> bar [ bidx ] . type == PCIBAR_MEM32 || <S2SV_EndBug> <S2SV_StartBug> pdi -> bar [ bidx ] . type == PCIBAR_MEM64 )

Fixed code 1:
if (!(pdi -> bar [ bidx ] . type == PCIBAR_MEM32 || <S2SV_EndBug> <S2SV_StartBug> pdi -> bar [ bidx ] . type == PCIBAR_MEM64)) {
    return;
} 
//assert ( pdi -> bar [ bidx ] . type == PCIBAR_MEM32 || <S2SV_EndBug> <S2SV_StartBug> pdi -> bar [ bidx ] . type == PCIBAR_MEM64 )

assertion 2:
assert ( addr >= pdi -> bar [ bidx ] . addr && addr + size <= pdi -> bar [ bidx ] . addr + pdi -> bar [ bidx ] . size )

Fixed code 2:
if (!(addr >= pdi -> bar [ bidx ] . addr && addr + size <= pdi -> bar [ bidx ] . addr + pdi -> bar [ bidx ] . size)) {
    return;
} 
//assert ( addr >= pdi -> bar [ bidx ] . addr && addr + size <= pdi -> bar [ bidx ] . addr + pdi -> bar [ bidx ] . size )

assertion 3:
assert ( bidx <= PCI_BARMAX )

Fixed code 3:
if (!(bidx <= PCI_BARMAX)) {
    return;
} 
//assert ( bidx <= PCI_BARMAX )

------------------------------------------------------------
369 Vulnerabilities found in row 5762 Validated:

link: https://github.com/jsummers/deark/commit/62acb7753b0e3c0d3ab3c15057b0a65222313334:

Vulnerability 1:
bi -> pdwidth = ( bi -> rowbytes * 8 ) / bi -> pixelsize ;

divisor: bi -> pixelsize
Fixed code 1:
if (bi -> pixelsize == 0) {fprintf(stderr, "Error: Division by zero in operation\n"); return -1;}
bi -> pdwidth = ( bi -> rowbytes * 8 ) / bi -> pixelsize ;

------------------------------------------------------------
Vulnerability 2:
if ( bi -> pdwidth < bi -> npwidth ) {

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5763:

link: https://github.com/radare/radare2/commit/62e39f34b2705131a2d08aff0c2e542c6a52cf0e:

Vulnerability 1:
for ( cnt = 0 , i = 0 ; i >= 0 && cnt < shdr -> sh_info && ( ( char * ) defs + i < end ) ; ++ cnt ) {

variable_name: cnt
first_occurrence: int cnt , i ;
pointer_declarations set()

variable_name: i
first_occurrence: int cnt , i ;
pointer_declarations set()

variable_name: defs
first_occurrence: Elf_ ( Verdef ) * defs = calloc ( shdr -> sh_size , sizeof ( char ) ) ;
pointer_declarations {'shdr', 'defs'}

variable_name: sh_info
first_occurrence: sdb_num_set ( sdb ,  , shdr -> sh_info , 0 ) ;
pointer_declarations {'shdr'}

variable_name: end
first_occurrence: char * end = NULL ;
pointer_declarations {'end'}

Fixed code 1:
if (shdr == NULL) return;
if (end == NULL) return;
if (defs == NULL) return;
for ( cnt = 0 , i = 0 ; i >= 0 && cnt < shdr -> sh_info && ( ( char * ) defs + i < end ) ; ++ cnt ) {

------------------------------------------------------------
Vulnerability 2:
if ( vdaux < 1 ) {

variable_name: vdaux
first_occurrence: verdef -> vd_version = READ16 ( dfs , j ) verdef -> vd_flags = READ16 ( dfs , j ) verdef -> vd_ndx = READ16 ( dfs , j ) verdef -> vd_cnt = READ16 ( dfs , j ) verdef -> vd_hash = READ32 ( dfs , j ) verdef -> vd_aux = READ32 ( dfs , j ) verdef -> vd_next = READ32 ( dfs , j ) int vdaux = verdef -> vd_aux ;
pointer_declarations {'verdef'}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

variable_name: Elf_
first_occurrence: CWE-476 static Sdb * store_versioninfo_gnu_verdef ( ELFOBJ * bin , Elf_ ( Shdr ) * shdr , int sz )
pointer_declarations {'bin', 'shdr', 'store_versioninfo_gnu_verdef'}

variable_name: Verdaux
first_occurrence: Elf_ ( Verdaux ) aux =
pointer_declarations set()

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: end
first_occurrence: char * end = NULL ;
pointer_declarations {'end'}

Fixed code 3:
if (vstart == NULL) return;
if (end == NULL) return;
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

------------------------------------------------------------
Vulnerability 4:
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

variable_name: Elf_
first_occurrence: CWE-476 static Sdb * store_versioninfo_gnu_verdef ( ELFOBJ * bin , Elf_ ( Shdr ) * shdr , int sz )
pointer_declarations {'bin', 'shdr', 'store_versioninfo_gnu_verdef'}

variable_name: Verdaux
first_occurrence: Elf_ ( Verdaux ) aux =
pointer_declarations set()

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: end
first_occurrence: char * end = NULL ;
pointer_declarations {'end'}

Fixed code 4:
if (vstart == NULL) return;
if (end == NULL) return;
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

------------------------------------------------------------
476 Vulnerabilities found in row 5841:

link: https://github.com/radareorg/radare2/commit/68338b71a563b24e62617bb629059adc0c94b230:

Vulnerability 1:
ut8 opcode = * ( p4 ++ ) & 0xff ;

variable_name: p4
first_occurrence: const ut8 * p4 = r_buf_get_at ( binfile -> buf , debug_info_off , NULL ) ;
pointer_declarations {'p4', 'binfile'}

variable_name: ut8
first_occurrence: const ut8 * p4 = r_buf_get_at ( binfile -> buf , debug_info_off , NULL ) ;
pointer_declarations {'p4', 'binfile'}

variable_name: opcode
first_occurrence: <S2SV_StartBug> ut8 opcode = * ( p4 ++ ) & 0xff ;
pointer_declarations set()

Fixed code 1:
if (p4 == NULL) return;
ut8 opcode = * ( p4 ++ ) & 0xff ;

------------------------------------------------------------
369 Vulnerabilities found in row 5883:

link: https://github.com/torvalds/linux/commit/6aeb75e6adfaed16e58780309613a578fe1ee90b:

Vulnerability 1:
} else

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
tty_encode_baud_rate ( tty , baud , baud ) ;

No fix needed for this vulnerability.
------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 5914:

link: https://github.com/openbsd/src/commit/6c3220444ed06b5796dedfd53a0f4becd903c0d1:

Vulnerability 1:
case IO_DISCONNECTED :

variable_name: IO_DISCONNECTED
first_occurrence: <S2SV_StartBug> case IO_DISCONNECTED : <S2SV_EndBug> io_free ( fs -> io ) ;
pointer_declarations {'fs'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 5924:

link: https://github.com/illumos/illumos-gate/commit/6d1c73b5858fefc6161c7d686345f0dc887ea799:

Vulnerability 1:
smb_ofile_t * of = NULL ;

variable_name: smb_ofile_t
first_occurrence: <S2SV_StartBug> smb_ofile_t * of = NULL ;
pointer_declarations {'of'}

variable_name: of
first_occurrence: <S2SV_StartBug> smb_ofile_t * of = NULL ;
pointer_declarations {'of'}

Fixed code 1:
if (of == NULL) return;
smb_ofile_t * of = NULL ;

------------------------------------------------------------
Vulnerability 2:
of = sr -> fid_ofile ;

variable_name: fid_ofile
first_occurrence: <S2SV_StartBug> of = sr -> fid_ofile ;
pointer_declarations {'sr'}

variable_name: of
first_occurrence: <S2SV_StartBug> smb_ofile_t * of = NULL ;
pointer_declarations {'of'}

Fixed code 2:
if (sr == NULL) return;
if (of == NULL) return;
of = sr -> fid_ofile ;

------------------------------------------------------------
476 Vulnerabilities found in row 5925:

link: https://github.com/illumos/illumos-gate/commit/6d1c73b5858fefc6161c7d686345f0dc887ea799:

Vulnerability 1:
smb_flush_file ( sr , sr -> fid_ofile ) ;

variable_name: smb_flush_file
first_occurrence: <S2SV_StartBug> smb_flush_file ( sr , sr -> fid_ofile ) ;
pointer_declarations {'sr'}

variable_name: fid_ofile
first_occurrence: if ( sr -> fid_ofile == NULL )
pointer_declarations {'sr'}

Fixed code 1:
if (sr == NULL) return;
smb_flush_file ( sr , sr -> fid_ofile ) ;

------------------------------------------------------------
Vulnerability 2:
smb_flush_file ( sr , file ) ;

variable_name: smb_flush_file
first_occurrence: <S2SV_StartBug> smb_flush_file ( sr , sr -> fid_ofile ) ;
pointer_declarations {'sr'}

variable_name: sr
first_occurrence: CWE-476 smb_sdrc_t smb_com_flush ( smb_request_t * sr )
pointer_declarations {'sr'}

variable_name: file
first_occurrence: smb_ofile_t * file ;
pointer_declarations {'file'}

Fixed code 2:
if (file == NULL) return;
if (sr == NULL) return;
smb_flush_file ( sr , file ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 5973:

link: https://github.com/bitlbee/bitlbee/commit/701ab8129ba9ea64f569daedca9a8603abad740f:

Vulnerability 1:
if ( bee -> ui -> ft_in_start ) {

variable_name: ft_in_start
first_occurrence: <S2SV_StartBug> if ( bee -> ui -> ft_in_start )
pointer_declarations {'ui', 'bee'}

Fixed code 1:
if (ui == NULL) return;
if (bee == NULL) return;
if ( bee -> ui -> ft_in_start ) {

------------------------------------------------------------
369 Vulnerabilities found in row 6016:

link: https://github.com/erikd/libsndfile/commit/725c7dbb95bfaf8b4bb7b04820e3a00cceea9ce6:

Vulnerability 1:
ssize_t count ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6074:

link: https://github.com/pgbouncer/pgbouncer/commit/74d6e5f7de5ec736f71204b7b422af7380c19ac5:

Vulnerability 1:
if ( cf_auth_type <= AUTH_TRUST ) {

variable_name: cf_auth_type
first_occurrence: if ( cf_auth_type <= AUTH_TRUST || client -> own_user )
pointer_declarations {'client'}

variable_name: AUTH_TRUST
first_occurrence: if ( cf_auth_type <= AUTH_TRUST || client -> own_user )
pointer_declarations {'client'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6094:

link: https://github.com/sqlite/sqlite/commit/75e95e1fcd52d3ec8282edb75ac8cd0814095d54:

Vulnerability 1:
if ( bIntToNull && pDup && pDup -> op == TK_INTEGER ) {

variable_name: bIntToNull
first_occurrence: CWE-476 static ExprList * exprListAppendList ( Parse * pParse , ExprList * pList , ExprList * pAppend , int bIntToNull )
pointer_declarations {'pParse', 'pAppend', 'pList', 'exprListAppendList'}

variable_name: op
first_occurrence: <S2SV_StartBug> if ( bIntToNull && pDup && pDup -> op == TK_INTEGER )
pointer_declarations {'pDup'}

variable_name: TK_INTEGER
first_occurrence: <S2SV_StartBug> if ( bIntToNull && pDup && pDup -> op == TK_INTEGER )
pointer_declarations {'pDup'}

Fixed code 1:
if (pDup == NULL) return;
if ( bIntToNull && pDup && pDup -> op == TK_INTEGER ) {

------------------------------------------------------------
Vulnerability 2:
pDup -> flags &= ~ ( EP_IntValue | EP_IsTrue | EP_IsFalse ) ;

variable_name: flags
first_occurrence: <S2SV_StartBug> pDup -> flags &= ~ ( EP_IntValue | EP_IsTrue | EP_IsFalse ) ;
pointer_declarations {'pDup'}

variable_name: EP_IsTrue
first_occurrence: <S2SV_StartBug> pDup -> flags &= ~ ( EP_IntValue | EP_IsTrue | EP_IsFalse ) ;
pointer_declarations {'pDup'}

variable_name: EP_IntValue
first_occurrence: <S2SV_StartBug> pDup -> flags &= ~ ( EP_IntValue | EP_IsTrue | EP_IsFalse ) ;
pointer_declarations {'pDup'}

variable_name: EP_IsFalse
first_occurrence: <S2SV_StartBug> pDup -> flags &= ~ ( EP_IntValue | EP_IsTrue | EP_IsFalse ) ;
pointer_declarations {'pDup'}

Fixed code 2:
if (pDup == NULL) return;
pDup -> flags &= ~ ( EP_IntValue | EP_IsTrue | EP_IsFalse ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 6098:

link: https://github.com/torvalds/linux/commit/76597cd31470fa130784c78fadb4dab2e624a723:

Vulnerability 1:
vma_stop ( priv , vma ) ;

variable_name: vma_stop
first_occurrence: <S2SV_StartBug> vma_stop ( priv , vma ) ;
pointer_declarations set()

variable_name: priv
first_occurrence: struct proc_maps_private * priv = m -> private ;
pointer_declarations {'priv', 'm'}

variable_name: vma
first_occurrence: struct vm_area_struct * vma = v ;
pointer_declarations {'vma'}

Fixed code 1:
if (priv == NULL) return;
if (vma == NULL) return;
vma_stop ( priv , vma ) ;

------------------------------------------------------------
617 Vulnerabilities found in row 6147 Validated:

link: https://github.com/vincentbernat/lldpd/commit/793526f8884455f43daecd0a2c46772388417a00:

assertion 1:
assert ( addrsize <= LLDPD_MGMT_MAXADDRSIZE )

Fixed code 1:
if (!(addrsize <= LLDPD_MGMT_MAXADDRSIZE)) {
    return;
} 
//assert ( addrsize <= LLDPD_MGMT_MAXADDRSIZE )

------------------------------------------------------------
617 Vulnerabilities found in row 6148 Validated:

link: https://github.com/vincentbernat/lldpd/commit/793526f8884455f43daecd0a2c46772388417a00:

assertion 1:
assert ( proto != LLDP_MGMT_ADDR_NONE )

Fixed code 1:
if (!(proto != LLDP_MGMT_ADDR_NONE)) {
    return;
} 
//assert ( proto != LLDP_MGMT_ADDR_NONE )

------------------------------------------------------------
617 Vulnerabilities found in row 6149 Validated:

link: https://github.com/vincentbernat/lldpd/commit/793526f8884455f43daecd0a2c46772388417a00:

assertion 1:
assert ( errno == ENOMEM )

Fixed code 1:
if (!(errno == ENOMEM)) {
    return;
} 
//assert ( errno == ENOMEM )

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 6178:

link: https://github.com/radare/radare2/commit/7ab66cca5bbdf6cb2d69339ef4f513d95e532dbf:

Vulnerability 1:
if ( ! object || object -> list . length != 2 || ! object -> list . objects [ 0 ] || object -> list . objects [ 1 ] -> list . length != 1 ) {

variable_name: objects
first_occurrence: <S2SV_StartBug> if ( ! object || object -> list . length != 2 || ! object -> list . objects [ 0 ] || object -> list . objects [ 1 ] -> list . length != 1 )
pointer_declarations {'object'}

variable_name: length
first_occurrence: CWE-476 RCMS * r_pkcs7_parse_cms ( const ut8 * buffer , ut32 length )
pointer_declarations {'buffer', 'r_pkcs7_parse_cms'}

variable_name: list
first_occurrence: <S2SV_StartBug> if ( ! object || object -> list . length != 2 || ! object -> list . objects [ 0 ] || object -> list . objects [ 1 ] -> list . length != 1 )
pointer_declarations {'object'}

Fixed code 1:
if (object == NULL) return;
if ( ! object || object -> list . length != 2 || ! object -> list . objects [ 0 ] || object -> list . objects [ 1 ] -> list . length != 1 ) {

------------------------------------------------------------
476 Vulnerabilities found in row 6195:

link: https://github.com/torvalds/linux/commit/7c80f9e4a588f1925b07134bb2e3689335f6c6d8:

Vulnerability 1:
if ( in ) {

variable_name: in
first_occurrence: struct usb_host_endpoint * in , * out ;
pointer_declarations {'in', 'out'}

Fixed code 1:
if (in == NULL) return;
if ( in ) {

------------------------------------------------------------
Vulnerability 2:
dev -> out_pipe = usb_sndbulkpipe ( udev ,

variable_name: out_pipe
first_occurrence: <S2SV_StartBug> dev -> out_pipe = usb_sndbulkpipe ( udev , <S2SV_EndBug> out -> desc . bEndpointAddress & USB_ENDPOINT_NUMBER_MASK ) ;
pointer_declarations {'dev', 'out'}

variable_name: usb_sndbulkpipe
first_occurrence: <S2SV_StartBug> dev -> out_pipe = usb_sndbulkpipe ( udev , <S2SV_EndBug> out -> desc . bEndpointAddress & USB_ENDPOINT_NUMBER_MASK ) ;
pointer_declarations {'dev', 'out'}

variable_name: udev
first_occurrence: struct usb_device * udev ;
pointer_declarations {'udev'}

Fixed code 2:
if (dev == NULL) return;
if (udev == NULL) return;
dev -> out_pipe = usb_sndbulkpipe ( udev ,

------------------------------------------------------------
Vulnerability 3:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6205:

link: https://github.com/torvalds/linux/commit/7d11f77f84b27cef452cee332f4e469503084737:

Vulnerability 1:
kfree ( rm -> atomic . op_notifier ) ;

variable_name: kfree
first_occurrence: <S2SV_StartBug> kfree ( rm -> atomic . op_notifier ) ;
pointer_declarations {'rm'}

variable_name: atomic
first_occurrence: if ( cmsg -> cmsg_len < CMSG_LEN ( sizeof ( struct rds_atomic_args ) ) || rm -> atomic . op_active ) return - EINVAL ;
pointer_declarations {'rm', 'cmsg'}

variable_name: op_notifier
first_occurrence: rm -> atomic . op_notifier = kmalloc ( sizeof ( * rm -> atomic . op_notifier ) , GFP_KERNEL ) ;
pointer_declarations {'rm'}

Fixed code 1:
if (rm == NULL) return;
kfree ( rm -> atomic . op_notifier ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 6218:

link: https://github.com/FreeRDP/FreeRDP/commit/7d58aac24fe20ffaad7bd9b40c9ddf457c1b06e7:

Vulnerability 1:
security_decrypt ( s -> p , length , rdp ) ;

variable_name: rdp
first_occurrence: CWE-476 BOOL rdp_decrypt ( rdpRdp * rdp , STREAM * s , int length , UINT16 securityFlags )
pointer_declarations {'rdp', 's'}

variable_name: security_decrypt
first_occurrence: <S2SV_StartBug> security_decrypt ( s -> p , length , rdp ) ;
pointer_declarations {'s'}

variable_name: length
first_occurrence: CWE-476 BOOL rdp_decrypt ( rdpRdp * rdp , STREAM * s , int length , UINT16 securityFlags )
pointer_declarations {'rdp', 's'}

variable_name: p
first_occurrence: sig = s -> p ;
pointer_declarations {'s'}

Fixed code 1:
if (rdp == NULL) return;
if (s == NULL) return;
security_decrypt ( s -> p , length , rdp ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 6219:

link: https://github.com/FreeRDP/FreeRDP/commit/7d58aac24fe20ffaad7bd9b40c9ddf457c1b06e7:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6245:

link: https://github.com/torvalds/linux/commit/7ed47b7d142ec99ad6880bbbec51e9f12b3af74c:

Vulnerability 1:
ghash_flush ( ctx , dctx ) ;

variable_name: ghash_flush
first_occurrence: <S2SV_StartBug> ghash_flush ( ctx , dctx ) ;
pointer_declarations set()

variable_name: dctx
first_occurrence: struct ghash_desc_ctx * dctx = shash_desc_ctx ( desc ) ;
pointer_declarations {'dctx'}

variable_name: ctx
first_occurrence: struct ghash_ctx * ctx = crypto_shash_ctx ( desc -> tfm ) ;
pointer_declarations {'ctx', 'desc'}

Fixed code 1:
if (dctx == NULL) return;
if (ctx == NULL) return;
ghash_flush ( ctx , dctx ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 6246:

link: https://github.com/torvalds/linux/commit/7ed47b7d142ec99ad6880bbbec51e9f12b3af74c:

Vulnerability 1:
if ( dctx -> bytes ) {

variable_name: bytes
first_occurrence: <S2SV_StartBug> if ( dctx -> bytes )
pointer_declarations {'dctx'}

Fixed code 1:
if (dctx == NULL) return;
if ( dctx -> bytes ) {

------------------------------------------------------------
617 Vulnerabilities found in row 6253:

link: https://github.com/ImageMagick/ImageMagick/commit/7fd419441bc7103398e313558171d342c6315f44:

assertion 1:
assert ( image_info -> signature == MagickCoreSignature )

Fixed code 1:
if (!(image_info -> signature == MagickCoreSignature)) {
    return;
} 
//assert ( image_info -> signature == MagickCoreSignature )

assertion 2:
assert ( exception -> signature == MagickCoreSignature )

Fixed code 2:
if (!(exception -> signature == MagickCoreSignature)) {
    return;
} 
//assert ( exception -> signature == MagickCoreSignature )

assertion 3:
assert ( exception != ( ExceptionInfo * )

Fixed code 3:
if (!(exception != ( ExceptionInfo *)) {
    return;
} 
//assert ( exception != ( ExceptionInfo * )

assertion 4:
assert ( image_info != ( const ImageInfo * )

Fixed code 4:
if (!(image_info != ( const ImageInfo *)) {
    return;
} 
//assert ( image_info != ( const ImageInfo * )

------------------------------------------------------------
476 Vulnerabilities found in row 6254:

link: https://github.com/tats/w3m/commit/7fdc83b0364005a0b5ed869230dd81752ba022e8:

Vulnerability 1:
if ( rows > 1 ) {

variable_name: rows
first_occurrence: int spos , epos , rows , c_rows , pos , col = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6313:

link: https://github.com/FFmpeg/FFmpeg/commit/837cb4325b712ff1aab531bf41668933f61d75d2:

Vulnerability 1:
if ( frame -> color_primaries != AVCOL_PRI_UNSPECIFIED )

variable_name: AVCOL_PRI_UNSPECIFIED
first_occurrence: <S2SV_StartBug> if ( frame -> color_primaries != AVCOL_PRI_UNSPECIFIED ) <S2SV_EndBug> print_str (  , av_color_primaries_name ( frame -> color_primaries ) ) ;
pointer_declarations {'frame'}

variable_name: color_primaries
first_occurrence: <S2SV_StartBug> if ( frame -> color_primaries != AVCOL_PRI_UNSPECIFIED ) <S2SV_EndBug> print_str (  , av_color_primaries_name ( frame -> color_primaries ) ) ;
pointer_declarations {'frame'}

Fixed code 1:
if (frame == NULL) return;
if ( frame -> color_primaries != AVCOL_PRI_UNSPECIFIED )

------------------------------------------------------------
476 Vulnerabilities found in row 6314:

link: https://github.com/FFmpeg/FFmpeg/commit/837cb4325b712ff1aab531bf41668933f61d75d2:

Vulnerability 1:
if ( par -> color_primaries != AVCOL_PRI_UNSPECIFIED )

variable_name: AVCOL_PRI_UNSPECIFIED
first_occurrence: <S2SV_StartBug> if ( par -> color_primaries != AVCOL_PRI_UNSPECIFIED ) <S2SV_EndBug> print_str (  , av_color_primaries_name ( par -> color_primaries ) ) ;
pointer_declarations {'par'}

variable_name: color_primaries
first_occurrence: <S2SV_StartBug> if ( par -> color_primaries != AVCOL_PRI_UNSPECIFIED ) <S2SV_EndBug> print_str (  , av_color_primaries_name ( par -> color_primaries ) ) ;
pointer_declarations {'par'}

Fixed code 1:
if (par == NULL) return;
if ( par -> color_primaries != AVCOL_PRI_UNSPECIFIED )

------------------------------------------------------------
476 Vulnerabilities found in row 6356:

link: https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089:

Vulnerability 1:
if ( p -> selFlags & SF_UsesEphemeral ) {

variable_name: selFlags
first_occurrence: assert ( ( p -> selFlags & SF_Recursive ) == 0 || p -> op == TK_ALL || p -> op == TK_UNION ) ;
pointer_declarations {'p'}

variable_name: SF_UsesEphemeral
first_occurrence: findRightmost ( p ) -> selFlags |= SF_UsesEphemeral ;
pointer_declarations set()

Fixed code 1:
if (p == NULL) return;
if ( p -> selFlags & SF_UsesEphemeral ) {

------------------------------------------------------------
476 Vulnerabilities found in row 6370:

link: https://github.com/torvalds/linux/commit/853bc26a7ea39e354b9f8889ae7ad1492ffa28d2:

Vulnerability 1:
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

variable_name: to_o2nm_cluster_from_node
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: node
first_occurrence: struct o2nm_node * node = to_o2nm_node ( item ) ;
pointer_declarations {'node'}

variable_name: o2nm_cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

Fixed code 1:
if (cluster == NULL) return;
if (node == NULL) return;
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

------------------------------------------------------------
Vulnerability 2:
ret = 0 ;

variable_name: ret
first_occurrence: <S2SV_EndBug> int ret , i ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( ret )

variable_name: ret
first_occurrence: <S2SV_EndBug> int ret , i ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6371:

link: https://github.com/torvalds/linux/commit/853bc26a7ea39e354b9f8889ae7ad1492ffa28d2:

Vulnerability 1:
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

variable_name: to_o2nm_cluster_from_node
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: node
first_occurrence: struct o2nm_node * node = to_o2nm_node ( item ) ;
pointer_declarations {'node'}

variable_name: o2nm_cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

Fixed code 1:
if (cluster == NULL) return;
if (node == NULL) return;
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

------------------------------------------------------------
Vulnerability 2:
if ( tmp && tmp == cluster -> cl_has_local &&

variable_name: cl_has_local
first_occurrence: <S2SV_StartBug> if ( tmp && tmp == cluster -> cl_has_local && <S2SV_EndBug> cluster -> cl_local_node != node -> nd_num ) <S2SV_StartBug> return - EBUSY ;
pointer_declarations {'cluster', 'node'}

variable_name: tmp
first_occurrence: <S2SV_EndBug> unsigned long tmp ;
pointer_declarations set()

Fixed code 2:
if (cluster == NULL) return;
if ( tmp && tmp == cluster -> cl_has_local &&

------------------------------------------------------------
Vulnerability 3:
return - EBUSY ;

variable_name: EBUSY
first_occurrence: <S2SV_StartBug> if ( tmp && tmp == cluster -> cl_has_local && <S2SV_EndBug> cluster -> cl_local_node != node -> nd_num ) <S2SV_StartBug> return - EBUSY ;
pointer_declarations {'cluster', 'node'}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
if ( tmp && ! cluster -> cl_has_local ) {

variable_name: cl_has_local
first_occurrence: <S2SV_StartBug> if ( tmp && tmp == cluster -> cl_has_local && <S2SV_EndBug> cluster -> cl_local_node != node -> nd_num ) <S2SV_StartBug> return - EBUSY ;
pointer_declarations {'cluster', 'node'}

variable_name: tmp
first_occurrence: <S2SV_EndBug> unsigned long tmp ;
pointer_declarations set()

Fixed code 4:
if (cluster == NULL) return;
if ( tmp && ! cluster -> cl_has_local ) {

------------------------------------------------------------
Vulnerability 5:
return ret ;

variable_name: ret
first_occurrence: ssize_t ret ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 6:
return count ;

variable_name: count
first_occurrence: CWE-476 static ssize_t o2nm_node_local_store ( struct config_item * item , const char * page , size_t count )
pointer_declarations {'item', 'page'}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6372:

link: https://github.com/torvalds/linux/commit/853bc26a7ea39e354b9f8889ae7ad1492ffa28d2:

Vulnerability 1:
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

variable_name: to_o2nm_cluster_from_node
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

variable_name: node
first_occurrence: struct o2nm_node * node = to_o2nm_node ( item ) ;
pointer_declarations {'node'}

variable_name: o2nm_cluster
first_occurrence: <S2SV_StartBug> struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;
pointer_declarations {'cluster'}

Fixed code 1:
if (cluster == NULL) return;
if (node == NULL) return;
struct o2nm_cluster * cluster = to_o2nm_cluster_from_node ( node ) ;

------------------------------------------------------------
Vulnerability 2:
write_lock ( & cluster -> cl_nodes_lock ) ;

variable_name: cl_nodes_lock
first_occurrence: <S2SV_StartBug> write_lock ( & cluster -> cl_nodes_lock ) ;
pointer_declarations {'cluster'}

variable_name: write_lock
first_occurrence: <S2SV_StartBug> write_lock ( & cluster -> cl_nodes_lock ) ;
pointer_declarations {'cluster'}

Fixed code 2:
if (cluster == NULL) return;
write_lock ( & cluster -> cl_nodes_lock ) ;

------------------------------------------------------------
Vulnerability 3:
if ( ret )

variable_name: ret
first_occurrence: int ret = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6373:

link: https://github.com/torvalds/linux/commit/853bc26a7ea39e354b9f8889ae7ad1492ffa28d2:

Vulnerability 1:
return to_o2nm_cluster ( node -> nd_item . ci_parent -> ci_parent ) ;

variable_name: to_o2nm_cluster
first_occurrence: <S2SV_StartBug> return to_o2nm_cluster ( node -> nd_item . ci_parent -> ci_parent ) ;
pointer_declarations {'node', 'ci_parent'}

variable_name: nd_item
first_occurrence: <S2SV_StartBug> return to_o2nm_cluster ( node -> nd_item . ci_parent -> ci_parent ) ;
pointer_declarations {'node', 'ci_parent'}

Fixed code 1:
if (node == NULL) return;
if (ci_parent == NULL) return;
return to_o2nm_cluster ( node -> nd_item . ci_parent -> ci_parent ) ;

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6391:

link: https://github.com/kyz/libmspack/commit/8759da8db6ec9e866cb8eb143313f397f925bb4f:

Vulnerability 1:
if ( name_len == 0 ) goto chunk_end ;

variable_name: name_len
first_occurrence: unsigned int section , name_len , x , errors , num_chunks ;
pointer_declarations set()

variable_name: chunk_end
first_occurrence: if ( name_len > ( unsigned int ) ( end - p ) ) goto chunk_end ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
READ_ENCINT ( length ) ;

variable_name: length
first_occurrence: off_t offset , length ;
pointer_declarations set()

variable_name: READ_ENCINT
first_occurrence: READ_ENCINT ( name_len ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6396 Validated:

link: https://github.com/gpac/gpac/commit/87afe070cd6866df7fe80f11b26ef75161de85e0:

Vulnerability 1:
if ( esd ) {

variable_name: esd
first_occurrence: GF_ESD * esd ;
pointer_declarations {'esd'}

Fixed code 1:
if (esd == NULL) return;
if ( esd ) {

------------------------------------------------------------
476 Vulnerabilities found in row 6472:

link: https://github.com/mdadams/jasper/commit/8f62b4761711d036fd8964df256b938c809b7fca:

Vulnerability 1:
char * fmtname ;

variable_name: fmtname
first_occurrence: <S2SV_StartBug> char * fmtname ;
pointer_declarations {'fmtname'}

Fixed code 1:
if (fmtname == NULL) return;
char * fmtname ;

------------------------------------------------------------
Vulnerability 2:
while ( ( id = jas_getopt ( argc , argv , opts ) ) >= 0 ) {

variable_name: argc
first_occurrence: CWE-476 int main ( int argc , char * * argv )
pointer_declarations {'argv'}

variable_name: jas_getopt
first_occurrence: <S2SV_StartBug> while ( ( id = jas_getopt ( argc , argv , opts ) ) >= 0 )
pointer_declarations set()

variable_name: opts
first_occurrence: <S2SV_StartBug> while ( ( id = jas_getopt ( argc , argv , opts ) ) >= 0 )
pointer_declarations set()

variable_name: id
first_occurrence: int id ;
pointer_declarations set()

variable_name: argv
first_occurrence: CWE-476 int main ( int argc , char * * argv )
pointer_declarations {'argv'}

Fixed code 2:
if (argv == NULL) return;
while ( ( id = jas_getopt ( argc , argv , opts ) ) >= 0 ) {

------------------------------------------------------------
Vulnerability 3:
case OPT_INFILE :

variable_name: OPT_INFILE
first_occurrence: <S2SV_StartBug> case OPT_INFILE : <S2SV_EndBug> infile = jas_optarg ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
if ( infile ) {

variable_name: infile
first_occurrence: char * infile ;
pointer_declarations {'infile'}

Fixed code 4:
if (infile == NULL) return;
if ( infile ) {

------------------------------------------------------------
Vulnerability 5:
if ( ! ( image = jas_image_decode ( instream , fmtid , 0 ) ) ) {

variable_name: instream
first_occurrence: jas_stream_t * instream ;
pointer_declarations {'instream'}

variable_name: jas_image_decode
first_occurrence: <S2SV_StartBug> if ( ! ( image = jas_image_decode ( instream , fmtid , 0 ) ) )
pointer_declarations set()

variable_name: image
first_occurrence: jas_image_t * image ;
pointer_declarations {'image'}

variable_name: fmtid
first_occurrence: int fmtid ;
pointer_declarations set()

Fixed code 5:
if (instream == NULL) return;
if (image == NULL) return;
if ( ! ( image = jas_image_decode ( instream , fmtid , 0 ) ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 6473:

link: https://github.com/mdadams/jasper/commit/8f62b4761711d036fd8964df256b938c809b7fca:

Vulnerability 1:
if ( ! ( info = bmp_getinfo ( in ) ) ) {

variable_name: in
first_occurrence: CWE-476 jas_image_t * bmp_decode ( jas_stream_t * in , char * optstr )
pointer_declarations {'in', 'bmp_decode', 'optstr'}

variable_name: bmp_getinfo
first_occurrence: <S2SV_StartBug> if ( ! ( info = bmp_getinfo ( in ) ) )
pointer_declarations set()

variable_name: info
first_occurrence: bmp_info_t * info ;
pointer_declarations {'info'}

Fixed code 1:
if (in == NULL) return;
if (info == NULL) return;
if ( ! ( info = bmp_getinfo ( in ) ) ) {

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6474:

link: https://github.com/mdadams/jasper/commit/8f62b4761711d036fd8964df256b938c809b7fca:

Vulnerability 1:
v |= ( c << 24 ) ;

variable_name: c
first_occurrence: int c ;
pointer_declarations set()

variable_name: v
first_occurrence: uint_fast32_t v ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6515:

link: https://github.com/xkbcommon/libxkbcommon/commit/917636b1d0d70205a13f89062b95e3a0fc31d4ff:

Vulnerability 1:
log_err ( ctx , "Cannot<S2SV_blank>define<S2SV_blank>%s<S2SV_blank>in<S2SV_blank>a<S2SV_blank>keymap<S2SV_blank>file\\n" ,

variable_name: ctx
first_occurrence: struct xkb_context * ctx = keymap -> ctx ;
pointer_declarations {'ctx', 'keymap'}

variable_name: log_err
first_occurrence: <S2SV_StartBug> log_err ( ctx ,  , <S2SV_EndBug> <S2SV_StartBug> xkb_file_type_to_string ( file -> file_type ) ) ;
pointer_declarations {'file'}

Fixed code 1:
if (ctx == NULL) return;
log_err ( ctx , "Cannot<S2SV_blank>define<S2SV_blank>%s<S2SV_blank>in<S2SV_blank>a<S2SV_blank>keymap<S2SV_blank>file\\n" ,

------------------------------------------------------------
Vulnerability 2:
xkb_file_type_to_string ( file -> file_type ) ) ;

variable_name: file_type
first_occurrence: if ( file -> file_type < FIRST_KEYMAP_FILE_TYPE || file -> file_type > LAST_KEYMAP_FILE_TYPE )
pointer_declarations {'file'}

variable_name: xkb_file_type_to_string
first_occurrence: <S2SV_StartBug> log_err ( ctx ,  , <S2SV_EndBug> <S2SV_StartBug> xkb_file_type_to_string ( file -> file_type ) ) ;
pointer_declarations {'file'}

Fixed code 2:
if (file == NULL) return;
xkb_file_type_to_string ( file -> file_type ) ) ;

------------------------------------------------------------
617 Vulnerabilities found in row 6592 Validated:

link: https://github.com/vincentbernat/lldpd/commit/9221b5c249f9e4843f77c7f888d5705348d179c0:

assertion 1:
assert ( addrsize <= LLDPD_MGMT_MAXADDRSIZE )

Fixed code 1:
if (!(addrsize <= LLDPD_MGMT_MAXADDRSIZE)) {
    return;
} 
//assert ( addrsize <= LLDPD_MGMT_MAXADDRSIZE )

------------------------------------------------------------
617 Vulnerabilities found in row 6593 Validated:

link: https://github.com/vincentbernat/lldpd/commit/9221b5c249f9e4843f77c7f888d5705348d179c0:

assertion 1:
assert ( proto != LLDP_MGMT_ADDR_NONE )

Fixed code 1:
if (!(proto != LLDP_MGMT_ADDR_NONE)) {
    return;
} 
//assert ( proto != LLDP_MGMT_ADDR_NONE )

------------------------------------------------------------
617 Vulnerabilities found in row 6594 Validated:

link: https://github.com/vincentbernat/lldpd/commit/9221b5c249f9e4843f77c7f888d5705348d179c0:

assertion 1:
assert ( errno == ENOMEM )

Fixed code 1:
if (!(errno == ENOMEM)) {
    return;
} 
//assert ( errno == ENOMEM )

------------------------------------------------------------
476 Vulnerabilities found in row 6612:

link: https://github.com/krb5/krb5/commit/93b4a6306a0026cf1cc31ac4bd8a49ba5d034ba7:

Vulnerability 1:
if ( check_anon ( kdc_active_realm , request -> client , request -> server ) != 0 ) {

variable_name: client
first_occurrence: CWE-476 int validate_as_request ( kdc_realm_t * kdc_active_realm , register krb5_kdc_req * request , krb5_db_entry client , krb5_db_entry server , krb5_timestamp kdc_time , const char * * status , krb5_pa_data * * * e_data )
pointer_declarations {'request', 'status', 'kdc_active_realm', 'e_data'}

variable_name: check_anon
first_occurrence: <S2SV_StartBug> if ( check_anon ( kdc_active_realm , request -> client , request -> server ) != 0 )
pointer_declarations {'request'}

variable_name: kdc_active_realm
first_occurrence: CWE-476 int validate_as_request ( kdc_realm_t * kdc_active_realm , register krb5_kdc_req * request , krb5_db_entry client , krb5_db_entry server , krb5_timestamp kdc_time , const char * * status , krb5_pa_data * * * e_data )
pointer_declarations {'request', 'status', 'kdc_active_realm', 'e_data'}

variable_name: server
first_occurrence: CWE-476 int validate_as_request ( kdc_realm_t * kdc_active_realm , register krb5_kdc_req * request , krb5_db_entry client , krb5_db_entry server , krb5_timestamp kdc_time , const char * * status , krb5_pa_data * * * e_data )
pointer_declarations {'request', 'status', 'kdc_active_realm', 'e_data'}

Fixed code 1:
if (request == NULL) return;
if (kdc_active_realm == NULL) return;
if ( check_anon ( kdc_active_realm , request -> client , request -> server ) != 0 ) {

------------------------------------------------------------
476 Vulnerabilities found in row 6627:

link: https://github.com/torvalds/linux/commit/94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6:

Vulnerability 1:
struct crypto_rng * rng = __crypto_rng_cast ( tfm ) ;

variable_name: __crypto_rng_cast
first_occurrence: <S2SV_StartBug> struct crypto_rng * rng = __crypto_rng_cast ( tfm ) ;
pointer_declarations {'rng'}

variable_name: tfm
first_occurrence: CWE-476 static int crypto_rng_init_tfm ( struct crypto_tfm * tfm )
pointer_declarations {'tfm'}

variable_name: rng
first_occurrence: <S2SV_StartBug> struct crypto_rng * rng = __crypto_rng_cast ( tfm ) ;
pointer_declarations {'rng'}

variable_name: crypto_rng
first_occurrence: <S2SV_StartBug> struct crypto_rng * rng = __crypto_rng_cast ( tfm ) ;
pointer_declarations {'rng'}

Fixed code 1:
if (tfm == NULL) return;
if (rng == NULL) return;
struct crypto_rng * rng = __crypto_rng_cast ( tfm ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 6628:

link: https://github.com/torvalds/linux/commit/94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6:

Vulnerability 1:
err = tfm -> seed ( tfm , seed , slen ) ;

variable_name: err
first_occurrence: int err ;
pointer_declarations set()

variable_name: seed
first_occurrence: CWE-476 int crypto_rng_reset ( struct crypto_rng * tfm , const u8 * seed , unsigned int slen )
pointer_declarations {'tfm', 'seed'}

variable_name: slen
first_occurrence: CWE-476 int crypto_rng_reset ( struct crypto_rng * tfm , const u8 * seed , unsigned int slen )
pointer_declarations {'tfm', 'seed'}

Fixed code 1:
if (tfm == NULL) return;
if (seed == NULL) return;
err = tfm -> seed ( tfm , seed , slen ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 6629:

link: https://github.com/torvalds/linux/commit/94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6:

Vulnerability 1:
return alg -> cra_rng . rng_make_random ?

variable_name: rng_make_random
first_occurrence: <S2SV_StartBug> return alg -> cra_rng . rng_make_random ? <S2SV_EndBug> alg -> cra_rng . seedsize : ralg -> seedsize ;
pointer_declarations {'alg', 'ralg'}

variable_name: cra_rng
first_occurrence: <S2SV_StartBug> return alg -> cra_rng . rng_make_random ? <S2SV_EndBug> alg -> cra_rng . seedsize : ralg -> seedsize ;
pointer_declarations {'alg', 'ralg'}

Fixed code 1:
if (alg == NULL) return;
return alg -> cra_rng . rng_make_random ?

------------------------------------------------------------
476 Vulnerabilities found in row 6632:

link: https://github.com/torvalds/linux/commit/951b6a0717db97ce420547222647bcc40bf1eacd:

Vulnerability 1:
struct sockaddr_rc * sa = ( struct sockaddr_rc * ) addr ;

variable_name: sa
first_occurrence: <S2SV_StartBug> struct sockaddr_rc * sa = ( struct sockaddr_rc * ) addr ;
pointer_declarations {'sa', 'addr'}

variable_name: sockaddr_rc
first_occurrence: <S2SV_StartBug> struct sockaddr_rc * sa = ( struct sockaddr_rc * ) addr ;
pointer_declarations {'sa', 'addr'}

variable_name: addr
first_occurrence: CWE-476 static int rfcomm_sock_bind ( struct socket * sock , struct sockaddr * addr , int addr_len )
pointer_declarations {'sock', 'addr'}

Fixed code 1:
if (sa == NULL) return;
if (addr == NULL) return;
struct sockaddr_rc * sa = ( struct sockaddr_rc * ) addr ;

------------------------------------------------------------
Vulnerability 2:
int chan = sa -> rc_channel ;

variable_name: rc_channel
first_occurrence: <S2SV_StartBug> int chan = sa -> rc_channel ;
pointer_declarations {'sa'}

variable_name: chan
first_occurrence: <S2SV_StartBug> int chan = sa -> rc_channel ;
pointer_declarations {'sa'}

Fixed code 2:
if (sa == NULL) return;
int chan = sa -> rc_channel ;

------------------------------------------------------------
Vulnerability 3:
int err = 0 ;

variable_name: err
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> int err = 0 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
lock_sock ( sk ) ;

variable_name: lock_sock
first_occurrence: <S2SV_StartBug> lock_sock ( sk ) ;
pointer_declarations set()

variable_name: sk
first_occurrence: <S2SV_EndBug> struct sock * sk = sock -> sk ;
pointer_declarations {'sk', 'sock'}

Fixed code 4:
if (sk == NULL) return;
lock_sock ( sk ) ;

------------------------------------------------------------
Vulnerability 5:
if ( chan && __rfcomm_get_listen_sock_by_addr ( chan , & sa -> rc_bdaddr ) ) {

variable_name: __rfcomm_get_listen_sock_by_addr
first_occurrence: <S2SV_StartBug> if ( chan && __rfcomm_get_listen_sock_by_addr ( chan , & sa -> rc_bdaddr ) )
pointer_declarations {'sa'}

variable_name: chan
first_occurrence: <S2SV_StartBug> int chan = sa -> rc_channel ;
pointer_declarations {'sa'}

variable_name: rc_bdaddr
first_occurrence: <S2SV_EndBug> BT_DBG (  , sk , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

Fixed code 5:
if (sa == NULL) return;
if ( chan && __rfcomm_get_listen_sock_by_addr ( chan , & sa -> rc_bdaddr ) ) {

------------------------------------------------------------
Vulnerability 6:
bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;

variable_name: rfcomm_pi
first_occurrence: <S2SV_StartBug> bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

variable_name: rc_bdaddr
first_occurrence: <S2SV_EndBug> BT_DBG (  , sk , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

variable_name: src
first_occurrence: <S2SV_StartBug> bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

variable_name: bacpy
first_occurrence: <S2SV_StartBug> bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

variable_name: sk
first_occurrence: <S2SV_EndBug> struct sock * sk = sock -> sk ;
pointer_declarations {'sk', 'sock'}

Fixed code 6:
if (sa == NULL) return;
if (sk == NULL) return;
bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;

------------------------------------------------------------
Vulnerability 7:
rfcomm_pi ( sk ) -> channel = chan ;

variable_name: channel
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> rfcomm_pi ( sk ) -> channel = chan ;
pointer_declarations set()

variable_name: sk
first_occurrence: <S2SV_EndBug> struct sock * sk = sock -> sk ;
pointer_declarations {'sk', 'sock'}

variable_name: chan
first_occurrence: <S2SV_StartBug> int chan = sa -> rc_channel ;
pointer_declarations {'sa'}

variable_name: rfcomm_pi
first_occurrence: <S2SV_StartBug> bacpy ( & rfcomm_pi ( sk ) -> src , & sa -> rc_bdaddr ) ;
pointer_declarations {'sa'}

Fixed code 7:
if (sk == NULL) return;
rfcomm_pi ( sk ) -> channel = chan ;

------------------------------------------------------------
476 Vulnerabilities found in row 6648:

link: https://github.com/GNOME/libgsf/commit/95a8351a75758cf10b3bf6abae0b6b461f90d9e5:

Vulnerability 1:
g_object_unref ( subdir ) ;

variable_name: g_object_unref
first_occurrence: <S2SV_StartBug> g_object_unref ( subdir ) ;
pointer_declarations set()

variable_name: subdir
first_occurrence: GsfInput * subdir = gsf_infile_child_by_name ( GSF_INFILE ( dir ) , dirname ) ;
pointer_declarations {'subdir'}

Fixed code 1:
if (subdir == NULL) return;
g_object_unref ( subdir ) ;

------------------------------------------------------------
Vulnerability 2:
dir = GSF_INFILE_TAR ( subdir ) ;

variable_name: GSF_INFILE_TAR
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> dir = GSF_INFILE_TAR ( subdir ) ;
pointer_declarations set()

variable_name: dir
first_occurrence: CWE-476 static GsfInfileTar * tar_directory_for_file ( GsfInfileTar * dir , const char * name , gboolean last )
pointer_declarations {'tar_directory_for_file', 'name', 'dir'}

variable_name: subdir
first_occurrence: GsfInput * subdir = gsf_infile_child_by_name ( GSF_INFILE ( dir ) , dirname ) ;
pointer_declarations {'subdir'}

Fixed code 2:
if (dir == NULL) return;
if (subdir == NULL) return;
dir = GSF_INFILE_TAR ( subdir ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 6663:

link: https://github.com/xkbcommon/libxkbcommon/commit/96df3106d49438e442510c59acad306e94f3db4d:

Vulnerability 1:
if ( ! LookupString ( symInterpretMatchMaskNames , pred_txt , pred_rtrn ) ) {

variable_name: symInterpretMatchMaskNames
first_occurrence: <S2SV_StartBug> if ( ! LookupString ( symInterpretMatchMaskNames , pred_txt , pred_rtrn ) )
pointer_declarations set()

variable_name: pred_txt
first_occurrence: const char * pred_txt = xkb_atom_text ( info -> ctx , expr -> action . name ) ;
pointer_declarations {'expr', 'pred_txt', 'info'}

variable_name: LookupString
first_occurrence: <S2SV_StartBug> if ( ! LookupString ( symInterpretMatchMaskNames , pred_txt , pred_rtrn ) )
pointer_declarations set()

variable_name: pred_rtrn
first_occurrence: CWE-476 static bool ResolveStateAndPredicate ( ExprDef * expr , enum xkb_match_operation * pred_rtrn , xkb_mod_mask_t * mods_rtrn , CompatInfo * info )
pointer_declarations {'expr', 'mods_rtrn', 'pred_rtrn', 'info'}

Fixed code 1:
if (pred_txt == NULL) return;
if (pred_rtrn == NULL) return;
if ( ! LookupString ( symInterpretMatchMaskNames , pred_txt , pred_rtrn ) ) {

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
617 Vulnerabilities found in row 6688:

link: https://github.com/nothings/stb/commit/98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:

assertion 1:
assert ( 0 )

Fixed code 1:
if (!(0)) {
    return;
} 
//assert ( 0 )

------------------------------------------------------------
617 Vulnerabilities found in row 6689:

link: https://github.com/nothings/stb/commit/98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:

assertion 1:
assert ( ( int )

Fixed code 1:
if (!(int)) {
    return;
} 
//assert ( ( int )

assertion 2:
assert ( pow ( ( float )

Fixed code 2:
if (!(pow ( ( float)) {
    return;
} 
//assert ( pow ( ( float )

------------------------------------------------------------
617 Vulnerabilities found in row 6690:

link: https://github.com/nothings/stb/commit/98fdfc6df88b1e34a736d5e126e6c8139c8de1a6:

assertion 1:
assert ( f -> temp_offset == f -> alloc . alloc_buffer_length_in_bytes )

Fixed code 1:
if (!(f -> temp_offset == f -> alloc . alloc_buffer_length_in_bytes)) {
    return;
} 
//assert ( f -> temp_offset == f -> alloc . alloc_buffer_length_in_bytes )

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 6692:

link: https://github.com/torvalds/linux/commit/9903e41ae1f5d50c93f268ca3304d4d7c64b9311:

Vulnerability 1:
freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;

variable_name: dev
first_occurrence: struct device * dev = & pdev -> dev ;
pointer_declarations {'dev', 'pdev'}

variable_name: resource_size
first_occurrence: <S2SV_StartBug> freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;
pointer_declarations {'res'}

variable_name: start
first_occurrence: <S2SV_StartBug> freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;
pointer_declarations {'res'}

variable_name: freq_reg
first_occurrence: <S2SV_StartBug> freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;
pointer_declarations {'res'}

variable_name: devm_ioremap
first_occurrence: <S2SV_StartBug> freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;
pointer_declarations {'res'}

Fixed code 1:
if (dev == NULL) return;
if (res == NULL) return;
freq_reg = devm_ioremap ( dev , res -> start , resource_size ( res ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 6695:

link: https://github.com/torvalds/linux/commit/9933e113c2e87a9f46a40fde8dafbf801dca1ab9:

Vulnerability 1:
skcipher -> setkey = alg -> setkey ;

variable_name: setkey
first_occurrence: <S2SV_StartBug> skcipher -> setkey = alg -> setkey ;
pointer_declarations {'alg', 'skcipher'}

Fixed code 1:
if (alg == NULL) return;
if (skcipher == NULL) return;
skcipher -> setkey = alg -> setkey ;

------------------------------------------------------------
476 Vulnerabilities found in row 6699:

link: https://github.com/torvalds/linux/commit/998912346c0da53a6dbb71fab3a138586b596b30:

Vulnerability 1:
sd -> gspca_dev . usb_err = - EIO ;

variable_name: usb_err
first_occurrence: <S2SV_StartBug> sd -> gspca_dev . usb_err = - EIO ;
pointer_declarations {'sd'}

variable_name: EIO
first_occurrence: <S2SV_StartBug> sd -> gspca_dev . usb_err = - EIO ;
pointer_declarations {'sd'}

variable_name: gspca_dev
first_occurrence: struct gspca_dev * gspca_dev = ( struct gspca_dev * ) sd ;
pointer_declarations {'sd', 'gspca_dev'}

Fixed code 1:
if (sd == NULL) return;
if (gspca_dev == NULL) return;
sd -> gspca_dev . usb_err = - EIO ;

------------------------------------------------------------
476 Vulnerabilities found in row 6700:

link: https://github.com/torvalds/linux/commit/998912346c0da53a6dbb71fab3a138586b596b30:

Vulnerability 1:
packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;

variable_name: le16_to_cpu
first_occurrence: <S2SV_StartBug> packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

variable_name: wMaxPacketSize
first_occurrence: <S2SV_StartBug> packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

variable_name: packet_size
first_occurrence: int hsegs , vsegs , packet_size ;
pointer_declarations set()

variable_name: endpoint
first_occurrence: <S2SV_StartBug> packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

variable_name: desc
first_occurrence: <S2SV_StartBug> packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

Fixed code 1:
if (alt == NULL) return;
packet_size = le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 6767:

link: https://github.com/gpac/gpac/commit/9eeac00b38348c664dfeae2525bba0cf1bc32349:

Vulnerability 1:
fprintf ( stderr , "File<S2SV_blank>%s<S2SV_blank>has<S2SV_blank>no<S2SV_blank>IOD" , inName ) ;

variable_name: fprintf
first_occurrence: # else fprintf ( stderr , %s\\ , argv [ i ] ) ;
pointer_declarations set()

variable_name: stderr
first_occurrence: # else fprintf ( stderr , %s\\ , argv [ i ] ) ;
pointer_declarations set()

variable_name: inName
first_occurrence: inName = outName = mediaSource = input_ctx = output_ctx = drm_file = avi2raw = cprt = chap_file = pack_file = raw_cat = high_dynamc_range_filename = use_init_seg = box_patch_filename = NULL ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 6768 Validated:

link: https://github.com/gpac/gpac/commit/9eeac00b38348c664dfeae2525bba0cf1bc32349:

Vulnerability 1:
p = gf_filter_pid_get_property ( ctx -> ipid , GF_PROP_PID_AUDIO_FORMAT ) ;

variable_name: GF_PROP_PID_AUDIO_FORMAT
first_occurrence: <S2SV_StartBug> p = gf_filter_pid_get_property ( ctx -> ipid , GF_PROP_PID_AUDIO_FORMAT ) ;
pointer_declarations {'ctx'}

variable_name: ipid
first_occurrence: NHML_PRINT_UINT ( GF_PROP_PID_ID , NULL ,  ) NHML_PRINT_UINT ( GF_PROP_PID_TIMESCALE , NULL ,  ) p = gf_filter_pid_get_property ( ctx -> ipid , GF_PROP_PID_IN_IOD ) ;
pointer_declarations {'ctx'}

variable_name: p
first_occurrence: const GF_PropertyValue * p ;
pointer_declarations {'p'}

variable_name: gf_filter_pid_get_property
first_occurrence: NHML_PRINT_UINT ( GF_PROP_PID_ID , NULL ,  ) NHML_PRINT_UINT ( GF_PROP_PID_TIMESCALE , NULL ,  ) p = gf_filter_pid_get_property ( ctx -> ipid , GF_PROP_PID_IN_IOD ) ;
pointer_declarations {'ctx'}

Fixed code 1:
if (ctx == NULL) return;
if (p == NULL) return;
p = gf_filter_pid_get_property ( ctx -> ipid , GF_PROP_PID_AUDIO_FORMAT ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 6807:

link: https://github.com/torvalds/linux/commit/a246b4d547708f33ff4d4b9a7a5dbac741dc89d8:

Vulnerability 1:
return le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;

variable_name: wMaxPacketSize
first_occurrence: <S2SV_StartBug> return le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

variable_name: endpoint
first_occurrence: <S2SV_StartBug> return le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

variable_name: le16_to_cpu
first_occurrence: <S2SV_StartBug> return le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

variable_name: desc
first_occurrence: <S2SV_StartBug> return le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;
pointer_declarations {'alt'}

Fixed code 1:
if (alt == NULL) return;
return le16_to_cpu ( alt -> endpoint [ 0 ] . desc . wMaxPacketSize ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 6808:

link: https://github.com/torvalds/linux/commit/a246b4d547708f33ff4d4b9a7a5dbac741dc89d8:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
alt = & gspca_dev -> dev -> actconfig -> intf_cache [ 0 ] -> altsetting [ 1 ] ;

variable_name: alt
first_occurrence: <S2SV_EndBug> struct usb_host_interface * alt ;
pointer_declarations {'alt'}

variable_name: altsetting
first_occurrence: <S2SV_StartBug> alt = & gspca_dev -> dev -> actconfig -> intf_cache [ 0 ] -> altsetting [ 1 ] ;
pointer_declarations {'dev', 'gspca_dev', 'actconfig'}

variable_name: intf_cache
first_occurrence: <S2SV_StartBug> alt = & gspca_dev -> dev -> actconfig -> intf_cache [ 0 ] -> altsetting [ 1 ] ;
pointer_declarations {'dev', 'gspca_dev', 'actconfig'}

Fixed code 2:
if (dev == NULL) return;
if (alt == NULL) return;
if (gspca_dev == NULL) return;
if (actconfig == NULL) return;
alt = & gspca_dev -> dev -> actconfig -> intf_cache [ 0 ] -> altsetting [ 1 ] ;

------------------------------------------------------------
476 Vulnerabilities found in row 6983:

link: https://github.com/torvalds/linux/commit/ac64115a66c18c01745bbd3c47a36b124e5fd8c0:

Vulnerability 1:
is_kvmppc_hv_enabled ( kvm ) ;

variable_name: is_kvmppc_hv_enabled
first_occurrence: hv_enabled = is_kvmppc_hv_enabled ( kvm ) ;
pointer_declarations set()

variable_name: kvm
first_occurrence: CWE-476 int kvm_vm_ioctl_check_extension ( struct kvm * kvm , long ext )
pointer_declarations {'kvm'}

Fixed code 1:
if (kvm == NULL) return;
is_kvmppc_hv_enabled ( kvm ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7002:

link: https://github.com/lua/lua/commit/ae5b5ba529753c7a653901ffc29b5ea24c3fdf3a:

Vulnerability 1:
static int changedline ( const Proto * p , int oldpc , int newpc ) {

variable_name: newpc
first_occurrence: CWE-476 <S2SV_StartBug> static int changedline ( const Proto * p , int oldpc , int newpc )
pointer_declarations {'p'}

variable_name: p
first_occurrence: CWE-476 <S2SV_StartBug> static int changedline ( const Proto * p , int oldpc , int newpc )
pointer_declarations {'p'}

variable_name: changedline
first_occurrence: CWE-476 <S2SV_StartBug> static int changedline ( const Proto * p , int oldpc , int newpc )
pointer_declarations {'p'}

variable_name: oldpc
first_occurrence: CWE-476 <S2SV_StartBug> static int changedline ( const Proto * p , int oldpc , int newpc )
pointer_declarations {'p'}

variable_name: Proto
first_occurrence: CWE-476 <S2SV_StartBug> static int changedline ( const Proto * p , int oldpc , int newpc )
pointer_declarations {'p'}

Fixed code 1:
if (p == NULL) return;
static int changedline ( const Proto * p , int oldpc , int newpc ) {

------------------------------------------------------------
476 Vulnerabilities found in row 7052 Validated:

link: https://github.com/gpac/gpac/commit/b2db2f99b4c30f96e17b9a14537c776da6cb5dca:

Vulnerability 1:
u8 * data , * output ;

variable_name: data
first_occurrence: <S2SV_StartBug> u8 * data , * output ;
pointer_declarations {'data', 'output'}

variable_name: u8
first_occurrence: <S2SV_StartBug> u8 * data , * output ;
pointer_declarations {'data', 'output'}

variable_name: output
first_occurrence: <S2SV_StartBug> u8 * data , * output ;
pointer_declarations {'data', 'output'}

Fixed code 1:
if (data == NULL) return;
if (output == NULL) return;
u8 * data , * output ;

------------------------------------------------------------
Vulnerability 2:
u32 pck_size , prev_pck_size ;

variable_name: pck_size
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> u32 pck_size , prev_pck_size ;
pointer_declarations set()

variable_name: u32
first_occurrence: u32 pos ;
pointer_declarations set()

variable_name: prev_pck_size
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> u32 pck_size , prev_pck_size ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
data = ( char * ) gf_filter_pck_get_data ( pck , & pck_size ) ;

variable_name: data
first_occurrence: <S2SV_StartBug> u8 * data , * output ;
pointer_declarations {'data', 'output'}

variable_name: pck
first_occurrence: GF_FilterPacket * pck , * dst_pck ;
pointer_declarations {'dst_pck', 'pck'}

variable_name: gf_filter_pck_get_data
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> data = ( char * ) gf_filter_pck_get_data ( pck , & pck_size ) ;
pointer_declarations {'gf_filter_pck_get_data'}

variable_name: pck_size
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> u32 pck_size , prev_pck_size ;
pointer_declarations set()

Fixed code 4:
if (data == NULL) return;
if (pck == NULL) return;
if (gf_filter_pck_get_data == NULL) return;
data = ( char * ) gf_filter_pck_get_data ( pck , & pck_size ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7054 Validated:

link: https://github.com/gpac/gpac/commit/b2eab95e07cb5819375a50358d4806a8813b6e50:

Vulnerability 1:
if ( av1 -> av1_config ) {

variable_name: av1_config
first_occurrence: <S2SV_StartBug> if ( av1 -> av1_config )
pointer_declarations {'av1'}

Fixed code 1:
if (av1 == NULL) return;
if ( av1 -> av1_config ) {

------------------------------------------------------------
476 Vulnerabilities found in row 7055:

link: https://github.com/FFmpeg/FFmpeg/commit/b3332a182f8ba33a34542e4a0370f38b914ccf7d:

Vulnerability 1:
if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO )

variable_name: profile
first_occurrence: <S2SV_StartBug> if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO ) <S2SV_EndBug> c -> idct_put = ff_simple_idct_put_int32_10bit ;
pointer_declarations {'avctx', 'c'}

variable_name: FF_PROFILE_MPEG4_SIMPLE_STUDIO
first_occurrence: <S2SV_StartBug> if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO ) <S2SV_EndBug> c -> idct_put = ff_simple_idct_put_int32_10bit ;
pointer_declarations {'avctx', 'c'}

variable_name: AV_CODEC_ID_MPEG4
first_occurrence: <S2SV_StartBug> if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO ) <S2SV_EndBug> c -> idct_put = ff_simple_idct_put_int32_10bit ;
pointer_declarations {'avctx', 'c'}

variable_name: codec_id
first_occurrence: <S2SV_StartBug> if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO ) <S2SV_EndBug> c -> idct_put = ff_simple_idct_put_int32_10bit ;
pointer_declarations {'avctx', 'c'}

Fixed code 1:
if (avctx == NULL) return;
if ( avctx -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO )

------------------------------------------------------------
476 Vulnerabilities found in row 7056:

link: https://github.com/FFmpeg/FFmpeg/commit/b3332a182f8ba33a34542e4a0370f38b914ccf7d:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7091 Validated:

link: https://github.com/kkos/oniguruma/commit/b690371bbf97794b4a1d3f295d4fb9a8b05d402d:

Vulnerability 1:
* low = p - reg -> dmax ;

variable_name: dmax
first_occurrence: if ( reg -> dmax == 0 )
pointer_declarations {'reg'}

variable_name: low
first_occurrence: CWE-476 static int forward_search_range ( regex_t * reg , const UChar * str , const UChar * end , UChar * s , UChar * range , UChar * * low , UChar * * high , UChar * * low_prev )
pointer_declarations {'reg', 'range', 'low', 's', 'low_prev', 'str', 'high', 'end'}

variable_name: p
first_occurrence: UChar * p , * pprev = ( UChar * ) NULL ;
pointer_declarations {'NULL', 'pprev', 'p'}

Fixed code 1:
if (reg == NULL) return;
if (low == NULL) return;
if (p == NULL) return;
* low = p - reg -> dmax ;

------------------------------------------------------------
Vulnerability 2:
( pprev ? pprev : str ) , * low ) ;

variable_name: str
first_occurrence: CWE-476 static int forward_search_range ( regex_t * reg , const UChar * str , const UChar * end , UChar * s , UChar * range , UChar * * low , UChar * * high , UChar * * low_prev )
pointer_declarations {'reg', 'range', 'low', 's', 'low_prev', 'str', 'high', 'end'}

variable_name: low
first_occurrence: CWE-476 static int forward_search_range ( regex_t * reg , const UChar * str , const UChar * end , UChar * s , UChar * range , UChar * * low , UChar * * high , UChar * * low_prev )
pointer_declarations {'reg', 'range', 'low', 's', 'low_prev', 'str', 'high', 'end'}

variable_name: pprev
first_occurrence: UChar * p , * pprev = ( UChar * ) NULL ;
pointer_declarations {'NULL', 'pprev', 'p'}

Fixed code 2:
if (str == NULL) return;
if (low == NULL) return;
if (pprev == NULL) return;
( pprev ? pprev : str ) , * low ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7151:

link: https://github.com/xkbcommon/libxkbcommon/commit/badb428e63387140720f22486b3acbd3d738859f:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
keymap -> num_key_aliases = num_key_aliases ;

variable_name: num_key_aliases
first_occurrence: unsigned i , num_key_aliases ;
pointer_declarations set()

Fixed code 2:
if (keymap == NULL) return;
keymap -> num_key_aliases = num_key_aliases ;

------------------------------------------------------------
476 Vulnerabilities found in row 7154:

link: https://github.com/torvalds/linux/commit/bb3d48dcf86a97dc25fe9fc2c11938e19cb4399a:

Vulnerability 1:
error = xfs_da_shrink_inode ( args , 0 , bp ) ;

variable_name: bp
first_occurrence: struct xfs_buf * bp ;
pointer_declarations {'bp'}

variable_name: error
first_occurrence: int error , i , size ;
pointer_declarations set()

variable_name: xfs_da_shrink_inode
first_occurrence: <S2SV_StartBug> error = xfs_da_shrink_inode ( args , 0 , bp ) ;
pointer_declarations set()

variable_name: args
first_occurrence: CWE-476 int xfs_attr_shortform_to_leaf ( struct xfs_da_args * args , struct xfs_buf * * leaf_bp )
pointer_declarations {'args', 'leaf_bp'}

Fixed code 1:
if (bp == NULL) return;
if (args == NULL) return;
error = xfs_da_shrink_inode ( args , 0 , bp ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7155:

link: https://github.com/xkbcommon/libxkbcommon/commit/bb4909d2d8fa6b08155e449986a478101e2b2634:

Vulnerability 1:
return true ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
return true ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7166:

link: https://github.com/torvalds/linux/commit/bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205:

Vulnerability 1:
err = fib_dump_info ( skb , NETLINK_CB ( in_skb ) . portid ,

variable_name: fib_dump_info
first_occurrence: if ( rtm -> rtm_flags & RTM_F_FIB_MATCH ) <S2SV_StartBug> err = fib_dump_info ( skb , NETLINK_CB ( in_skb ) . portid , <S2SV_EndBug> nlh -> nlmsg_seq , RTM_NEWROUTE , table_id , rt -> rt_type , res . prefix , res . prefixlen , fl4 . flowi4_tos , res . fi , 0 ) ;
pointer_declarations {'rtm', 'rt', 'nlh'}

variable_name: in_skb
first_occurrence: CWE-476 static int inet_rtm_getroute ( struct sk_buff * in_skb , struct nlmsghdr * nlh , struct netlink_ext_ack * extack )
pointer_declarations {'in_skb', 'extack', 'nlh'}

variable_name: skb
first_occurrence: struct sk_buff * skb ;
pointer_declarations {'skb'}

variable_name: err
first_occurrence: int err ;
pointer_declarations set()

variable_name: portid
first_occurrence: if ( rtm -> rtm_flags & RTM_F_FIB_MATCH ) <S2SV_StartBug> err = fib_dump_info ( skb , NETLINK_CB ( in_skb ) . portid , <S2SV_EndBug> nlh -> nlmsg_seq , RTM_NEWROUTE , table_id , rt -> rt_type , res . prefix , res . prefixlen , fl4 . flowi4_tos , res . fi , 0 ) ;
pointer_declarations {'rtm', 'rt', 'nlh'}

variable_name: NETLINK_CB
first_occurrence: if ( rtm -> rtm_flags & RTM_F_FIB_MATCH ) <S2SV_StartBug> err = fib_dump_info ( skb , NETLINK_CB ( in_skb ) . portid , <S2SV_EndBug> nlh -> nlmsg_seq , RTM_NEWROUTE , table_id , rt -> rt_type , res . prefix , res . prefixlen , fl4 . flowi4_tos , res . fi , 0 ) ;
pointer_declarations {'rtm', 'rt', 'nlh'}

Fixed code 1:
if (in_skb == NULL) return;
if (skb == NULL) return;
err = fib_dump_info ( skb , NETLINK_CB ( in_skb ) . portid ,

------------------------------------------------------------
Vulnerability 2:
rcu_read_unlock ( ) ;

variable_name: rcu_read_unlock
first_occurrence: <S2SV_StartBug> rcu_read_unlock ( ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7168:

link: https://github.com/torvalds/linux/commit/bc909d9ddbf7778371e36a651d6e4194b1cc7d4c:

Vulnerability 1:
if ( used_address && used_address -> name_len == msg_sys -> msg_namelen &&

variable_name: name_len
first_occurrence: <S2SV_StartBug> if ( used_address && used_address -> name_len == msg_sys -> msg_namelen && <S2SV_EndBug> <S2SV_StartBug> ! memcmp ( & used_address -> name , msg -> msg_name , <S2SV_EndBug> used_address -> name_len ) )
pointer_declarations {'msg_sys', 'msg', 'used_address'}

variable_name: msg_namelen
first_occurrence: <S2SV_StartBug> if ( used_address && used_address -> name_len == msg_sys -> msg_namelen && <S2SV_EndBug> <S2SV_StartBug> ! memcmp ( & used_address -> name , msg -> msg_name , <S2SV_EndBug> used_address -> name_len ) )
pointer_declarations {'msg_sys', 'msg', 'used_address'}

Fixed code 1:
if (msg_sys == NULL) return;
if (used_address == NULL) return;
if ( used_address && used_address -> name_len == msg_sys -> msg_namelen &&

------------------------------------------------------------
Vulnerability 2:
! memcmp ( & used_address -> name , msg -> msg_name ,

variable_name: name
first_occurrence: <S2SV_StartBug> if ( used_address && used_address -> name_len == msg_sys -> msg_namelen && <S2SV_EndBug> <S2SV_StartBug> ! memcmp ( & used_address -> name , msg -> msg_name , <S2SV_EndBug> used_address -> name_len ) )
pointer_declarations {'msg_sys', 'msg', 'used_address'}

variable_name: memcmp
first_occurrence: <S2SV_StartBug> if ( used_address && used_address -> name_len == msg_sys -> msg_namelen && <S2SV_EndBug> <S2SV_StartBug> ! memcmp ( & used_address -> name , msg -> msg_name , <S2SV_EndBug> used_address -> name_len ) )
pointer_declarations {'msg_sys', 'msg', 'used_address'}

variable_name: msg_name
first_occurrence: <S2SV_StartBug> if ( used_address && used_address -> name_len == msg_sys -> msg_namelen && <S2SV_EndBug> <S2SV_StartBug> ! memcmp ( & used_address -> name , msg -> msg_name , <S2SV_EndBug> used_address -> name_len ) )
pointer_declarations {'msg_sys', 'msg', 'used_address'}

Fixed code 2:
if (msg == NULL) return;
if (used_address == NULL) return;
! memcmp ( & used_address -> name , msg -> msg_name ,

------------------------------------------------------------
Vulnerability 3:
memcpy ( & used_address -> name , msg -> msg_name ,

variable_name: memcpy
first_occurrence: <S2SV_StartBug> memcpy ( & used_address -> name , msg -> msg_name , <S2SV_EndBug> used_address -> name_len ) ;
pointer_declarations {'msg', 'used_address'}

variable_name: name
first_occurrence: <S2SV_StartBug> if ( used_address && used_address -> name_len == msg_sys -> msg_namelen && <S2SV_EndBug> <S2SV_StartBug> ! memcmp ( & used_address -> name , msg -> msg_name , <S2SV_EndBug> used_address -> name_len ) )
pointer_declarations {'msg_sys', 'msg', 'used_address'}

variable_name: msg_name
first_occurrence: <S2SV_StartBug> if ( used_address && used_address -> name_len == msg_sys -> msg_namelen && <S2SV_EndBug> <S2SV_StartBug> ! memcmp ( & used_address -> name , msg -> msg_name , <S2SV_EndBug> used_address -> name_len ) )
pointer_declarations {'msg_sys', 'msg', 'used_address'}

Fixed code 3:
if (msg == NULL) return;
if (used_address == NULL) return;
memcpy ( & used_address -> name , msg -> msg_name ,

------------------------------------------------------------
476 Vulnerabilities found in row 7203:

link: https://github.com/torvalds/linux/commit/bcf3b67d16a4c8ffae0aa79de5853435e683945c:

Vulnerability 1:
}

No fix needed for this vulnerability.
------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
476 Vulnerabilities found in row 7225:

link: https://github.com/mdadams/jasper/commit/bdfe95a6e81ffb4b2fad31a76b57943695beed20:

Vulnerability 1:
box -> info = boxinfo ;

variable_name: boxinfo
first_occurrence: jp2_boxinfo_t * boxinfo ;
pointer_declarations {'boxinfo'}

variable_name: info
first_occurrence: <S2SV_StartBug> box -> info = boxinfo ;
pointer_declarations {'box'}

Fixed code 1:
if (boxinfo == NULL) return;
if (box == NULL) return;
box -> info = boxinfo ;

------------------------------------------------------------
Vulnerability 2:
box -> ops = & jp2_boxinfo_unk . ops ;

variable_name: jp2_boxinfo_unk
first_occurrence: box -> ops = & jp2_boxinfo_unk . ops ;
pointer_declarations {'box'}

variable_name: ops
first_occurrence: box -> ops = & jp2_boxinfo_unk . ops ;
pointer_declarations {'box'}

Fixed code 2:
if (box == NULL) return;
box -> ops = & jp2_boxinfo_unk . ops ;

------------------------------------------------------------
Vulnerability 3:
jas_stream_rewind ( tmpstream ) ;

variable_name: jas_stream_rewind
first_occurrence: <S2SV_StartBug> jas_stream_rewind ( tmpstream ) ;
pointer_declarations set()

variable_name: tmpstream
first_occurrence: jas_stream_t * tmpstream ;
pointer_declarations {'tmpstream'}

Fixed code 3:
if (tmpstream == NULL) return;
jas_stream_rewind ( tmpstream ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7256:

link: https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81:

Vulnerability 1:
return 0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7257:

link: https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81:

Vulnerability 1:
if ( ! index_key . type -> match || ! index_key . type -> instantiate ||

variable_name: index_key
first_occurrence: struct keyring_index_key index_key =
pointer_declarations set()

variable_name: instantiate
first_occurrence: <S2SV_StartBug> if ( ! index_key . type -> match || ! index_key . type -> instantiate || <S2SV_EndBug> ( ! index_key . description && ! index_key . type -> preparse ) ) goto error_put_type ;
pointer_declarations {'type'}

variable_name: match
first_occurrence: <S2SV_StartBug> if ( ! index_key . type -> match || ! index_key . type -> instantiate || <S2SV_EndBug> ( ! index_key . description && ! index_key . type -> preparse ) ) goto error_put_type ;
pointer_declarations {'type'}

Fixed code 1:
if (type == NULL) return;
if ( ! index_key . type -> match || ! index_key . type -> instantiate ||

------------------------------------------------------------
476 Vulnerabilities found in row 7258:

link: https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81:

Vulnerability 1:
. match_data . cmp = type -> match ,

variable_name: match
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT , . flags = KEYRING_SEARCH_DO_STATE_CHECK ,
pointer_declarations {'type'}

variable_name: cmp
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT , . flags = KEYRING_SEARCH_DO_STATE_CHECK ,
pointer_declarations {'type'}

variable_name: match_data
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT , . flags = KEYRING_SEARCH_DO_STATE_CHECK ,
pointer_declarations {'type'}

Fixed code 1:
if (type == NULL) return;
. match_data . cmp = type -> match ,

------------------------------------------------------------
Vulnerability 2:
int ret ;

variable_name: ret
first_occurrence: <S2SV_StartBug> int ret ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7259:

link: https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81:

Vulnerability 1:
. match_data . cmp = type -> match ,

variable_name: match
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations {'type'}

variable_name: cmp
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations {'type'}

variable_name: match_data
first_occurrence: . index_key . type = type , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = type -> match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations {'type'}

Fixed code 1:
if (type == NULL) return;
. match_data . cmp = type -> match ,

------------------------------------------------------------
476 Vulnerabilities found in row 7260:

link: https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81:

Vulnerability 1:
. match_data . cmp = user_match ,

variable_name: cmp
first_occurrence: . index_key . type = & key_type_request_key_auth , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = user_match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations set()

variable_name: user_match
first_occurrence: . index_key . type = & key_type_request_key_auth , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = user_match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations set()

variable_name: match_data
first_occurrence: . index_key . type = & key_type_request_key_auth , . index_key . description = description , . cred = current_cred ( ) , <S2SV_StartBug> . match_data . cmp = user_match , <S2SV_EndBug> . match_data . raw_data = description , . match_data . lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT ,
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7287:

link: https://github.com/torvalds/linux/commit/c2349758acf1874e4c2b93fe41d072336f1a31d0:

Vulnerability 1:
if ( ret || cm_id -> device -> node_type != RDMA_NODE_IB_CA )

variable_name: RDMA_NODE_IB_CA
first_occurrence: <S2SV_StartBug> if ( ret || cm_id -> device -> node_type != RDMA_NODE_IB_CA ) <S2SV_EndBug> ret = - EADDRNOTAVAIL ;
pointer_declarations {'device', 'cm_id'}

variable_name: ret
first_occurrence: int ret ;
pointer_declarations set()

variable_name: node_type
first_occurrence: <S2SV_StartBug> if ( ret || cm_id -> device -> node_type != RDMA_NODE_IB_CA ) <S2SV_EndBug> ret = - EADDRNOTAVAIL ;
pointer_declarations {'device', 'cm_id'}

Fixed code 1:
if (device == NULL) return;
if (cm_id == NULL) return;
if ( ret || cm_id -> device -> node_type != RDMA_NODE_IB_CA )

------------------------------------------------------------
476 Vulnerabilities found in row 7322 Validated:

link: https://github.com/kkos/oniguruma/commit/c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c:

Vulnerability 1:
int cond_len , then_len , jump_len ;

variable_name: jump_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

variable_name: cond_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

variable_name: then_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
jump_len = cond_len + then_len + SIZE_OP_ATOMIC_END ;

variable_name: jump_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

variable_name: cond_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

variable_name: then_len
first_occurrence: <S2SV_StartBug> int cond_len , then_len , jump_len ;
pointer_declarations set()

variable_name: SIZE_OP_ATOMIC_END
first_occurrence: <S2SV_StartBug> jump_len = cond_len + then_len + SIZE_OP_ATOMIC_END ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
int else_len = compile_length_tree ( Else , reg ) ;

variable_name: compile_length_tree
first_occurrence: len = compile_length_tree ( NODE_QUANT_BODY ( qn ) , reg ) ;
pointer_declarations set()

variable_name: else_len
first_occurrence: <S2SV_StartBug> int else_len = compile_length_tree ( Else , reg ) ;
pointer_declarations set()

variable_name: reg
first_occurrence: CWE-476 static int compile_bag_node ( BagNode * node , regex_t * reg , ScanEnv * env )
pointer_declarations {'env', 'node', 'reg'}

variable_name: Else
first_occurrence: Node * Else = node -> te . Else ;
pointer_declarations {'node', 'Else'}

Fixed code 3:
if (reg == NULL) return;
if (Else == NULL) return;
int else_len = compile_length_tree ( Else , reg ) ;

------------------------------------------------------------
Vulnerability 4:
COP ( reg ) -> jump . addr = else_len + SIZE_INC_OP ;

variable_name: reg
first_occurrence: CWE-476 static int compile_bag_node ( BagNode * node , regex_t * reg , ScanEnv * env )
pointer_declarations {'env', 'node', 'reg'}

variable_name: else_len
first_occurrence: <S2SV_StartBug> int else_len = compile_length_tree ( Else , reg ) ;
pointer_declarations set()

variable_name: SIZE_INC_OP
first_occurrence: COP ( reg ) -> push . addr = SIZE_INC_OP + len + SIZE_OP_POP_OUT + SIZE_OP_JUMP ;
pointer_declarations set()

variable_name: COP
first_occurrence: COP ( reg ) -> push . addr = SIZE_INC_OP + len + SIZE_OP_POP_OUT + SIZE_OP_JUMP ;
pointer_declarations set()

variable_name: jump
first_occurrence: COP ( reg ) -> jump . addr = - ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP_OUT ) ;
pointer_declarations set()

variable_name: addr
first_occurrence: COP ( reg ) -> push . addr = SIZE_INC_OP + len + SIZE_OP_POP_OUT + SIZE_OP_JUMP ;
pointer_declarations set()

Fixed code 4:
if (reg == NULL) return;
COP ( reg ) -> jump . addr = else_len + SIZE_INC_OP ;

------------------------------------------------------------
Vulnerability 5:
r = compile_tree ( Else , reg , env ) ;

variable_name: compile_tree
first_occurrence: r = compile_tree ( NODE_QUANT_BODY ( qn ) , reg , env ) ;
pointer_declarations set()

variable_name: env
first_occurrence: CWE-476 static int compile_bag_node ( BagNode * node , regex_t * reg , ScanEnv * env )
pointer_declarations {'env', 'node', 'reg'}

variable_name: reg
first_occurrence: CWE-476 static int compile_bag_node ( BagNode * node , regex_t * reg , ScanEnv * env )
pointer_declarations {'env', 'node', 'reg'}

variable_name: r
first_occurrence: int r , len ;
pointer_declarations set()

variable_name: Else
first_occurrence: Node * Else = node -> te . Else ;
pointer_declarations {'node', 'Else'}

Fixed code 5:
if (env == NULL) return;
if (reg == NULL) return;
if (Else == NULL) return;
r = compile_tree ( Else , reg , env ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7323 Validated:

link: https://github.com/kkos/oniguruma/commit/c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c:

Vulnerability 1:
if ( IS_NOT_NULL ( Else ) ) {

variable_name: IS_NOT_NULL
first_occurrence: if ( IS_NOT_NULL ( Then ) )
pointer_declarations set()

variable_name: Else
first_occurrence: Node * Else = node -> te . Else ;
pointer_declarations {'node', 'Else'}

Fixed code 1:
if (Else == NULL) return;
if ( IS_NOT_NULL ( Else ) ) {

------------------------------------------------------------
Vulnerability 2:
len += SIZE_OP_JUMP ;

variable_name: len
first_occurrence: int len ;
pointer_declarations set()

variable_name: SIZE_OP_JUMP
first_occurrence: len = tlen + SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 7410:

link: https://github.com/jsummers/imageworsener/commit/ca3356eb49fee03e2eaf6b6aff826988c1122d93:

Vulnerability 1:
rctx -> image_height = ( int ) iw_get_ui16le ( & rctx -> rbuf [ 6 ] ) ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7413:

link: https://github.com/torvalds/linux/commit/cabfb3680f78981d26c078a26e5c748531257ebb:

Vulnerability 1:
NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;

variable_name: NTLMSSP_NEGOTIATE_EXTENDED_SEC
first_occurrence: flags = NTLMSSP_NEGOTIATE_56 | NTLMSSP_REQUEST_TARGET | NTLMSSP_NEGOTIATE_TARGET_INFO | NTLMSSP_NEGOTIATE_128 | NTLMSSP_NEGOTIATE_UNICODE | <S2SV_StartBug> NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;
pointer_declarations set()

variable_name: NTLMSSP_NEGOTIATE_NTLM
first_occurrence: flags = NTLMSSP_NEGOTIATE_56 | NTLMSSP_REQUEST_TARGET | NTLMSSP_NEGOTIATE_TARGET_INFO | NTLMSSP_NEGOTIATE_128 | NTLMSSP_NEGOTIATE_UNICODE | <S2SV_StartBug> NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( ses -> server -> sign ) {

variable_name: sign
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> if ( ses -> server -> sign )
pointer_declarations {'ses', 'server'}

Fixed code 2:
if (ses == NULL) return;
if (server == NULL) return;
if ( ses -> server -> sign ) {

------------------------------------------------------------
Vulnerability 3:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7414:

link: https://github.com/torvalds/linux/commit/cabfb3680f78981d26c078a26e5c748531257ebb:

Vulnerability 1:
NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;

variable_name: NTLMSSP_NEGOTIATE_EXTENDED_SEC
first_occurrence: flags = NTLMSSP_NEGOTIATE_56 | NTLMSSP_REQUEST_TARGET | NTLMSSP_NEGOTIATE_128 | NTLMSSP_NEGOTIATE_UNICODE | <S2SV_StartBug> NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;
pointer_declarations set()

variable_name: NTLMSSP_NEGOTIATE_NTLM
first_occurrence: flags = NTLMSSP_NEGOTIATE_56 | NTLMSSP_REQUEST_TARGET | NTLMSSP_NEGOTIATE_128 | NTLMSSP_NEGOTIATE_UNICODE | <S2SV_StartBug> NTLMSSP_NEGOTIATE_NTLM | NTLMSSP_NEGOTIATE_EXTENDED_SEC ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( ses -> server -> sign ) {

variable_name: sign
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> if ( ses -> server -> sign )
pointer_declarations {'ses', 'server'}

Fixed code 2:
if (ses == NULL) return;
if (server == NULL) return;
if ( ses -> server -> sign ) {

------------------------------------------------------------
Vulnerability 3:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7415:

link: https://github.com/torvalds/linux/commit/cabfb3680f78981d26c078a26e5c748531257ebb:

Vulnerability 1:
if ( ses -> server -> sign && ses -> server -> ops -> generate_signingkey ) {

variable_name: sign
first_occurrence: <S2SV_StartBug> if ( ses -> server -> sign && ses -> server -> ops -> generate_signingkey )
pointer_declarations {'ses', 'ops', 'server'}

variable_name: generate_signingkey
first_occurrence: <S2SV_StartBug> if ( ses -> server -> sign && ses -> server -> ops -> generate_signingkey )
pointer_declarations {'ses', 'ops', 'server'}

Fixed code 1:
if (ses == NULL) return;
if (ops == NULL) return;
if (server == NULL) return;
if ( ses -> server -> sign && ses -> server -> ops -> generate_signingkey ) {

------------------------------------------------------------
Vulnerability 2:
rc = ses -> server -> ops -> generate_signingkey ( ses ) ;

variable_name: rc
first_occurrence: int rc = 0 ;
pointer_declarations set()

variable_name: generate_signingkey
first_occurrence: <S2SV_StartBug> if ( ses -> server -> sign && ses -> server -> ops -> generate_signingkey )
pointer_declarations {'ses', 'ops', 'server'}

Fixed code 2:
if (ses == NULL) return;
if (ops == NULL) return;
if (server == NULL) return;
rc = ses -> server -> ops -> generate_signingkey ( ses ) ;

------------------------------------------------------------
Vulnerability 3:
goto keygen_exit ;

variable_name: keygen_exit
first_occurrence: <S2SV_StartBug> goto keygen_exit ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
keygen_exit :

variable_name: keygen_exit
first_occurrence: <S2SV_StartBug> goto keygen_exit ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7469 Validated:

link: https://github.com/vim/vim/commit/cd929f7ba8cc5b6d6dcf35c8b34124e969fed6b8:

Vulnerability 1:
state = vterm_state_new ( vt ) ;

variable_name: vterm_state_new
first_occurrence: <S2SV_StartBug> state = vterm_state_new ( vt ) ;
pointer_declarations set()

variable_name: vt
first_occurrence: CWE-476 VTermState * vterm_obtain_state ( VTerm * vt )
pointer_declarations {'vt', 'vterm_obtain_state'}

variable_name: state
first_occurrence: VTermState * state ;
pointer_declarations {'state'}

Fixed code 1:
if (vt == NULL) return;
if (state == NULL) return;
state = vterm_state_new ( vt ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7470 Validated:

link: https://github.com/vim/vim/commit/cd929f7ba8cc5b6d6dcf35c8b34124e969fed6b8:

Vulnerability 1:
VTermState * state = vterm_allocator_malloc ( vt , sizeof ( VTermState ) ) ;

variable_name: vterm_allocator_malloc
first_occurrence: <S2SV_StartBug> VTermState * state = vterm_allocator_malloc ( vt , sizeof ( VTermState ) ) ;
pointer_declarations {'state'}

variable_name: state
first_occurrence: <S2SV_StartBug> VTermState * state = vterm_allocator_malloc ( vt , sizeof ( VTermState ) ) ;
pointer_declarations {'state'}

variable_name: vt
first_occurrence: CWE-476 static VTermState * vterm_state_new ( VTerm * vt )
pointer_declarations {'vterm_state_new', 'vt'}

variable_name: VTermState
first_occurrence: CWE-476 static VTermState * vterm_state_new ( VTerm * vt )
pointer_declarations {'vterm_state_new', 'vt'}

Fixed code 1:
if (vt == NULL) return;
if (state == NULL) return;
VTermState * state = vterm_allocator_malloc ( vt , sizeof ( VTermState ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7471 Validated:

link: https://github.com/vim/vim/commit/cd929f7ba8cc5b6d6dcf35c8b34124e969fed6b8:

Vulnerability 1:
if ( buffer )

variable_name: buffer
first_occurrence: CWE-476 static ScreenCell * realloc_buffer ( VTermScreen * screen , ScreenCell * buffer , int new_rows , int new_cols )
pointer_declarations {'realloc_buffer', 'buffer', 'screen'}

Fixed code 1:
if (buffer == NULL) return;
if ( buffer )

------------------------------------------------------------
476 Vulnerabilities found in row 7472 Validated:

link: https://github.com/vim/vim/commit/cd929f7ba8cc5b6d6dcf35c8b34124e969fed6b8:

Vulnerability 1:
if ( screen -> sb_buffer )

variable_name: sb_buffer
first_occurrence: <S2SV_StartBug> if ( screen -> sb_buffer ) <S2SV_EndBug> vterm_allocator_free ( screen -> vt , screen -> sb_buffer ) ;
pointer_declarations {'screen'}

Fixed code 1:
if (screen == NULL) return;
if ( screen -> sb_buffer )

------------------------------------------------------------
476 Vulnerabilities found in row 7473 Validated:

link: https://github.com/vim/vim/commit/cd929f7ba8cc5b6d6dcf35c8b34124e969fed6b8:

Vulnerability 1:
if ( ! state )

variable_name: state
first_occurrence: VTermState * state = vterm_obtain_state ( vt ) ;
pointer_declarations {'state'}

Fixed code 1:
if (state == NULL) return;
if ( ! state )

------------------------------------------------------------
Vulnerability 2:
screen = vterm_allocator_malloc ( vt , sizeof ( VTermScreen ) ) ;

variable_name: vterm_allocator_malloc
first_occurrence: <S2SV_StartBug> screen = vterm_allocator_malloc ( vt , sizeof ( VTermScreen ) ) ;
pointer_declarations set()

variable_name: screen
first_occurrence: VTermScreen * screen ;
pointer_declarations {'screen'}

variable_name: VTermScreen
first_occurrence: CWE-476 static VTermScreen * screen_new ( VTerm * vt )
pointer_declarations {'screen_new', 'vt'}

variable_name: vt
first_occurrence: CWE-476 static VTermScreen * screen_new ( VTerm * vt )
pointer_declarations {'screen_new', 'vt'}

Fixed code 2:
if (screen == NULL) return;
if (vt == NULL) return;
screen = vterm_allocator_malloc ( vt , sizeof ( VTermScreen ) ) ;

------------------------------------------------------------
Vulnerability 3:
vterm_state_set_callbacks ( screen -> state , & state_cbs , screen ) ;

variable_name: vterm_state_set_callbacks
first_occurrence: <S2SV_StartBug> vterm_state_set_callbacks ( screen -> state , & state_cbs , screen ) ;
pointer_declarations {'screen'}

variable_name: state_cbs
first_occurrence: <S2SV_StartBug> vterm_state_set_callbacks ( screen -> state , & state_cbs , screen ) ;
pointer_declarations {'screen'}

variable_name: state
first_occurrence: VTermState * state = vterm_obtain_state ( vt ) ;
pointer_declarations {'state'}

Fixed code 3:
if (screen == NULL) return;
if (state == NULL) return;
vterm_state_set_callbacks ( screen -> state , & state_cbs , screen ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7474 Validated:

link: https://github.com/vim/vim/commit/cd929f7ba8cc5b6d6dcf35c8b34124e969fed6b8:

Vulnerability 1:
if ( screen -> buffers [ 1 ] )

variable_name: buffers
first_occurrence: vterm_allocator_free ( screen -> vt , screen -> buffers [ 0 ] ) ;
pointer_declarations {'screen'}

Fixed code 1:
if (screen == NULL) return;
if ( screen -> buffers [ 1 ] )

------------------------------------------------------------
476 Vulnerabilities found in row 7475:

link: https://github.com/vim/vim/commit/cd929f7ba8cc5b6d6dcf35c8b34124e969fed6b8:

Vulnerability 1:
{

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7476 Validated:

link: https://github.com/vim/vim/commit/cd929f7ba8cc5b6d6dcf35c8b34124e969fed6b8:

Vulnerability 1:
vt -> allocator = funcs ;

variable_name: allocator
first_occurrence: <S2SV_StartBug> vt -> allocator = funcs ;
pointer_declarations {'vt'}

variable_name: funcs
first_occurrence: CWE-476 VTerm * vterm_new_with_allocator ( int rows , int cols , VTermAllocatorFunctions * funcs , void * allocdata )
pointer_declarations {'vterm_new_with_allocator', 'funcs', 'allocdata'}

Fixed code 1:
if (funcs == NULL) return;
if (vt == NULL) return;
vt -> allocator = funcs ;

------------------------------------------------------------
Vulnerability 2:
vt -> outbuffer_len = 200 ;

variable_name: outbuffer_len
first_occurrence: <S2SV_StartBug> vt -> outbuffer_len = 200 ;
pointer_declarations {'vt'}

Fixed code 2:
if (vt == NULL) return;
vt -> outbuffer_len = 200 ;

------------------------------------------------------------
Vulnerability 3:
vt -> outbuffer = vterm_allocator_malloc ( vt , vt -> outbuffer_len ) ;

variable_name: outbuffer_len
first_occurrence: <S2SV_StartBug> vt -> outbuffer_len = 200 ;
pointer_declarations {'vt'}

variable_name: vterm_allocator_malloc
first_occurrence: vt -> parser . strbuffer = vterm_allocator_malloc ( vt , vt -> parser . strbuffer_len ) ;
pointer_declarations {'vt'}

variable_name: outbuffer
first_occurrence: <S2SV_StartBug> vt -> outbuffer = vterm_allocator_malloc ( vt , vt -> outbuffer_len ) ;
pointer_declarations {'vt'}

Fixed code 3:
if (vt == NULL) return;
vt -> outbuffer = vterm_allocator_malloc ( vt , vt -> outbuffer_len ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7480 Validated:

link: https://github.com/gpac/gpac/commit/ce01bd15f711d4575b7424b54b3a395ec64c1784:

Vulnerability 1:
fprintf ( dump , "%s" , sdp ) ;

variable_name: sdp
first_occurrence: const char * sdp ;
pointer_declarations {'sdp'}

variable_name: fprintf
first_occurrence: fprintf ( stderr ,  , szBuf ) ;
pointer_declarations set()

variable_name: dump
first_occurrence: FILE * dump ;
pointer_declarations {'dump'}

Fixed code 1:
if (sdp == NULL) return;
if (dump == NULL) return;
fprintf ( dump , "%s" , sdp ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7554:

link: https://github.com/krb5/krb5/commit/d1f707024f1d0af6e54a18885322d70fa15ec4d3:

Vulnerability 1:
if ( ent != NULL ) {

variable_name: ent
first_occurrence: LDAPMessage * result = NULL , * ent = NULL ;
pointer_declarations {'result', 'ent'}

Fixed code 1:
if (ent == NULL) return;
if ( ent != NULL ) {

------------------------------------------------------------
Vulnerability 2:
cleanup :

variable_name: cleanup
first_occurrence: goto cleanup ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7556:

link: https://github.com/radare/radare2/commit/d21e91f075a7a7a8ed23baa5c1bb1fac48313882:

Vulnerability 1:
if ( vdaux < 1 || ( char * ) UINTPTR_MAX - vstart < vdaux ) {

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: UINTPTR_MAX
first_occurrence: <S2SV_StartBug> if ( vdaux < 1 || ( char * ) UINTPTR_MAX - vstart < vdaux )
pointer_declarations {'UINTPTR_MAX'}

variable_name: vdaux
first_occurrence: verdef -> vd_version = READ16 ( dfs , j ) verdef -> vd_flags = READ16 ( dfs , j ) verdef -> vd_ndx = READ16 ( dfs , j ) verdef -> vd_cnt = READ16 ( dfs , j ) verdef -> vd_hash = READ32 ( dfs , j ) verdef -> vd_aux = READ32 ( dfs , j ) verdef -> vd_next = READ32 ( dfs , j ) int vdaux = verdef -> vd_aux ;
pointer_declarations {'verdef'}

Fixed code 1:
if (vstart == NULL) return;
if (UINTPTR_MAX == NULL) return;
if ( vdaux < 1 || ( char * ) UINTPTR_MAX - vstart < vdaux ) {

------------------------------------------------------------
369 Vulnerabilities found in row 7566:

link: https://github.com/uclouvain/openjpeg/commit/d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b:

Vulnerability 1:
if ( ! ( ( pi -> y % ( OPJ_INT32 ) ( comp -> dy << rpy ) == 0 ) || ( ( pi -> y == pi -> ty0 ) &&

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 7567:

link: https://github.com/uclouvain/openjpeg/commit/d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b:

Vulnerability 1:
if ( ! ( ( pi -> y % ( OPJ_INT32 ) ( comp -> dy << rpy ) == 0 ) || ( ( pi -> y == pi -> ty0 ) &&

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 7568:

link: https://github.com/uclouvain/openjpeg/commit/d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b:

Vulnerability 1:
if ( ! ( ( pi -> y % ( OPJ_INT32 ) ( comp -> dy << rpy ) == 0 ) || ( ( pi -> y == pi -> ty0 ) &&

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7577:

link: https://github.com/michaelforney/samurai/commit/d2af3bc375e2a77139c3a28d6128c60cd8d08655:

Vulnerability 1:
ruleaddvar ( r , var , val ) ;

variable_name: ruleaddvar
first_occurrence: <S2SV_StartBug> ruleaddvar ( r , var , val ) ;
pointer_declarations set()

variable_name: val
first_occurrence: struct evalstring * val ;
pointer_declarations {'val'}

variable_name: var
first_occurrence: char * var ;
pointer_declarations {'var'}

variable_name: r
first_occurrence: struct rule * r ;
pointer_declarations {'r'}

Fixed code 1:
if (r == NULL) return;
if (val == NULL) return;
if (var == NULL) return;
ruleaddvar ( r , var , val ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7587:

link: https://github.com/memcached/memcached/commit/d35334f368817a77a6bd1f33c6a5676b2c402c02:

Vulnerability 1:
} else if ( strcmp ( tokens [ 1 ] . value , "mode" ) == 0 && ntokens >= 3 &&

variable_name: ntokens
first_occurrence: CWE-476 static void process_lru_command ( conn * c , token_t * tokens , const size_t ntokens )
pointer_declarations {'c', 'tokens'}

variable_name: tokens
first_occurrence: CWE-476 static void process_lru_command ( conn * c , token_t * tokens , const size_t ntokens )
pointer_declarations {'c', 'tokens'}

variable_name: value
first_occurrence: if ( strcmp ( tokens [ 1 ] . value ,  ) == 0 && ntokens >= 7 )
pointer_declarations set()

variable_name: strcmp
first_occurrence: if ( strcmp ( tokens [ 1 ] . value ,  ) == 0 && ntokens >= 7 )
pointer_declarations set()

Fixed code 1:
if (tokens == NULL) return;
} else if ( strcmp ( tokens [ 1 ] . value , "mode" ) == 0 && ntokens >= 3 &&

------------------------------------------------------------
Vulnerability 2:
} else if ( strcmp ( tokens [ 1 ] . value , "temp_ttl" ) == 0 && ntokens >= 3 &&

variable_name: ntokens
first_occurrence: CWE-476 static void process_lru_command ( conn * c , token_t * tokens , const size_t ntokens )
pointer_declarations {'c', 'tokens'}

variable_name: tokens
first_occurrence: CWE-476 static void process_lru_command ( conn * c , token_t * tokens , const size_t ntokens )
pointer_declarations {'c', 'tokens'}

variable_name: value
first_occurrence: if ( strcmp ( tokens [ 1 ] . value ,  ) == 0 && ntokens >= 7 )
pointer_declarations set()

variable_name: strcmp
first_occurrence: if ( strcmp ( tokens [ 1 ] . value ,  ) == 0 && ntokens >= 7 )
pointer_declarations set()

Fixed code 2:
if (tokens == NULL) return;
} else if ( strcmp ( tokens [ 1 ] . value , "temp_ttl" ) == 0 && ntokens >= 3 &&

------------------------------------------------------------
476 Vulnerabilities found in row 7650:

link: https://github.com/torvalds/linux/commit/d4fdf8ba0e5808ba9ad6b44337783bd9935e0982:

Vulnerability 1:
if ( test_opt ( sbi , FLUSH_MERGE ) && ! f2fs_readonly ( sbi -> sb ) ) {

variable_name: f2fs_readonly
first_occurrence: <S2SV_StartBug> if ( test_opt ( sbi , FLUSH_MERGE ) && ! f2fs_readonly ( sbi -> sb ) )
pointer_declarations {'sbi'}

variable_name: FLUSH_MERGE
first_occurrence: <S2SV_StartBug> if ( test_opt ( sbi , FLUSH_MERGE ) && ! f2fs_readonly ( sbi -> sb ) )
pointer_declarations {'sbi'}

variable_name: test_opt
first_occurrence: if ( ! test_opt ( sbi , LFS ) ) sm_info -> ipu_policy = 1 << F2FS_IPU_FSYNC ;
pointer_declarations {'sm_info'}

variable_name: sb
first_occurrence: <S2SV_StartBug> if ( test_opt ( sbi , FLUSH_MERGE ) && ! f2fs_readonly ( sbi -> sb ) )
pointer_declarations {'sbi'}

Fixed code 1:
if (sbi == NULL) return;
if ( test_opt ( sbi , FLUSH_MERGE ) && ! f2fs_readonly ( sbi -> sb ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 7651:

link: https://github.com/torvalds/linux/commit/d4fdf8ba0e5808ba9ad6b44337783bd9935e0982:

Vulnerability 1:
init_thread :

variable_name: init_thread
first_occurrence: goto init_thread ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 7685:

link: https://github.com/mdadams/jasper/commit/d8c2604cd438c41ec72aff52c16ebd8183068020:

Vulnerability 1:
siz -> comps [ i ] . sgnd = ( tmp >> 7 ) & 1 ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7709 Validated:

link: https://github.com/gpac/gpac/commit/dae9900580a8888969481cd72035408091edb11b:

Vulnerability 1:
trak = gf_isom_get_track ( movie -> moov , i + 1 ) ;

variable_name: i
first_occurrence: u32 i , trackCount ;
pointer_declarations set()

variable_name: trak
first_occurrence: GF_TrackBox * trak ;
pointer_declarations {'trak'}

variable_name: gf_isom_get_track
first_occurrence: <S2SV_StartBug> trak = gf_isom_get_track ( movie -> moov , i + 1 ) ;
pointer_declarations {'movie'}

variable_name: moov
first_occurrence: if ( ! movie -> moov ) return GF_OK ;
pointer_declarations {'movie'}

Fixed code 1:
if (movie == NULL) return;
if (trak == NULL) return;
trak = gf_isom_get_track ( movie -> moov , i + 1 ) ;

------------------------------------------------------------
Vulnerability 2:
GF_SAFEALLOC ( writer , TrackWriter ) ;

variable_name: TrackWriter
first_occurrence: TrackWriter * writer ;
pointer_declarations {'writer'}

variable_name: GF_SAFEALLOC
first_occurrence: <S2SV_EndBug> <S2SV_StartBug> GF_SAFEALLOC ( writer , TrackWriter ) ;
pointer_declarations set()

variable_name: writer
first_occurrence: TrackWriter * writer ;
pointer_declarations {'writer'}

Fixed code 2:
if (writer == NULL) return;
GF_SAFEALLOC ( writer , TrackWriter ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7806:

link: https://github.com/torvalds/linux/commit/dd504589577d8e8e70f51f997ad487a4cb6c026f:

Vulnerability 1:
unsigned int len = sizeof ( * ctx ) + crypto_skcipher_reqsize ( private ) ;

variable_name: len
first_occurrence: <S2SV_StartBug> unsigned int len = sizeof ( * ctx ) + crypto_skcipher_reqsize ( private ) ;
pointer_declarations {'ctx'}

variable_name: crypto_skcipher_reqsize
first_occurrence: <S2SV_StartBug> unsigned int len = sizeof ( * ctx ) + crypto_skcipher_reqsize ( private ) ;
pointer_declarations {'ctx'}

variable_name: ctx
first_occurrence: struct skcipher_ctx * ctx ;
pointer_declarations {'ctx'}

Fixed code 1:
if (ctx == NULL) return;
unsigned int len = sizeof ( * ctx ) + crypto_skcipher_reqsize ( private ) ;

------------------------------------------------------------
Vulnerability 2:
ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) ,

variable_name: sk
first_occurrence: CWE-476 static int skcipher_accept_parent ( void * private , struct sock * sk )
pointer_declarations {'sk', 'private'}

variable_name: sock_kmalloc
first_occurrence: <S2SV_EndBug> ctx = sock_kmalloc ( sk , len , GFP_KERNEL ) ;
pointer_declarations set()

variable_name: crypto_skcipher_ivsize
first_occurrence: <S2SV_StartBug> ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) , <S2SV_EndBug> GFP_KERNEL ) ;
pointer_declarations {'ctx'}

variable_name: iv
first_occurrence: <S2SV_StartBug> ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) , <S2SV_EndBug> GFP_KERNEL ) ;
pointer_declarations {'ctx'}

Fixed code 2:
if (sk == NULL) return;
if (ctx == NULL) return;
ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) ,

------------------------------------------------------------
Vulnerability 3:
memset ( ctx -> iv , 0 , crypto_skcipher_ivsize ( private ) ) ;

variable_name: memset
first_occurrence: <S2SV_StartBug> memset ( ctx -> iv , 0 , crypto_skcipher_ivsize ( private ) ) ;
pointer_declarations {'ctx'}

variable_name: crypto_skcipher_ivsize
first_occurrence: <S2SV_StartBug> ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) , <S2SV_EndBug> GFP_KERNEL ) ;
pointer_declarations {'ctx'}

variable_name: iv
first_occurrence: <S2SV_StartBug> ctx -> iv = sock_kmalloc ( sk , crypto_skcipher_ivsize ( private ) , <S2SV_EndBug> GFP_KERNEL ) ;
pointer_declarations {'ctx'}

Fixed code 3:
if (ctx == NULL) return;
memset ( ctx -> iv , 0 , crypto_skcipher_ivsize ( private ) ) ;

------------------------------------------------------------
Vulnerability 4:
skcipher_request_set_tfm ( & ctx -> req , private ) ;

variable_name: req
first_occurrence: <S2SV_StartBug> skcipher_request_set_tfm ( & ctx -> req , private ) ;
pointer_declarations {'ctx'}

variable_name: skcipher_request_set_tfm
first_occurrence: <S2SV_StartBug> skcipher_request_set_tfm ( & ctx -> req , private ) ;
pointer_declarations {'ctx'}

Fixed code 4:
if (ctx == NULL) return;
skcipher_request_set_tfm ( & ctx -> req , private ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 7807:

link: https://github.com/torvalds/linux/commit/dd504589577d8e8e70f51f997ad487a4cb6c026f:

Vulnerability 1:
return crypto_alloc_skcipher ( name , type , mask ) ;

variable_name: type
first_occurrence: CWE-476 static void * skcipher_bind ( const char * name , u32 type , u32 mask )
pointer_declarations {'name', 'skcipher_bind'}

variable_name: crypto_alloc_skcipher
first_occurrence: <S2SV_StartBug> return crypto_alloc_skcipher ( name , type , mask ) ;
pointer_declarations set()

variable_name: mask
first_occurrence: CWE-476 static void * skcipher_bind ( const char * name , u32 type , u32 mask )
pointer_declarations {'name', 'skcipher_bind'}

variable_name: name
first_occurrence: CWE-476 static void * skcipher_bind ( const char * name , u32 type , u32 mask )
pointer_declarations {'name', 'skcipher_bind'}

Fixed code 1:
if (name == NULL) return;
return crypto_alloc_skcipher ( name , type , mask ) ;

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7808:

link: https://github.com/torvalds/linux/commit/dd504589577d8e8e70f51f997ad487a4cb6c026f:

Vulnerability 1:
crypto_free_skcipher ( private ) ;

variable_name: crypto_free_skcipher
first_occurrence: <S2SV_StartBug> crypto_free_skcipher ( private ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7809:

link: https://github.com/torvalds/linux/commit/dd504589577d8e8e70f51f997ad487a4cb6c026f:

Vulnerability 1:
return crypto_skcipher_setkey ( private , key , keylen ) ;

variable_name: crypto_skcipher_setkey
first_occurrence: <S2SV_StartBug> return crypto_skcipher_setkey ( private , key , keylen ) ;
pointer_declarations set()

variable_name: keylen
first_occurrence: CWE-476 static int skcipher_setkey ( void * private , const u8 * key , unsigned int keylen )
pointer_declarations {'key', 'private'}

variable_name: key
first_occurrence: CWE-476 static int skcipher_setkey ( void * private , const u8 * key , unsigned int keylen )
pointer_declarations {'key', 'private'}

Fixed code 1:
if (key == NULL) return;
return crypto_skcipher_setkey ( private , key , keylen ) ;

------------------------------------------------------------
Vulnerability 2:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7939 Validated:

link: https://github.com/gpac/gpac/commit/df8fffd839fe5ae9acd82d26fd48280a397411d9:

Vulnerability 1:
offset = saio -> offsets [ 0 ] + moof_offset ;

variable_name: moof_offset
first_occurrence: CWE-476 GF_Err MergeTrack ( GF_TrackBox * trak , GF_TrackFragmentBox * traf , GF_MovieFragmentBox * moof_box , u64 moof_offset , s32 compressed_diff , u64 * cumulated_offset , Bool is_first_merge )
pointer_declarations {'trak', 'cumulated_offset', 'traf', 'moof_box'}

variable_name: offset
first_occurrence: GF_Err stbl_AppendChunk ( GF_SampleTableBox * stbl , u64 offset ) ;
pointer_declarations {'stbl'}

variable_name: offsets
first_occurrence: <S2SV_StartBug> offset = saio -> offsets [ 0 ] + moof_offset ;
pointer_declarations {'saio'}

Fixed code 1:
if (saio == NULL) return;
offset = saio -> offsets [ 0 ] + moof_offset ;

------------------------------------------------------------
Vulnerability 2:
for ( i = 0 ; i < gf_list_count ( traf -> sai_sizes ) ; i ++ ) {

variable_name: i
first_occurrence: u32 i , j , chunk_size , track_num ;
pointer_declarations set()

variable_name: sai_sizes
first_occurrence: gf_isom_box_array_reset_parent ( & traf_clone -> child_boxes , traf_clone -> sai_sizes ) ;
pointer_declarations {'traf_clone'}

variable_name: gf_list_count
first_occurrence: else if ( DescIndex > gf_list_count ( trak -> Media -> information -> sampleTable -> SampleDescription -> child_boxes ) )
pointer_declarations {'information', 'trak', 'SampleDescription', 'Media', 'sampleTable'}

Fixed code 2:
if (traf == NULL) return;
for ( i = 0 ; i < gf_list_count ( traf -> sai_sizes ) ; i ++ ) {

------------------------------------------------------------
Vulnerability 3:
}

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7982:

link: https://github.com/mdadams/jasper/commit/e24bdc716c3327b067c551bc6cfb97fd2370358d:

Vulnerability 1:
box -> len = len ;

variable_name: len
first_occurrence: uint_fast32_t len ;
pointer_declarations set()

Fixed code 1:
if (box == NULL) return;
box -> len = len ;

------------------------------------------------------------
Vulnerability 2:
jas_eprintf ( "cannot<S2SV_blank>copy<S2SV_blank>box<S2SV_blank>data\\n" ) ;

variable_name: jas_eprintf
first_occurrence: jas_eprintf (  ) ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 7983:

link: https://github.com/mdadams/jasper/commit/e24bdc716c3327b067c551bc6cfb97fd2370358d:

Vulnerability 1:
jas_eprintf ( "box<S2SV_blank>type<S2SV_blank>%s\\n" , box -> info -> name ) ;

variable_name: name
first_occurrence: <S2SV_StartBug> jas_eprintf (  , box -> info -> name ) ;
pointer_declarations {'box', 'info'}

variable_name: jas_eprintf
first_occurrence: jas_eprintf (  ) ;
pointer_declarations set()

Fixed code 1:
if (box == NULL) return;
if (info == NULL) return;
jas_eprintf ( "box<S2SV_blank>type<S2SV_blank>%s\\n" , box -> info -> name ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 8044:

link: https://github.com/libav/libav/commit/e5b019725f53b79159931d3a7317107cbbfd0860:

Vulnerability 1:
if ( ( temp_buffer & 0xffffff00 ) != 0x100 )

variable_name: temp_buffer
first_occurrence: uint32_t temp_buffer = - 1 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
else if ( temp_buffer < 0x120 )

variable_name: temp_buffer
first_occurrence: uint32_t temp_buffer = - 1 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
else if ( temp_buffer < 0x130 )

variable_name: temp_buffer
first_occurrence: uint32_t temp_buffer = - 1 ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 8062:

link: https://github.com/michaelforney/samurai/commit/e84b6d99c85043fa1ba54851ee500540ec206918:

Vulnerability 1:
if ( fwrite ( s -> s , 1 , s -> n , f ) != s -> n || fflush ( f ) != 0 ) {

variable_name: n
first_occurrence: <S2SV_StartBug> if ( fwrite ( s -> s , 1 , s -> n , f ) != s -> n || fflush ( f ) != 0 )
pointer_declarations {'s'}

variable_name: f
first_occurrence: FILE * f ;
pointer_declarations {'f'}

variable_name: fflush
first_occurrence: <S2SV_StartBug> if ( fwrite ( s -> s , 1 , s -> n , f ) != s -> n || fflush ( f ) != 0 )
pointer_declarations {'s'}

variable_name: fwrite
first_occurrence: <S2SV_StartBug> if ( fwrite ( s -> s , 1 , s -> n , f ) != s -> n || fflush ( f ) != 0 )
pointer_declarations {'s'}

Fixed code 1:
if (s == NULL) return;
if (f == NULL) return;
if ( fwrite ( s -> s , 1 , s -> n , f ) != s -> n || fflush ( f ) != 0 ) {

------------------------------------------------------------
476 Vulnerabilities found in row 8070:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) ) {

variable_name: jp2_box_t
first_occurrence: CWE-476 jp2_box_t * jp2_box_create ( int type )
pointer_declarations {'jp2_box_create'}

variable_name: jas_malloc
first_occurrence: <S2SV_StartBug> if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) )
pointer_declarations set()

variable_name: box
first_occurrence: jp2_box_t * box ;
pointer_declarations {'box'}

Fixed code 1:
if (box == NULL) return;
if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) ) {

------------------------------------------------------------
Vulnerability 2:
memset ( box , 0 , sizeof ( jp2_box_t ) ) ;

variable_name: jp2_box_t
first_occurrence: CWE-476 jp2_box_t * jp2_box_create ( int type )
pointer_declarations {'jp2_box_create'}

variable_name: memset
first_occurrence: <S2SV_StartBug> memset ( box , 0 , sizeof ( jp2_box_t ) ) ;
pointer_declarations set()

variable_name: box
first_occurrence: jp2_box_t * box ;
pointer_declarations {'box'}

Fixed code 2:
if (box == NULL) return;
memset ( box , 0 , sizeof ( jp2_box_t ) ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 8071:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) ) {

variable_name: jp2_box_t
first_occurrence: CWE-476 jp2_box_t * jp2_box_get ( jas_stream_t * in )
pointer_declarations {'in', 'jp2_box_get'}

variable_name: jas_malloc
first_occurrence: <S2SV_StartBug> if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) )
pointer_declarations set()

variable_name: box
first_occurrence: jp2_box_t * box ;
pointer_declarations {'box'}

Fixed code 1:
if (box == NULL) return;
if ( ! ( box = jas_malloc ( sizeof ( jp2_box_t ) ) ) ) {

------------------------------------------------------------
Vulnerability 2:
"preliminary<S2SV_blank>processing<S2SV_blank>of<S2SV_blank>JP2<S2SV_blank>box:<S2SV_blank>type=%c%s%c<S2SV_blank>(0x%08x);<S2SV_blank>length=%d\\n" ,

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( box -> len == 1 ) {

variable_name: len
first_occurrence: uint_fast32_t len ;
pointer_declarations set()

Fixed code 3:
if (box == NULL) return;
if ( box -> len == 1 ) {

------------------------------------------------------------
476 Vulnerabilities found in row 8072:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
if ( jas_stream_copy ( out , tmpstream , box -> len - JP2_BOX_HDRLEN ( false ) ) ) {

variable_name: len
first_occurrence: box -> len = jas_stream_tell ( tmpstream ) + JP2_BOX_HDRLEN ( false ) ;
pointer_declarations {'box'}

variable_name: tmpstream
first_occurrence: jas_stream_t * tmpstream ;
pointer_declarations {'tmpstream'}

variable_name: jas_stream_copy
first_occurrence: <S2SV_StartBug> if ( jas_stream_copy ( out , tmpstream , box -> len - JP2_BOX_HDRLEN ( false ) ) )
pointer_declarations {'box'}

variable_name: JP2_BOX_HDRLEN
first_occurrence: box -> len = jas_stream_tell ( tmpstream ) + JP2_BOX_HDRLEN ( false ) ;
pointer_declarations {'box'}

variable_name: out
first_occurrence: CWE-476 int jp2_box_put ( jp2_box_t * box , jas_stream_t * out )
pointer_declarations {'out', 'box'}

Fixed code 1:
if (tmpstream == NULL) return;
if (out == NULL) return;
if (box == NULL) return;
if ( jas_stream_copy ( out , tmpstream , box -> len - JP2_BOX_HDRLEN ( false ) ) ) {

------------------------------------------------------------
476 Vulnerabilities found in row 8073:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
unsigned int i ;

variable_name: i
first_occurrence: <S2SV_StartBug> unsigned int i ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 8074:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
unsigned int channo ;

variable_name: channo
first_occurrence: <S2SV_StartBug> unsigned int channo ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 8075:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
unsigned int i ;

variable_name: i
first_occurrence: <S2SV_StartBug> unsigned int i ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 8076:

link: https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d:

Vulnerability 1:
if ( jp2_getuint16 ( in , & pclr -> numlutents ) ||

variable_name: numlutents
first_occurrence: <S2SV_StartBug> if ( jp2_getuint16 ( in , & pclr -> numlutents ) || <S2SV_EndBug> jp2_getuint8 ( in , & pclr -> numchans ) )
pointer_declarations {'pclr'}

variable_name: in
first_occurrence: CWE-476 static int jp2_pclr_getdata ( jp2_box_t * box , jas_stream_t * in )
pointer_declarations {'in', 'box'}

variable_name: jp2_getuint16
first_occurrence: <S2SV_StartBug> if ( jp2_getuint16 ( in , & pclr -> numlutents ) || <S2SV_EndBug> jp2_getuint8 ( in , & pclr -> numchans ) )
pointer_declarations {'pclr'}

Fixed code 1:
if (in == NULL) return;
if (pclr == NULL) return;
if ( jp2_getuint16 ( in , & pclr -> numlutents ) ||

------------------------------------------------------------
476 Vulnerabilities found in row 8093:

link: https://github.com/torvalds/linux/commit/ea2bc483ff5caada7c4aa0d5fbf87d3a6590273d:

Vulnerability 1:
sctp_sock_rfree ( skb ) ;

variable_name: sctp_sock_rfree
first_occurrence: <S2SV_StartBug> sctp_sock_rfree ( skb ) ;
pointer_declarations set()

variable_name: skb
first_occurrence: struct sk_buff * skb , * tmp ;
pointer_declarations {'tmp', 'skb'}

Fixed code 1:
if (skb == NULL) return;
sctp_sock_rfree ( skb ) ;

------------------------------------------------------------
Vulnerability 2:
sctp_skb_set_owner_r ( skb , newsk ) ;

variable_name: newsk
first_occurrence: CWE-476 static void sctp_sock_migrate ( struct sock * oldsk , struct sock * newsk , struct sctp_association * assoc , sctp_socket_type_t type )
pointer_declarations {'oldsk', 'newsk', 'assoc'}

variable_name: sctp_skb_set_owner_r
first_occurrence: <S2SV_StartBug> sctp_skb_set_owner_r ( skb , newsk ) ;
pointer_declarations set()

variable_name: skb
first_occurrence: struct sk_buff * skb , * tmp ;
pointer_declarations {'tmp', 'skb'}

Fixed code 2:
if (newsk == NULL) return;
if (skb == NULL) return;
sctp_skb_set_owner_r ( skb , newsk ) ;

------------------------------------------------------------
Vulnerability 3:
sctp_sock_rfree ( skb ) ;

variable_name: sctp_sock_rfree
first_occurrence: <S2SV_StartBug> sctp_sock_rfree ( skb ) ;
pointer_declarations set()

variable_name: skb
first_occurrence: struct sk_buff * skb , * tmp ;
pointer_declarations {'tmp', 'skb'}

Fixed code 3:
if (skb == NULL) return;
sctp_sock_rfree ( skb ) ;

------------------------------------------------------------
Vulnerability 4:
sctp_skb_set_owner_r ( skb , newsk ) ;

variable_name: newsk
first_occurrence: CWE-476 static void sctp_sock_migrate ( struct sock * oldsk , struct sock * newsk , struct sctp_association * assoc , sctp_socket_type_t type )
pointer_declarations {'oldsk', 'newsk', 'assoc'}

variable_name: sctp_skb_set_owner_r
first_occurrence: <S2SV_StartBug> sctp_skb_set_owner_r ( skb , newsk ) ;
pointer_declarations set()

variable_name: skb
first_occurrence: struct sk_buff * skb , * tmp ;
pointer_declarations {'tmp', 'skb'}

Fixed code 4:
if (newsk == NULL) return;
if (skb == NULL) return;
sctp_skb_set_owner_r ( skb , newsk ) ;

------------------------------------------------------------
Vulnerability 5:
sctp_clear_pd ( oldsk ) ;

variable_name: oldsk
first_occurrence: CWE-476 static void sctp_sock_migrate ( struct sock * oldsk , struct sock * newsk , struct sctp_association * assoc , sctp_socket_type_t type )
pointer_declarations {'oldsk', 'newsk', 'assoc'}

variable_name: sctp_clear_pd
first_occurrence: if ( assoc -> ulpq . pd_mode ) <S2SV_StartBug> sctp_clear_pd ( oldsk ) ;
pointer_declarations {'assoc'}

Fixed code 5:
if (oldsk == NULL) return;
sctp_clear_pd ( oldsk ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 8101:

link: https://github.com/torvalds/linux/commit/ea6789980fdaa610d7eb63602c746bf6ec70cd2b:

Vulnerability 1:
goto present_leaves_cluster_but_not_new_leaf ;

variable_name: present_leaves_cluster_but_not_new_leaf
first_occurrence: <S2SV_StartBug> goto present_leaves_cluster_but_not_new_leaf ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
present_leaves_cluster_but_not_new_leaf :

variable_name: present_leaves_cluster_but_not_new_leaf
first_occurrence: <S2SV_StartBug> goto present_leaves_cluster_but_not_new_leaf ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 8112:

link: https://github.com/libexif/exif/commit/eb84b0e3c5f2a86013b6fcfb800d187896a648fa:

Vulnerability 1:
if ( ! strlen ( text ) ) return "empty<S2SV_blank>string" ;

variable_name: text
first_occurrence: CWE-476 static const char * escape_xml ( const char * text )
pointer_declarations {'text', 'escape_xml'}

variable_name: strlen
first_occurrence: <S2SV_StartBug> if ( ! strlen ( text ) ) return  ;
pointer_declarations set()

Fixed code 1:
if (text == NULL) return;
if ( ! strlen ( text ) ) return "empty<S2SV_blank>string" ;

------------------------------------------------------------
476 Vulnerabilities found in row 8137:

link: https://github.com/torvalds/linux/commit/ec0223ec48a90cb605244b45f7c62de856403729:

Vulnerability 1:
auth . skb = chunk -> auth_chunk ;

variable_name: auth
first_occurrence: struct sctp_chunk auth ;
pointer_declarations set()

variable_name: auth_chunk
first_occurrence: if ( chunk -> auth_chunk )
pointer_declarations {'chunk'}

variable_name: skb
first_occurrence: chunk -> subh . cookie_hdr = ( struct sctp_signed_cookie * ) chunk -> skb -> data ;
pointer_declarations {'chunk', 'skb'}

Fixed code 1:
if (chunk == NULL) return;
if (skb == NULL) return;
auth . skb = chunk -> auth_chunk ;

------------------------------------------------------------
369 Vulnerabilities found in row 8156:

link: https://github.com/GNOME/librsvg/commit/ecf9267a24b2c3c0cd211dbdfa9ef2232511972a:

Vulnerability 1:
gint * ac ;

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 8157:

link: https://github.com/GNOME/librsvg/commit/ecf9267a24b2c3c0cd211dbdfa9ef2232511972a:

Vulnerability 1:
gboolean use_box_blur ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
sy = 0.0 ;

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 3:
if ( use_box_blur ) {

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 4:
col_buffer = g_new0 ( guchar , height * bpp * 2 ) ;

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 8165:

link: https://github.com/pgbouncer/pgbouncer/commit/edab5be6665b9e8de66c25ba527509b229468573:

Vulnerability 1:
if ( ! * passwd || ! * user -> passwd )

variable_name: passwd
first_occurrence: CWE-476 static bool check_client_passwd ( PgSocket * client , const char * passwd )
pointer_declarations {'client', 'passwd'}

Fixed code 1:
if (user == NULL) return;
if (passwd == NULL) return;
if ( ! * passwd || ! * user -> passwd )

------------------------------------------------------------
476 Vulnerabilities found in row 8219:

link: https://github.com/torvalds/linux/commit/f0d1762554014ce0ae347b9f0d088f2c157c8c72:

Vulnerability 1:
blk_cleanup_queue ( cd -> disk -> queue ) ;

variable_name: queue
first_occurrence: <S2SV_StartBug> blk_cleanup_queue ( cd -> disk -> queue ) ;
pointer_declarations {'disk', 'cd'}

variable_name: blk_cleanup_queue
first_occurrence: <S2SV_StartBug> blk_cleanup_queue ( cd -> disk -> queue ) ;
pointer_declarations {'disk', 'cd'}

Fixed code 1:
if (disk == NULL) return;
if (cd == NULL) return;
blk_cleanup_queue ( cd -> disk -> queue ) ;

------------------------------------------------------------
476 Vulnerabilities found in row 8220:

link: https://github.com/torvalds/linux/commit/f0d1762554014ce0ae347b9f0d088f2c157c8c72:

Vulnerability 1:
disk -> queue = NULL ;

variable_name: queue
first_occurrence: disk -> queue = blk_mq_init_sq_queue ( & cd -> tag_set , & pcd_mq_ops , 1 , BLK_MQ_F_SHOULD_MERGE ) ;
pointer_declarations {'disk', 'cd'}

Fixed code 1:
if (disk == NULL) return;
disk -> queue = NULL ;

------------------------------------------------------------
476 Vulnerabilities found in row 8253:

link: https://github.com/torvalds/linux/commit/f3069c6d33f6ae63a1668737bc78aaaa51bff7ca:

Vulnerability 1:
if ( rs -> rs_bound_addr == 0 ) {

variable_name: rs_bound_addr
first_occurrence: <S2SV_StartBug> if ( rs -> rs_bound_addr == 0 )
pointer_declarations {'rs'}

Fixed code 1:
if (rs == NULL) return;
if ( rs -> rs_bound_addr == 0 ) {

------------------------------------------------------------
476 Vulnerabilities found in row 8256:

link: https://github.com/miniupnp/miniupnp/commit/f321c2066b96d18afa5158dfa2d2873a2957ef38:

Vulnerability 1:
rhost_old [ 0 ] = '\\0' ;

variable_name: rhost_old
first_occurrence: char rhost_old [ 32 ] ;
pointer_declarations {'rhost_old'}

Fixed code 1:
if (rhost_old == NULL) return;
rhost_old [ 0 ] = '\\0' ;

------------------------------------------------------------
369 Vulnerabilities found in row 8257:

link: https://github.com/torvalds/linux/commit/f3554aeb991214cbfafd17d55e2bfddb50282e32:

Vulnerability 1:
g -> head <= 0 ||

No fix needed for this vulnerability.
------------------------------------------------------------
369 Vulnerabilities found in row 8258:

link: https://github.com/torvalds/linux/commit/f3554aeb991214cbfafd17d55e2bfddb50282e32:

Vulnerability 1:
head_shift = ( F_SECT_PER_TRACK + 5 ) / 6 ;

divisor: 6
Fixed code 1:
if (6 == 0) {fprintf(stderr, "Error: Division by zero in operation\n"); return -1;}
head_shift = ( F_SECT_PER_TRACK + 5 ) / 6 ;

------------------------------------------------------------
476 Vulnerabilities found in row 8331:

link: https://github.com/libexif/exif/commit/f6334d9d32437ef13dc902f0a88a2be0063d9d1c:

Vulnerability 1:
for ( out = escaped , len = 0 ; * text ; ++ len , ++ out , ++ text ) {

variable_name: len
first_occurrence: size_t len ;
pointer_declarations set()

variable_name: escaped
first_occurrence: static char * escaped ;
pointer_declarations {'escaped'}

variable_name: text
first_occurrence: CWE-476 static const char * escape_xml ( const char * text )
pointer_declarations {'text', 'escape_xml'}

variable_name: out
first_occurrence: char * out ;
pointer_declarations {'out'}

Fixed code 1:
if (escaped == NULL) return;
if (text == NULL) return;
if (out == NULL) return;
for ( out = escaped , len = 0 ; * text ; ++ len , ++ out , ++ text ) {

------------------------------------------------------------
369 Vulnerabilities found in row 8415:

link: https://github.com/FFmpeg/FFmpeg/commit/fa19fbcf712a6a6cc5a5cfdc3254a97b9bce6582:

Vulnerability 1:
if ( track -> timescale > UINT16_MAX ) {

No fix needed for this vulnerability.
------------------------------------------------------------
476 Vulnerabilities found in row 8431:

link: https://github.com/radare/radare2/commit/fbaf24bce7ea4211e4608b3ab6c1b45702cb243d:

Vulnerability 1:
char key [ 32 ] = { 0 } ;

variable_name: key
first_occurrence: <S2SV_StartBug> char key [ 32 ] =
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
if ( vdaux < 1 || vstart + vdaux < vstart ) {

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: vdaux
first_occurrence: verdef -> vd_version = READ16 ( dfs , j ) verdef -> vd_flags = READ16 ( dfs , j ) verdef -> vd_ndx = READ16 ( dfs , j ) verdef -> vd_cnt = READ16 ( dfs , j ) verdef -> vd_hash = READ32 ( dfs , j ) verdef -> vd_aux = READ32 ( dfs , j ) verdef -> vd_next = READ32 ( dfs , j ) int vdaux = verdef -> vd_aux ;
pointer_declarations {'verdef'}

Fixed code 2:
if (vstart == NULL) return;
if ( vdaux < 1 || vstart + vdaux < vstart ) {

------------------------------------------------------------
Vulnerability 3:
vstart += vdaux ;

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: vdaux
first_occurrence: verdef -> vd_version = READ16 ( dfs , j ) verdef -> vd_flags = READ16 ( dfs , j ) verdef -> vd_ndx = READ16 ( dfs , j ) verdef -> vd_cnt = READ16 ( dfs , j ) verdef -> vd_hash = READ32 ( dfs , j ) verdef -> vd_aux = READ32 ( dfs , j ) verdef -> vd_next = READ32 ( dfs , j ) int vdaux = verdef -> vd_aux ;
pointer_declarations {'verdef'}

Fixed code 3:
if (vstart == NULL) return;
vstart += vdaux ;

------------------------------------------------------------
Vulnerability 4:
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

variable_name: Elf_
first_occurrence: CWE-476 static Sdb * store_versioninfo_gnu_verdef ( ELFOBJ * bin , Elf_ ( Shdr ) * shdr , int sz )
pointer_declarations {'bin', 'shdr', 'store_versioninfo_gnu_verdef'}

variable_name: Verdaux
first_occurrence: Elf_ ( Verdaux ) aux =
pointer_declarations set()

variable_name: vstart
first_occurrence: char * vstart = ( ( char * ) defs ) + i ;
pointer_declarations {'vstart', 'defs'}

variable_name: end
first_occurrence: char * end = NULL ;
pointer_declarations {'end'}

Fixed code 4:
if (vstart == NULL) return;
if (end == NULL) return;
if ( vstart > end || vstart + sizeof ( Elf_ ( Verdaux ) ) > end ) {

------------------------------------------------------------
476 Vulnerabilities found in row 8469:

link: https://github.com/libav/libav/commit/fe6eea99efac66839052af547426518efd970b24:

Vulnerability 1:
uint16_t auxsize ;

variable_name: uint16_t
first_occurrence: uint16_t asize ;
pointer_declarations set()

variable_name: auxsize
first_occurrence: <S2SV_StartBug> uint16_t auxsize ;
pointer_declarations set()

No fix needed for this vulnerability.
------------------------------------------------------------
Vulnerability 2:
av_get_packet ( pb , pkt , vsize ) ;

variable_name: pkt
first_occurrence: AVPacket * pkt ;
pointer_declarations {'pkt'}

variable_name: vsize
first_occurrence: uint32_t vsize ;
pointer_declarations set()

variable_name: av_get_packet
first_occurrence: <S2SV_StartBug> av_get_packet ( pb , pkt , vsize ) ;
pointer_declarations set()

variable_name: pb
first_occurrence: AVIOContext * pb = s -> pb ;
pointer_declarations {'s', 'pb'}

Fixed code 2:
if (pkt == NULL) return;
if (pb == NULL) return;
av_get_packet ( pb , pkt , vsize ) ;

------------------------------------------------------------
Vulnerability 3:
av_get_packet ( pb , pkt , asize ) ;

variable_name: pkt
first_occurrence: AVPacket * pkt ;
pointer_declarations {'pkt'}

variable_name: av_get_packet
first_occurrence: <S2SV_StartBug> av_get_packet ( pb , pkt , vsize ) ;
pointer_declarations set()

variable_name: asize
first_occurrence: uint16_t asize ;
pointer_declarations set()

variable_name: pb
first_occurrence: AVIOContext * pb = s -> pb ;
pointer_declarations {'s', 'pb'}

Fixed code 3:
if (pkt == NULL) return;
if (pb == NULL) return;
av_get_packet ( pb , pkt , asize ) ;

------------------------------------------------------------
617 Vulnerabilities found in row 8475:

link: https://github.com/krb5/krb5/commit/ffb35baac6981f9e8914f8f3bffd37f284b85970:

assertion 1:
assert ( state -> status != 0 )

Fixed code 1:
if (!(state -> status != 0)) {
    return;
} 
//assert ( state -> status != 0 )

assertion 2:
assert ( state )

Fixed code 2:
if (!(state)) {
    return;
} 
//assert ( state )

assertion 3:
assert ( did_log != 0 )

Fixed code 3:
if (!(did_log != 0)) {
    return;
} 
//assert ( did_log != 0 )

------------------------------------------------------------
617 Vulnerabilities found in row 8476:

link: https://github.com/krb5/krb5/commit/ffb35baac6981f9e8914f8f3bffd37f284b85970:

assertion 1:
assert ( isflagset ( c_flags , KRB5_KDB_FLAGS_S4U )

Fixed code 1:
if (!(isflagset ( c_flags , KRB5_KDB_FLAGS_S4U)) {
    return;
} 
//assert ( isflagset ( c_flags , KRB5_KDB_FLAGS_S4U )

assertion 2:
assert ( client == NULL )

Fixed code 2:
if (!(client == NULL)) {
    return;
} 
//assert ( client == NULL )

assertion 3:
assert ( stkt_server == NULL )

Fixed code 3:
if (!(stkt_server == NULL)) {
    return;
} 
//assert ( stkt_server == NULL )

assertion 4:
assert ( status != NULL )

Fixed code 4:
if (!(status != NULL)) {
    return;
} 
//assert ( status != NULL )

assertion 5:
assert ( krb5_is_tgs_principal ( header_ticket -> server )

Fixed code 5:
if (!(krb5_is_tgs_principal ( header_ticket -> server)) {
    return;
} 
//assert ( krb5_is_tgs_principal ( header_ticket -> server )

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
No assertions found needing repair.

------------------------------------------------------------
CWE-476: 359 found, 356 Vul 275 fixed.
CWE-369: 36 found, 36 Vul 7 fixed.
CWE-617: 71 found, 40 Vul 40 fixed.
